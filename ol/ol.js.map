{"version":3,"file":"ol.js","sources":["../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../../node_modules/rbush/node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/size.js","../ol/style/Image.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/style/IconImage.js","../ol/colorlike.js","../ol/css.js","../ol/render/canvas.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Icon.js","../ol/style/Text.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/render/canvas/style.js","../ol/layer/BaseVector.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/uri.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../ol/structs/RBush.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/flat/length.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/source/arcgisRest.js","../ol/source/static.js","../ol/source/ImageTile.js","../ol/source/wms.js","../ol/source/ogcTileUtil.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/render/canvas/ZIndexContext.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/UTFGrid.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/flat.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/proj/proj4.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/BaseTileRepresentation.js","../ol/webgl/TileTexture.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/renderer/webgl/TileLayer.js","../ol/renderer/webgl/FlowLayer.js","../ol/render/webgl/utils.js","../ol/webgl/PaletteTexture.js","../ol/expr/gpu.js","../ol/webgl/ShaderBuilder.js","../ol/layer/Flow.js","../ol/webgl/styleparser.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/renderer/webgl/worldUtil.js","../ol/layer/Heatmap.js","../ol/interaction/DragAndDrop.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/dist/ol.js","../ol/control/ZoomToExtent.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/geom/flat/topology.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragRotateAndZoom.js","../ol/layer/VectorImage.js","../ol/source/Cluster.js","../ol/source/Google.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/ImageStatic.js","../ol/source/ImageWMS.js","../ol/source/OGCMapTile.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/WMTS.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.2.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      const entry = this.pop();\n      if (entry instanceof Disposable) {\n        entry.dispose();\n      }\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @override\n   */\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function.\n   * @param {function(VectorRenderTile):void} removeSourceTiles Function.\n   */\n  constructor(\n    tileCoord,\n    state,\n    urlTileCoord,\n    getSourceTiles,\n    removeSourceTiles,\n  ) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.context_ = null;\n\n    /**\n     * Executor groups. Read/written by the renderer.\n     * @type {Array<import(\"./render/canvas/ExecutorGroup.js\").default>}\n     */\n    this.executorGroups = [];\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {!function(VectorRenderTile):void}\n     * @private\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext() {\n    if (!this.context_) {\n      this.context_ = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_;\n  }\n\n  /**\n   * @return {boolean} Tile has a rendering context.\n   */\n  hasContext() {\n    return !!this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.hasContext() ? this.getContext().canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   * @override\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.context_) {\n      releaseCanvas(this.context_);\n      canvasPool.push(this.context_.canvas);\n      this.context_ = null;\n    }\n    this.removeSourceTiles_(this);\n    this.sourceTiles.length = 0;\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().startsWith('ne');\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport {abstract, getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      \"Use the renderer's tile cache when not reprojecting.\",\n    );\n    return null;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   * @override\n   */\n  canExpireCache() {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @override\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(512);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord,\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord)),\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      }),\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection(),\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection,\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z,\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @override\n   */\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'anonymous'|'use-credentials'} CrossOriginAttribute\n */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {AbortSignal} signal An abort controller signal.\n * @property {CrossOriginAttribute} [crossOrigin] The cross-origin attribute for images.\n * @property {number} [maxY] The maximum y coordinate at the given z level.  Will be undefined if the\n * underlying tile grid does not have a known extent.\n */\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number, LoaderOptions) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n * @property {string} [key] Key for use in caching tiles.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @template {import(\"../Tile.js\").default} [TileType=DataTile]\n * @extends TileSource<TileType>\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n\n    /**\n     * @private\n     * @type {CrossOriginAttribute}\n     */\n    this.crossOrigin_ = options.crossOrigin || 'anonymous';\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!TileType} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      /** @type {import(\"../reproj/DataTile.js\").Options} */ (this.tileOptions),\n    );\n    const newTile = /** @type {TileType} */ (\n      /** @type {*} */ (new ReprojDataTile(options))\n    );\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n\n    const sourceLoader = this.loader_;\n\n    const controller = new AbortController();\n\n    /**\n     * @type {LoaderOptions}\n     */\n    const loaderOptions = {\n      signal: controller.signal,\n      crossOrigin: this.crossOrigin_,\n    };\n\n    const tileCoord = this.getTileCoordForTileUrlFunction([z, x, y]);\n    if (!tileCoord) {\n      return null;\n    }\n\n    const requestZ = tileCoord[0];\n    const requestX = tileCoord[1];\n    const requestY = tileCoord[2];\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(requestZ, requestX, requestY, loaderOptions);\n      });\n    }\n\n    /**\n     * @type {import(\"../DataTile.js\").Options}\n     */\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n        controller: controller,\n      },\n      this.tileOptions,\n    );\n\n    const tile = /** @type {TileType} */ (\n      /** @type {*} */ (new DataTile(options))\n    );\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @override\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return super.getTileCacheForProjection(projection);\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   * @override\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @override\n   */\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} url ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio ?? 1.5;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return () => {\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n  };\n}\n","/**\n * @module ol/source/ImageTile\n */\nimport DataTileSource from './DataTile.js';\nimport {expandUrl, pickUrl, renderXYZTemplate} from '../uri.js';\n\n/**\n * Image tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns an {@link import(\"../DataTile.js\").ImageLike image} or a promise for the same.\n *\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):(import(\"../DataTile.js\").ImageLike|Promise<import(\"../DataTile.js\").ImageLike>)} Loader\n */\n\n/**\n * @typedef {function(number, number, number, import(\"./DataTile.js\").LoaderOptions):string} UrlGetter\n */\n\n/**\n * @typedef {string | Array<string> | UrlGetter} UrlLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {UrlLike} [url] The image URL template.  In addition to a single URL template, an array of URL templates or a function\n * can be provided.  If a function is provided, it will be called with z, x, y tile coordinates and loader options and should\n * return a URL.\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns an {@link import(\"../DataTile.js\").ImageLike image} for a tile or a promise for the same.\n * The promise should not resolve until the image is loaded.  If the `url` option is provided, a loader will be created.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=true] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.\n * @property {import('./DataTile.js').CrossOriginAttribute} [crossOrigin='anonymous'] The crossOrigin property to pass to loaders for image data.\n */\n\nconst loadError = new Error('Image failed to load');\n\n/**\n * @param {string} template The image url template.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {import('./DataTile.js').LoaderOptions} options The loader options.\n * @return {Promise<HTMLImageElement>} Resolves with a loaded image.\n */\nfunction loadImage(template, z, x, y, options) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.crossOrigin = options.crossOrigin ?? null;\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', () => reject(loadError));\n    image.src = renderXYZTemplate(template, z, x, y, options.maxY);\n  });\n}\n\n/**\n * @param {Array<string>} templates The url templates.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromTemplates(templates) {\n  return function (z, x, y, options) {\n    const template = pickUrl(templates, z, x, y);\n    return loadImage(template, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlGetter} getter The url getter.\n * @return {Loader} The image loader.\n */\nfunction makeLoaderFromGetter(getter) {\n  return function (z, x, y, options) {\n    const url = getter(z, x, y, options);\n    return loadImage(url, z, x, y, options);\n  };\n}\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {Loader} The tile loader.\n */\nfunction makeLoaderFromUrlLike(url) {\n  /**\n   * @type {Loader}\n   */\n  let loader;\n\n  if (Array.isArray(url)) {\n    loader = makeLoaderFromTemplates(url);\n  } else if (typeof url === 'string') {\n    const urls = expandUrl(url);\n    loader = makeLoaderFromTemplates(urls);\n  } else if (typeof url === 'function') {\n    loader = makeLoaderFromGetter(url);\n  } else {\n    throw new Error(\n      'The url option must be a single template, an array of templates, or a function for getting a URL',\n    );\n  }\n  return loader;\n}\n\nlet keyCount = 0;\n\n/**\n * @param {UrlLike} url The URL-like option.\n * @return {string} A key for the URL.\n */\nfunction keyFromUrlLike(url) {\n  if (Array.isArray(url)) {\n    return url.join('\\n');\n  }\n\n  if (typeof url === 'string') {\n    return url;\n  }\n\n  ++keyCount;\n  return 'url-function-key-' + keyCount;\n}\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @extends DataTileSource<import(\"../ImageTile.js\").default>\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass ImageTileSource extends DataTileSource {\n  /**\n   * @param {Options} [options] DataTile source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {Loader}\n     */\n    let loader = options.loader;\n\n    /**\n     * @type {string}\n     */\n    let key;\n\n    if (options.url) {\n      loader = makeLoaderFromUrlLike(options.url);\n      key = keyFromUrlLike(options.url);\n    }\n\n    /**\n     * @type {import('./Source.js').State}\n     */\n    const state = !loader ? 'loading' : options.state;\n\n    const wrapX = options.wrapX === undefined ? true : options.wrapX;\n\n    super({\n      loader: loader,\n      key: key,\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize,\n      gutter: options.gutter,\n      maxResolution: options.maxResolution,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      state: state,\n      wrapX: wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      crossOrigin: options.crossOrigin,\n    });\n  }\n\n  /**\n   * @param {UrlLike} url The new URL.\n   * @api\n   */\n  setUrl(url) {\n    const loader = makeLoaderFromUrlLike(url);\n    this.setLoader(loader);\n    this.setKey(keyFromUrlLike(url));\n    if (this.getState() !== 'ready') {\n      this.setState('ready');\n    }\n  }\n}\n\nexport default ImageTileSource;\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  const bbox =\n    v13 && axisOrientation.startsWith('ne')\n      ? [extent[1], extent[0], extent[3], extent[2]]\n      : extent;\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(baseUrl, params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  if (options.params !== undefined && baseParams['LAYER'] === undefined) {\n    const layers = baseParams['LAYERS'];\n    const isSingleLayer = !Array.isArray(layers) || layers.length !== 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\nimport {error as logError} from '../console.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<string>} [orderedAxes] Axis order.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n * @property {Array<string>} [collections] Optional collections to append the URL with.\n */\n\n/**\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<string>} collections List of collections to include as query parameter.\n * @return {string} The tile URL template with appended collections query parameter.\n */\nexport function appendCollectionsQueryParam(tileUrlTemplate, collections) {\n  if (!collections.length) {\n    return tileUrlTemplate;\n  }\n\n  // making sure we can always construct a URL instance.\n  const url = new URL(tileUrlTemplate, 'file:/');\n\n  if (url.pathname.split('/').includes('collections')) {\n    logError(\n      'The \"collections\" query parameter cannot be added to collection endpoints',\n    );\n    return tileUrlTemplate;\n  }\n  // According to conformance class\n  // http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/collections-selection\n  // commata in the identifiers of the `collections` query parameter\n  // need to be URLEncoded, while the commata separating the identifiers\n  // should not.\n  const encodedCollections = collections\n    .map((c) => encodeURIComponent(c))\n    .join(',');\n\n  url.searchParams.append('collections', encodedCollections);\n  const baseUrl = tileUrlTemplate.split('?')[0];\n  const queryParams = decodeURIComponent(url.searchParams.toString());\n  return `${baseUrl}?${queryParams}`;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [collections] Optional collections to append the URL with.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType, collections) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  if (collections) {\n    tileUrlTemplate = appendCollectionsQueryParam(tileUrlTemplate, collections);\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @param {Array<string>} [collections] Optional collections to append the URL with.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes,\n  collections,\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  if (collections) {\n    tileUrlTemplate = appendCollectionsQueryParam(tileUrlTemplate, collections);\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits,\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const orderedAxes = tileMatrixSet.orderedAxes;\n  const axisOrientation = orderedAxes\n    ? orderedAxes\n        .slice(0, 2)\n        .map((s) => s.replace(/E|X|Lon/i, 'e').replace(/N|Y|Lat/i, 'n'))\n        .join('')\n    : projection.getAxisOrientation();\n  const backwards = !axisOrientation.startsWith('en');\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  /** @type {import('../Tile.js').UrlFunction} */\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  /** @type {string} */\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.collections,\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes,\n      sourceInfo.collections,\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme',\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet',\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection_ = undefined;\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection_) {\n      this.renderedProjection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection_) {\n      this.tileCache_.clear();\n      this.renderedProjection_ = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = new ImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.imageOps_ = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this.imageOps_) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this.onWorkerMessage_.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this.onWorkerMessage_.bind(this, 0),\n      );\n    }\n    /**\n     * @type {Array<Worker>}\n     * @private\n     */\n    this.workers_ = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this.queue_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxQueueLength_ = config.queue || Infinity;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.running_ = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this.dataLookup_ = {};\n\n    /**\n     * @type {Job|null}\n     * @private\n     */\n    this.job_ = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this.enqueue_({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this.dispatch_();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  enqueue_(job) {\n    this.queue_.push(job);\n    while (this.queue_.length > this.maxQueueLength_) {\n      this.queue_.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  dispatch_() {\n    if (this.running_ || this.queue_.length === 0) {\n      return;\n    }\n\n    const job = this.queue_.shift();\n    this.job_ = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this.workers_.length;\n    this.running_ = threads;\n    if (threads === 1) {\n      this.workers_[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this.workers_[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this.imageOps_,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  onWorkerMessage_(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this.dataLookup_[index] = event.data;\n    --this.running_;\n    if (this.running_ === 0) {\n      this.resolveJob_();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  resolveJob_() {\n    const job = this.job_;\n    const threads = this.workers_.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this.dataLookup_[0]['buffer']);\n      meta = this.dataLookup_[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this.dataLookup_[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this.dataLookup_[i]['meta'];\n      }\n    }\n    this.job_ = null;\n    this.dataLookup_ = {};\n    job.callback(\n      null,\n      new ImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this.dispatch_();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   * @override\n   */\n  disposeInternal() {\n    for (let i = 0; i < this.workers_.length; ++i) {\n      this.workers_[i].terminate();\n    }\n    this.workers_.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     * @private\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      /** @type {Array<string>} */\n      const attributions = [];\n      for (let i = 0, iMax = options.sources.length; i < iMax; ++i) {\n        const sourceOrLayer = options.sources[i];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const sourceAttributions = source.getAttributions()?.(frameState);\n        if (typeof sourceAttributions === 'string') {\n          attributions.push(sourceAttributions);\n        } else if (sourceAttributions !== undefined) {\n          attributions.push(...sourceAttributions);\n        }\n      }\n      return attributions;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n  },\n  'stamen_toner': {\n    extension: 'png',\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n  },\n  'alidade_smooth': {\n    extension: 'png',\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n  },\n  'alidade_satellite': {\n    extension: 'png',\n  },\n  'outdoors': {\n    extension: 'png',\n  },\n  'osm_bright': {\n    extension: 'png',\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(this, EventType.CHANGE, (e) => {\n        callback(this.getData(coordinate));\n      });\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   * @override\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection(),\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution']) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_,\n    );\n    return tile;\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, value, objectStack) {\n      nodeWriter.call(thisArg ?? this, node, value, objectStack);\n      const parent = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const parentNode = parent.node;\n      parentNode.appendChild(node);\n    }\n  );\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [text-background-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color. `'none'` means no fill and no hit detection.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              vectorRenderer.renderDeferred(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @override\n   */\n  preRender() {}\n\n  /**\n   * @override\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `STATIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @param {Float32Array|Uint32Array} array Array.\n   */\n  setArray(array) {\n    const ArrayType = getArrayClassForType(this.type_);\n    if (!(array instanceof ArrayType)) {\n      throw new Error(`Expected ${ArrayType}`);\n    }\n    this.array_ = array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/BaseTileRepresentation\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {import(\"../Tile.js\").default} BaseTileType\n */\n\n/**\n * @template {BaseTileType} TileType\n * @typedef {Object} TileRepresentationOptions\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n/**\n * @classdesc\n * Base class for representing a tile in a webgl context\n * @template {import(\"../Tile.js\").default} TileType\n * @abstract\n */\nclass BaseTileRepresentation extends EventTarget {\n  /**\n   * @param {TileRepresentationOptions<TileType>} options The tile representation options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n\n    /**\n     * @private\n     */\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.gutter = options.gutter || 0;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @protected\n     */\n    this.helper = options.helper;\n\n    this.loaded = false;\n    this.ready = false;\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   * @protected\n   */\n  uploadTile() {\n    abstract();\n  }\n\n  setReady() {\n    this.ready = true;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile();\n    }\n  }\n\n  /**\n   * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n   */\n  setHelper(helper) {\n    this.helper = helper;\n    if (this.helper && this.loaded) {\n      this.uploadTile();\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.setHelper(null);\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n}\n\nexport default BaseTileRepresentation;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate,\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data,\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileTexture extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0]),\n    );\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  /**\n   * @override\n   * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n   */\n  setHelper(helper) {\n    const gl = this.helper?.getGL();\n    if (gl) {\n      this.helper.deleteBuffer(this.coords);\n      for (let i = 0; i < this.textures.length; ++i) {\n        gl.deleteTexture(this.textures[i]);\n      }\n    }\n\n    super.setHelper(helper);\n\n    if (helper) {\n      helper.flushBufferData(this.coords);\n    }\n  }\n\n  /**\n   * @override\n   */\n  uploadTile() {\n    const helper = this.helper;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    this.textures.length = 0;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      this.setReady();\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter,\n      sourceTileSize[1] + 2 * this.gutter,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate,\n      );\n      this.setReady();\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate,\n      );\n    }\n\n    this.setReady();\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow,\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n\n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n\n  uniform vec2 u_screenSize;\n\n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n\n  uniform sampler2D u_image;\n  uniform float u_opacity;\n\n  varying vec2 v_texCoord;\n\n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     */\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    /**\n     * @private\n     */\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.renderTargetTexture_ = gl.createTexture();\n\n    /**\n     * @type {import('../size.js').Size|null}\n     * @private\n     */\n    this.renderTargetTextureSize_ = null;\n\n    /**\n     * @private\n     */\n    this.frameBuffer_ = gl.createFramebuffer();\n    /**\n     * @private\n     */\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    /**\n     * @private\n     */\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    /**\n     * @private\n     */\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    /**\n     * @private\n     */\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  getRenderTargetTexture() {\n    return this.renderTargetTexture_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const bufferKey = getUid(buf);\n    // Note: gl.deleteBuffer is not called here since we let WebGL garbage collect it automatically\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * @param {WebGLFramebuffer|null} frameBuffer The frame buffer.\n   * @param {WebGLTexture} [texture] The texture.\n   */\n  bindFrameBuffer(frameBuffer, texture) {\n    const gl = this.getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    if (texture) {\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        texture,\n        0,\n      );\n    }\n  }\n\n  /**\n   * Bind the frame buffer from the initial render.\n   */\n  bindInitialFrameBuffer() {\n    const gl = this.getGL();\n    const frameBuffer = this.postProcessPasses_[0].getFrameBuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    const texture = this.postProcessPasses_[0].getRenderTargetTexture();\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      texture,\n      0,\n    );\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Set up an attribute array buffer for use in the vertex shader.\n   * @param {import(\"./Buffer\").default} buffer The buffer.\n   * @param {string} attributeName The attribute name.\n   * @param {number} size The number of components per attribute vertex.\n   */\n  bindAttribute(buffer, attributeName, size) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    const index = this.getAttributeLocation(attributeName);\n    gl.enableVertexAttribArray(index);\n    gl.vertexAttribPointer(index, size, gl.FLOAT, false, 0, 0);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    if (frameState) {\n      this.applyFrameState(frameState);\n      this.applyUniforms(frameState);\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.  If a Uint8Array is provided for data, a size must also be provided.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement|Uint8Array|null} data Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @param {boolean} [nearest] Use gl.NEAREST for min/mag filter.\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture, nearest) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n    const filter = nearest ? gl.NEAREST : gl.LINEAR;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n\n    if (data instanceof Uint8Array) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        data,\n      );\n    } else if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    this.onMapChanged_ = () => {\n      this.clearCache();\n      this.removeHelper();\n    };\n\n    layer.addChangeListener(LayerProperty.MAP, this.onMapChanged_);\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * @protected\n   */\n  clearCache() {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearCache();\n    this.removeHelper();\n    this.getLayer()?.removeChangeListener(\n      LayerProperty.MAP,\n      this.onMapChanged_,\n    );\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z,\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @override\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.renderedProjection_) {\n      this.renderedProjection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection_) {\n      this.clearCache();\n      this.renderedProjection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload,\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection,\n            );\n            if (!tile) {\n              continue;\n            }\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            tileRepresentation.setTile(tile);\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z,\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid,\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter),\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter,\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha,\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload,\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n\n    // look for cached tiles to use if a target tile is not ready\n    if (z in representationsByZ) {\n      for (const tileRepresentation of representationsByZ[z]) {\n        const tile = tileRepresentation.tile;\n        if (\n          (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n          tile.getState() === TileState.EMPTY\n        ) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        if (tileRepresentation.ready) {\n          const alpha = tile.getAlpha(uid, time);\n          if (alpha === 1) {\n            // no need to look for alt tiles\n            tile.endTransition(uid);\n            continue;\n          }\n          blend = true;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          alphaLookup[tileCoordKey] = alpha;\n        }\n        this.renderComplete = false;\n\n        // first look for child tiles (at z + 1)\n        const coveredByChildren = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          z + 1,\n          tileRepresentationLookup,\n        );\n\n        if (coveredByChildren) {\n          continue;\n        }\n\n        // next look for parent tiles\n        const minZoom = tileGrid.getMinZoom();\n        for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n          const coveredByParent = this.findAltTiles_(\n            tileGrid,\n            tileCoord,\n            parentZ,\n            tileRepresentationLookup,\n          );\n\n          if (coveredByParent) {\n            break;\n          }\n        }\n      }\n    }\n\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ),\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    if (z in representationsByZ) {\n      for (const tileRepresentation of representationsByZ[z]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          this.drawTile_(\n            frameState,\n            tileRepresentation,\n            z,\n            gutter,\n            extent,\n            alphaLookup,\n            tileGrid,\n          );\n        }\n      }\n    }\n\n    this.beforeFinalize(frameState);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  beforeFinalize(frameState) {\n    return;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ,\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @override\n   */\n  clearCache() {\n    super.clearCache();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose(),\n    );\n    tileRepresentationCache.clear();\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n\n    this.tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.setHelper(this.helper),\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @template {import(\"../../layer/WebGLTile.js\").default|import(\"../../layer/Flow.js\").default} LayerType\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   * @override\n   */\n  reset(options) {\n    super.reset(options);\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        // upload the texture data\n        paletteTexture.getTexture(gl);\n      }\n    }\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n\n    const gl = this.helper.getGL();\n    for (const paletteTexture of this.paletteTextures_) {\n      // upload the texture data\n      paletteTexture.getTexture(gl);\n    }\n\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  /**\n   * @override\n   */\n  removeHelper() {\n    if (this.helper) {\n      const gl = this.helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * @override\n   */\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  /**\n   * @override\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  /**\n   * @override\n   */\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      for (const paletteTexture of this.paletteTextures_) {\n        paletteTexture.delete(gl);\n      }\n      this.paletteTextures_.length = 0;\n\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/FlowLayer\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLTileLayerRenderer from './TileLayer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {DefaultUniform} from '../../webgl/Helper.js';\n\n/**\n * @typedef {import(\"../../layer/Flow.js\").default} LayerType\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} maxSpeed The maximum particle speed in the input data.\n * @property {number} [speedFactor=0.001] A larger factor increases the rate at which particles cross the screen.\n * @property {number} [particles=65536] The number of particles to render.\n * @property {number} [cacheSize=512] The texture cache size.\n * @property {string} tileVertexShader The flow tile vertex shader.\n * @property {string} tileFragmentShader The flow tile fragment shader.\n * @property {string} textureVertexShader Generic texture fragment shader.\n * @property {string} textureFragmentShader Generic texture fragment shader.\n * @property {string} particlePositionVertexShader The particle position vertex shader.\n * @property {string} particlePositionFragmentShader The particle position fragment shader.\n * @property {string} particleColorVertexShader The particle color vertex shader.\n * @property {string} particleColorFragmentShader The particle color fragment shader.\n */\n\n/**\n * Shader uniforms.\n * @enum {string}\n */\nexport const U = {\n  TEXTURE: 'u_texture',\n  VELOCITY_TEXTURE: 'u_velocityTexture',\n  POSITION_TEXTURE: 'u_positionTexture',\n  PARTICLE_COUNT_SQRT: 'u_particleCountSqrt',\n  MAX_SPEED: 'u_maxSpeed',\n  GAIN: 'u_gain',\n  OFFSET: 'u_offset',\n  IS_FLOAT: 'u_isFloat',\n  RANDOM_SEED: 'u_randomSeed',\n  SPEED_FACTOR: 'u_speedFactor',\n  DROP_RATE: 'u_dropRate',\n  DROP_RATE_BUMP: 'u_dropRateBump',\n  OPACITY: 'u_opacity',\n  ROTATION: DefaultUniform.ROTATION,\n  VIEWPORT_SIZE_PX: DefaultUniform.VIEWPORT_SIZE_PX,\n};\n\n/**\n * Shader attributes.\n * @enum {string}\n */\nexport const A = {\n  POSITION: 'a_position',\n  INDEX: 'a_index',\n};\n\n/**\n * Shader varyings.\n * @enum {string}\n */\nexport const V = {\n  POSITION: 'v_position',\n};\n\n/**\n * @classdesc\n * Experimental WebGL renderer for vector fields.\n * @extends {WebGLTileLayerRenderer<LayerType>}\n */\nclass FlowLayerRenderer extends WebGLTileLayerRenderer {\n  /**\n   * @param {LayerType} layer The tiled field layer.\n   * @param {Options} options The renderer options.\n   */\n  constructor(layer, options) {\n    super(layer, {\n      vertexShader: options.tileVertexShader,\n      fragmentShader: options.tileFragmentShader,\n      cacheSize: options.cacheSize,\n      // TODO: rework the post-processing logic\n      // see https://github.com/openlayers/openlayers/issues/16120\n      postProcesses: [{}],\n      uniforms: {\n        [U.MAX_SPEED]: options.maxSpeed,\n      },\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particleColorFragmentShader_ = options.particleColorFragmentShader;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.velocityTexture_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.particleCountSqrt_ = options.particles\n      ? Math.ceil(Math.sqrt(options.particles))\n      : 256;\n\n    /**\n     * @type {WebGLArrayBuffer}\n     * @private\n     */\n    this.particleIndexBuffer_;\n\n    /**\n     * @type {WebGLArrayBuffer}\n     * @private\n     */\n    this.quadBuffer_;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.particlePositionProgram_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particlePositionVertexShader_ = options.particlePositionVertexShader;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particlePositionFragmentShader_ =\n      options.particlePositionFragmentShader;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.previousPositionTexture_;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.nextPositionTexture_;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.particleColorProgram_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particleColorVertexShader_ = options.particleColorVertexShader;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.particleColorFragmentShader_ = options.particleColorFragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.textureProgram_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.textureVertexShader_ = options.textureVertexShader;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.textureFragmentShader_ = options.textureFragmentShader;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.previousTrailsTexture_;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.nextTrailsTexture_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.fadeOpacity_ = 0.996; // how fast the particle trails fade on each frame\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxSpeed_ = options.maxSpeed;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.speedFactor_ = options.speedFactor || 0.001;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dropRate_ = 0.003; // how often the particles move to a random place\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dropRateBump_ = 0.01; // drop rate increase relative to individual particle speed\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tempVec2_ = [0, 0];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedWidth_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedHeight_ = 0;\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    super.afterHelperCreated();\n    const helper = this.helper;\n\n    const gl = helper.getGL();\n    this.framebuffer_ = gl.createFramebuffer();\n\n    const particleCount = this.particleCountSqrt_ * this.particleCountSqrt_;\n    const particleIndices = new Float32Array(particleCount);\n    for (let i = 0; i < particleCount; ++i) {\n      particleIndices[i] = i;\n    }\n    const particleIndexBuffer = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    particleIndexBuffer.setArray(particleIndices);\n    helper.flushBufferData(particleIndexBuffer);\n    this.particleIndexBuffer_ = particleIndexBuffer;\n\n    const quadIndices = new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1]);\n    const quadBuffer = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    quadBuffer.setArray(quadIndices);\n    helper.flushBufferData(quadBuffer);\n    this.quadBuffer_ = quadBuffer;\n\n    const particlePositions = new Uint8Array(particleCount * 4);\n    for (let i = 0; i < particlePositions.length; ++i) {\n      particlePositions[i] = Math.floor(Math.random() * 256);\n    }\n\n    this.previousPositionTexture_ = helper.createTexture(\n      [this.particleCountSqrt_, this.particleCountSqrt_],\n      particlePositions,\n      null,\n      true,\n    );\n\n    this.nextPositionTexture_ = helper.createTexture(\n      [this.particleCountSqrt_, this.particleCountSqrt_],\n      particlePositions,\n      null,\n      true,\n    );\n\n    this.particlePositionProgram_ = helper.getProgram(\n      this.particlePositionFragmentShader_,\n      this.particlePositionVertexShader_,\n    );\n\n    this.particleColorProgram_ = helper.getProgram(\n      this.particleColorFragmentShader_,\n      this.particleColorVertexShader_,\n    );\n\n    this.textureProgram_ = helper.getProgram(\n      this.textureFragmentShader_,\n      this.textureVertexShader_,\n    );\n  }\n\n  createSizeDependentTextures_() {\n    const helper = this.helper;\n    const gl = helper.getGL();\n    const canvas = helper.getCanvas();\n    const screenWidth = canvas.width;\n    const screenHeight = canvas.height;\n\n    const blank = new Uint8Array(screenWidth * screenHeight * 4);\n\n    if (this.nextTrailsTexture_) {\n      gl.deleteTexture(this.nextTrailsTexture_);\n    }\n    this.nextTrailsTexture_ = helper.createTexture(\n      [screenWidth, screenHeight],\n      blank,\n      null,\n      true,\n    );\n\n    if (this.previousTrailsTexture_) {\n      gl.deleteTexture(this.previousTrailsTexture_);\n    }\n    this.previousTrailsTexture_ = helper.createTexture(\n      [screenWidth, screenHeight],\n      blank,\n      null,\n      true,\n    );\n  }\n\n  /**\n   * @override\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  beforeFinalize(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n    const canvas = helper.getCanvas();\n    const screenWidth = canvas.width;\n    const screenHeight = canvas.height;\n\n    if (\n      this.renderedWidth_ != screenWidth ||\n      this.renderedHeight_ != screenHeight\n    ) {\n      this.createSizeDependentTextures_();\n    }\n\n    const size = [screenWidth, screenHeight];\n\n    // copy current frame buffer to the velocity texture\n    this.velocityTexture_ = helper.createTexture(\n      size,\n      null,\n      this.velocityTexture_,\n    );\n    gl.copyTexImage2D(\n      gl.TEXTURE_2D,\n      0,\n      gl.RGBA,\n      0,\n      0,\n      screenWidth,\n      screenHeight,\n      0,\n    );\n\n    this.drawParticleTrails_(frameState);\n    this.updateParticlePositions_(frameState);\n\n    frameState.animate = true;\n    this.renderedWidth_ = screenWidth;\n    this.renderedHeight_ = screenHeight;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  drawParticleTrails_(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.bindFrameBuffer(this.framebuffer_, this.nextTrailsTexture_);\n\n    this.drawTexture_(this.previousTrailsTexture_, this.fadeOpacity_);\n    this.drawParticleColor_(frameState);\n\n    helper.bindInitialFrameBuffer();\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    this.drawTexture_(this.nextTrailsTexture_, 1);\n    gl.disable(gl.BLEND);\n\n    const current = this.nextTrailsTexture_;\n    this.nextTrailsTexture_ = this.previousTrailsTexture_;\n    this.previousTrailsTexture_ = current;\n  }\n\n  /**\n   * @param {WebGLTexture} texture The texture to draw.\n   * @param {number} opacity The opacity.\n   */\n  drawTexture_(texture, opacity) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.useProgram(this.textureProgram_);\n    helper.bindTexture(texture, 0, U.TEXTURE);\n    helper.bindAttribute(this.quadBuffer_, A.POSITION, 2);\n    this.helper.setUniformFloatValue(U.OPACITY, opacity);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  drawParticleColor_(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.useProgram(this.particleColorProgram_);\n\n    const particleCount = this.particleCountSqrt_ * this.particleCountSqrt_;\n\n    helper.bindAttribute(this.particleIndexBuffer_, A.INDEX, 1);\n\n    helper.bindTexture(this.previousPositionTexture_, 0, U.POSITION_TEXTURE);\n    helper.bindTexture(this.velocityTexture_, 1, U.VELOCITY_TEXTURE);\n\n    this.helper.setUniformFloatValue(\n      U.PARTICLE_COUNT_SQRT,\n      this.particleCountSqrt_,\n    );\n\n    const rotation = this.tempVec2_;\n    rotation[0] = Math.cos(frameState.viewState.rotation);\n    rotation[1] = Math.sin(frameState.viewState.rotation);\n    this.helper.setUniformFloatVec2(U.ROTATION, rotation);\n\n    this.helper.setUniformFloatValue(U.MAX_SPEED, this.maxSpeed_);\n\n    gl.drawArrays(gl.POINTS, 0, particleCount);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  updateParticlePositions_(frameState) {\n    const helper = this.helper;\n    const gl = helper.getGL();\n\n    helper.useProgram(this.particlePositionProgram_);\n    gl.viewport(0, 0, this.particleCountSqrt_, this.particleCountSqrt_);\n    helper.bindFrameBuffer(this.framebuffer_, this.nextPositionTexture_);\n\n    helper.bindTexture(this.previousPositionTexture_, 0, U.POSITION_TEXTURE);\n    helper.bindTexture(this.velocityTexture_, 1, U.VELOCITY_TEXTURE);\n    helper.bindAttribute(this.quadBuffer_, A.POSITION, 2);\n\n    helper.setUniformFloatValue(U.RANDOM_SEED, Math.random());\n    helper.setUniformFloatValue(U.SPEED_FACTOR, this.speedFactor_);\n    helper.setUniformFloatValue(U.DROP_RATE, this.dropRate_);\n    helper.setUniformFloatValue(U.DROP_RATE_BUMP, this.dropRateBump_);\n\n    const rotation = this.tempVec2_;\n    rotation[0] = Math.cos(frameState.viewState.rotation);\n    rotation[1] = Math.sin(frameState.viewState.rotation);\n    this.helper.setUniformFloatVec2(U.ROTATION, rotation);\n\n    const size = frameState.size;\n    this.helper.setUniformFloatVec2(U.VIEWPORT_SIZE_PX, [size[0], size[1]]);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    const current = this.nextPositionTexture_;\n    this.nextPositionTexture_ = this.previousPositionTexture_;\n    this.previousPositionTexture_ = current;\n  }\n}\n\nexport default FlowLayerRenderer;\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 10; // base attributes: x0, y0, m0, x1, y1, m1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  const m0 = instructions[segmentStartIndex + 2];\n  const m1 = instructions[segmentEndIndex + 2];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    m0,\n    p1[0],\n    p1[1],\n    m1,\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   */\n  delete(gl) {\n    if (this.texture_) {\n      gl.deleteTexture(this.texture_);\n    }\n    this.texture_ = null;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  SizeType,\n  StringType,\n  computeGeometryType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  return arrayToGlsl([array[0] / 255, array[1] / 255, array[2] / 255, alpha]);\n}\n\n/**\n * Normalizes and converts a number or array toa `vec2` array compatible with GLSL.\n * @param {number|import('../size.js').Size} size Size.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function sizeToGlsl(size) {\n  const array = toSize(size);\n  return arrayToGlsl(array);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, type, parsingContext);\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.LineMetric]: () => 'currentLineMetric', // this variable is assumed to always be present in shaders, default is 0.\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), ${compiledArgs[1]})`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `vec4(${rgb.join(', ')}, ${alpha})`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  if ((expression.type & SizeType) > 0) {\n    return sizeToGlsl(\n      /** @type {number|import('../size.js').Size} */ (expression.value),\n    );\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\nfloat currentLineMetric = 0.; // an actual value will be used in the stroke shaders\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n *\n * A note on [alpha premultiplication](https://en.wikipedia.org/wiki/Alpha_compositing#Straight_versus_premultiplied):\n * The ShaderBuilder class expects all colors to **not having been alpha-premultiplied!** This is because alpha\n * premultiplication is done at the end of each fragment shader.\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_prop_hitColor = a_prop_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_measureStart;\nattribute float a_measureEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\nvarying float v_measureStart;\nvarying float v_measureEnd;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  currentLineMetric = vertexNumber < 1.5 ? a_measureStart : a_measureEnd;\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_prop_hitColor = a_prop_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n  v_measureStart = a_measureStart;\n  v_measureEnd = a_measureEnd;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\nvarying float v_measureStart;\nvarying float v_measureEnd;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float lengthToPoint = max(0., min(dot(segmentTangent, startToPoint), segmentLength));\n  float currentLengthPx = lengthToPoint + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  currentLineMetric = mix(v_measureStart, v_measureEnd, lengthToPoint / segmentLength);\n\n  if (${this.discardExpression_}) { discard; }\n\n  vec4 color = ${this.strokeColorExpression_};\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  color.a *= smoothstep(0.5, -0.5, distance);\n  gl_FragColor = color;\n  gl_FragColor.a *= u_globalAlpha;\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_prop_hitColor = a_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_};\n  gl_FragColor.a *= u_globalAlpha;\n  gl_FragColor.rgb *= gl_FragColor.a;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Flow\n */\nimport BaseTileLayer from './BaseTile.js';\nimport FlowLayerRenderer, {A, U, V} from '../renderer/webgl/FlowLayer.js';\nimport LayerProperty from './Property.js';\nimport {Attributes as BA, Uniforms as BU} from '../renderer/webgl/TileLayer.js';\nimport {ColorType} from '../expr/expression.js';\nimport {expressionToGlsl} from '../webgl/styleparser.js';\nimport {\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color` {@link import(\"../expr/expression.js\").ExpressionValue expression} using\n * the `['var', 'varName']` operator.  To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} maxSpeed The maximum particle speed.\n * @property {number} [speedFactor=0.001] A larger factor increases the rate at which particles cross the screen.\n * @property {number} [particles=65536] The number of particles to render.\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\nconst tileVertexShader = `\n  attribute vec2 ${BA.TEXTURE_COORD};\n  uniform mat4 ${BU.TILE_TRANSFORM};\n  uniform float ${BU.TEXTURE_PIXEL_WIDTH};\n  uniform float ${BU.TEXTURE_PIXEL_HEIGHT};\n  uniform float ${BU.TEXTURE_RESOLUTION};\n  uniform float ${BU.TEXTURE_ORIGIN_X};\n  uniform float ${BU.TEXTURE_ORIGIN_Y};\n  uniform float ${BU.DEPTH};\n\n  varying vec2 v_textureCoord;\n  varying vec2 v_mapCoord;\n\n  void main() {\n    v_textureCoord = ${BA.TEXTURE_COORD};\n    v_mapCoord = vec2(\n      ${BU.TEXTURE_ORIGIN_X} + ${BU.TEXTURE_RESOLUTION} * ${BU.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n      ${BU.TEXTURE_ORIGIN_Y} - ${BU.TEXTURE_RESOLUTION} * ${BU.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n    );\n    gl_Position = ${BU.TILE_TRANSFORM} * vec4(${BA.TEXTURE_COORD}, ${BU.DEPTH}, 1.0);\n  }\n`;\n\nconst tileFragmentShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  uniform vec4 ${BU.RENDER_EXTENT};\n  uniform float ${U.MAX_SPEED};\n  uniform sampler2D ${BU.TILE_TEXTURE_ARRAY}[1];\n\n  varying vec2 v_textureCoord;\n  varying vec2 v_mapCoord;\n\n  void main() {\n    if (\n      v_mapCoord[0] < ${BU.RENDER_EXTENT}[0] ||\n      v_mapCoord[1] < ${BU.RENDER_EXTENT}[1] ||\n      v_mapCoord[0] > ${BU.RENDER_EXTENT}[2] ||\n      v_mapCoord[1] > ${BU.RENDER_EXTENT}[3]\n    ) {\n      discard;\n    }\n\n    vec4 velocity = texture2D(${BU.TILE_TEXTURE_ARRAY}[0],  v_textureCoord);\n    gl_FragColor = vec4((velocity.xy + ${U.MAX_SPEED}) / (2.0 * ${U.MAX_SPEED}), 0, 1);\n  }\n`;\n\n/**\n * Sets up a varying position for rendering textures.\n */\nconst quadVertexShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  attribute vec2 ${A.POSITION};\n\n  varying vec2 ${V.POSITION};\n\n  void main() {\n    ${V.POSITION} = ${A.POSITION};\n    gl_Position = vec4(1.0 - 2.0 * ${A.POSITION}, 0, 1);\n  }\n`;\n\n/**\n * Sampes a texture and renders it with a new opacity.\n */\nconst textureFragmentShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  uniform sampler2D ${U.TEXTURE};\n  uniform float ${U.OPACITY};\n\n  varying vec2 ${V.POSITION};\n\n  void main() {\n    vec4 color = texture2D(${U.TEXTURE}, 1.0 - ${V.POSITION});\n    gl_FragColor = vec4(floor(255.0 * color * ${U.OPACITY}) / 255.0);\n  }\n`;\n\n/**\n * Samples current particle positions, determines new positions based on velocity, and\n * encodes the new position as a color.\n */\nconst particlePositionFragmentShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  uniform sampler2D ${U.POSITION_TEXTURE};\n  uniform sampler2D ${U.VELOCITY_TEXTURE};\n  uniform float ${U.RANDOM_SEED};\n  uniform float ${U.SPEED_FACTOR};\n  uniform float ${U.DROP_RATE};\n  uniform float ${U.DROP_RATE_BUMP};\n  uniform vec2 ${U.ROTATION};\n  uniform vec2 ${U.VIEWPORT_SIZE_PX};\n\n  varying vec2 ${V.POSITION};\n\n  // pseudo-random generator\n  const vec3 randConstants = vec3(12.9898, 78.233, 4375.85453);\n\n  float rand(const vec2 co) {\n    float t = dot(randConstants.xy, co);\n    return fract(sin(t) * (randConstants.z + t));\n  }\n\n  void main() {\n    vec4 positionColor = texture2D(${U.POSITION_TEXTURE}, ${V.POSITION});\n\n    // decode particle position from pixel RGBA\n    vec2 particlePosition = vec2(\n      positionColor.r / 255.0 + positionColor.b,\n      positionColor.g / 255.0 + positionColor.a\n    );\n\n    vec4 velocityColor = texture2D(${U.VELOCITY_TEXTURE}, particlePosition);\n    if (velocityColor.a == 0.0) {\n      discard;\n    }\n\n    float vx = 2.0 * velocityColor.r - 1.0;\n    float vy = 2.0 * velocityColor.g - 1.0;\n\n    // normalized veloicty (magnitude 0 - 1)\n    vec2 velocity = vec2(\n      vx * ${U.ROTATION}.x - vy * ${U.ROTATION}.y,\n      vx * ${U.ROTATION}.y + vy * ${U.ROTATION}.x\n    );\n\n    // account for aspect ratio (square particle position texture, non-square map)\n    float aspectRatio = ${U.VIEWPORT_SIZE_PX}.x / ${U.VIEWPORT_SIZE_PX}.y;\n    vec2 offset = vec2(velocity.x / aspectRatio, velocity.y) * ${U.SPEED_FACTOR};\n\n    // update particle position, wrapping around the edge\n    particlePosition = fract(1.0 + particlePosition + offset);\n\n    // a random seed to use for the particle drop\n    vec2 seed = (particlePosition + ${V.POSITION}) * ${U.RANDOM_SEED};\n\n    // drop rate is a chance a particle will restart at random position, to avoid degeneration\n    float dropRate = ${U.DROP_RATE} + length(velocity) * ${U.DROP_RATE_BUMP};\n    float drop = step(1.0 - dropRate, rand(seed));\n\n    vec2 randomPosition = vec2(rand(seed + 1.3), rand(seed + 2.1));\n    particlePosition = mix(particlePosition, randomPosition, drop);\n\n    // encode the new particle position back into RGBA\n    gl_FragColor = vec4(\n      fract(particlePosition * 255.0),\n      floor(particlePosition * 255.0) / 255.0\n    );\n  }\n`;\n\n/**\n * Samples the particle position texture to decode the particle position\n * based on pixel color.\n */\nconst particleColorVertexShader = `\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  #else\n  precision mediump float;\n  #endif\n\n  attribute float ${A.INDEX};\n\n  uniform sampler2D ${U.POSITION_TEXTURE};\n  uniform float ${U.PARTICLE_COUNT_SQRT};\n\n  varying vec2 ${V.POSITION};\n\n  void main() {\n    vec4 color = texture2D(\n      ${U.POSITION_TEXTURE},\n      vec2(\n        fract(${A.INDEX} / ${U.PARTICLE_COUNT_SQRT}),\n        floor(${A.INDEX} / ${U.PARTICLE_COUNT_SQRT}) / ${U.PARTICLE_COUNT_SQRT}\n      )\n    );\n\n    ${V.POSITION} = vec2(\n      color.r / 255.0 + color.b,\n      color.g / 255.0 + color.a\n    );\n\n    gl_PointSize = 1.0;\n    gl_Position = vec4(\n      2.0 * ${V.POSITION}.x - 1.0,\n      2.0 * ${V.POSITION}.y - 1.0,\n      0,\n      1\n    );\n  }\n`;\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} tileVertexShader The flow tile vertex shader.\n * @property {string} tileFragmentShader The flow tile fragment shader.\n * @property {string} textureVertexShader Generic texture fragment shader.\n * @property {string} textureFragmentShader Generic texture fragment shader.\n * @property {string} particlePositionVertexShader The particle position vertex shader.\n * @property {string} particlePositionFragmentShader The particle position fragment shader.\n * @property {string} particleColorVertexShader The particle color vertex shader.\n * @property {string} particleColorFragmentShader The particle color fragment shader.\n */\n\n/**\n * @param {Style} style The layer style.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style) {\n  const context = newCompilationContext();\n  context.inFragmentShader = true;\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  const variableNames = Object.keys(context.variables);\n  if (variableNames.length > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`,\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  for (const variableName of variableNames) {\n    if (!(variableName in style.variables)) {\n      throw new Error(`Missing '${variableName}' in style variables`);\n    }\n\n    const uniformName = uniformNameForVariable(variableName);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variableName];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const functionDefintions = Object.keys(context.functions).map(\n    function (name) {\n      return context.functions[name];\n    },\n  );\n\n  const particleColorFragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    uniform sampler2D ${U.VELOCITY_TEXTURE};\n    uniform float ${U.MAX_SPEED};\n    uniform vec2 ${U.ROTATION};\n\n    ${uniformDeclarations.join('\\n')}\n\n    varying vec2 ${V.POSITION};\n    \n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      vec4 velocityColor = texture2D(${U.VELOCITY_TEXTURE}, ${V.POSITION});\n\n      float vx = mix(-${U.MAX_SPEED}, ${U.MAX_SPEED}, velocityColor.r);\n      float vy = mix(-${U.MAX_SPEED}, ${U.MAX_SPEED}, velocityColor.g);\n\n      vec2 velocity = vec2(\n        vx * ${U.ROTATION}.x - vy * ${U.ROTATION}.y,\n        vx * ${U.ROTATION}.y + vy * ${U.ROTATION}.x\n      );\n\n      float v_prop_speed = length(velocity);\n\n      vec4 color;\n\n      ${pipeline.join('\\n')}\n\n      if (color.a == 0.0) {\n        discard;\n      }\n\n      gl_FragColor = color;\n    }\n  `;\n\n  return {\n    tileVertexShader,\n    tileFragmentShader,\n    particleColorVertexShader,\n    particleColorFragmentShader,\n    particlePositionVertexShader: quadVertexShader,\n    particlePositionFragmentShader,\n    textureVertexShader: quadVertexShader,\n    textureFragmentShader,\n  };\n}\n\n/**\n * @type {Array<SourceType>}\n */\nconst sources = [];\n\n/**\n * @classdesc\n * Experimental layer that renders particles moving through a vector field.\n *\n * @extends BaseTileLayer<SourceType, FlowLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass FlowLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Flow layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.maxSpeed;\n    delete baseOptions.speedFactor;\n    delete baseOptions.particles;\n    super(baseOptions);\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = options.style || {};\n\n    if (!(options.maxSpeed > 0)) {\n      throw new Error('maxSpeed is required');\n    }\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxSpeed_ = options.maxSpeed;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.speedFactor_ = options.speedFactor;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.particles_ = options.particles;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    sources[0] = source;\n    return sources;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_);\n\n    return new FlowLayerRenderer(this, {\n      ...parsedStyle,\n      cacheSize: this.getCacheSize(),\n      maxSpeed: this.maxSpeed_,\n      speedFactor: this.speedFactor_,\n      particles: this.particles_,\n    });\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n */\nFlowLayer.prototype.dispose;\n\nexport default FlowLayer;\n","/**\n * Utilities for parsing literal style objects\n * @module ol/webgl/styleparser\n */\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  SizeType,\n  StringType,\n  newParsingContext,\n} from '../expr/expression.js';\nimport {ShaderBuilder} from './ShaderBuilder.js';\nimport {asArray} from '../color.js';\nimport {\n  buildExpression,\n  getStringNumberEquivalent,\n  stringToGlsl,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext,\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nconst UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    fract(packedColor[1] / 256.0)\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nfunction getGlslSizeFromType(type) {\n  if (type === ColorType || type === SizeType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nfunction getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\n * @param {Object|string} input The hash input, either an object or string\n * @return {string} Hash (if the object cannot be serialized, it is based on `getUid`)\n */\nexport function computeHash(input) {\n  const hash = JSON.stringify(input)\n    .split('')\n    .reduce((prev, curr) => (prev << 5) - prev + curr.charCodeAt(0), 0);\n  return (hash >>> 0).toString();\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {'shape-'|'circle-'|'icon-'} prefix Properties prefix\n */\nfunction parseCommonSymbolProperties(style, builder, vertContext, prefix) {\n  if (`${prefix}radius` in style && prefix !== 'icon-') {\n    let radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius`],\n      NumberType,\n    );\n    if (`${prefix}radius2` in style) {\n      const radius2 = expressionToGlsl(\n        vertContext,\n        style[`${prefix}radius2`],\n        NumberType,\n      );\n      radius = `max(${radius}, ${radius2})`;\n    }\n    if (`${prefix}stroke-width` in style) {\n      radius = `(${radius} + ${expressionToGlsl(\n        vertContext,\n        style[`${prefix}stroke-width`],\n        NumberType,\n      )} * 0.5)`;\n    }\n    builder.setSymbolSizeExpression(`vec2(${radius} * 2. + 0.5)`); // adding some padding for antialiasing\n  }\n  if (`${prefix}scale` in style) {\n    const scale = expressionToGlsl(\n      vertContext,\n      style[`${prefix}scale`],\n      SizeType,\n    );\n    builder.setSymbolSizeExpression(\n      `${builder.getSymbolSizeExpression()} * ${scale}`,\n    );\n  }\n  if (`${prefix}displacement` in style) {\n    builder.setSymbolOffsetExpression(\n      expressionToGlsl(\n        vertContext,\n        style[`${prefix}displacement`],\n        NumberArrayType,\n      ),\n    );\n  }\n  if (`${prefix}rotation` in style) {\n    builder.setSymbolRotationExpression(\n      expressionToGlsl(vertContext, style[`${prefix}rotation`], NumberType),\n    );\n  }\n  if (`${prefix}rotate-with-view` in style) {\n    builder.setSymbolRotateWithView(!!style[`${prefix}rotate-with-view`]);\n  }\n}\n\n/**\n * @param {string} distanceField The distance field expression\n * @param {string|null} fillColor The fill color expression; null if no fill\n * @param {string|null} strokeColor The stroke color expression; null if no stroke\n * @param {string|null} strokeWidth The stroke width expression; null if no stroke\n * @param {string|null} opacity The opacity expression; null if no stroke\n * @return {string} The final color expression, based on the distance field and given params\n */\nfunction getColorFromDistanceField(\n  distanceField,\n  fillColor,\n  strokeColor,\n  strokeWidth,\n  opacity,\n) {\n  let color = 'vec4(0.)';\n  if (fillColor !== null) {\n    color = fillColor;\n  }\n  if (strokeColor !== null && strokeWidth !== null) {\n    const strokeFillRatio = `smoothstep(-${strokeWidth} + 0.63, -${strokeWidth} - 0.58, ${distanceField})`;\n    color = `mix(${strokeColor}, ${color}, ${strokeFillRatio})`;\n  }\n  const shapeOpacity = `(1.0 - smoothstep(-0.63, 0.58, ${distanceField}))`;\n  let result = `${color} * vec4(1.0, 1.0, 1.0, ${shapeOpacity})`;\n  if (opacity !== null) {\n    result = `${result} * vec4(1.0, 1.0, 1.0, ${opacity})`;\n  }\n  return result;\n}\n\n/**\n * This will parse an image property provided by `<prefix>-src`\n * The image size expression in GLSL will be returned\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {string} textureId A identifier that will be used in the generated uniforms: `sample2d u_texture<id>` and `vec2 u_texture<id>_size`\n * @return {string} The image size expression\n */\nfunction parseImageProperties(style, builder, uniforms, prefix, textureId) {\n  const image = new Image();\n  image.crossOrigin =\n    style[`${prefix}cross-origin`] === undefined\n      ? 'anonymous'\n      : style[`${prefix}cross-origin`];\n  image.src = style[`${prefix}src`];\n\n  // the size is provided asynchronously using a uniform\n  uniforms[`u_texture${textureId}_size`] = () => {\n    return image.complete ? [image.width, image.height] : [0, 0];\n  };\n  builder.addUniform(`vec2 u_texture${textureId}_size`);\n  const size = `u_texture${textureId}_size`;\n\n  uniforms[`u_texture${textureId}`] = image;\n  builder.addUniform(`sampler2D u_texture${textureId}`);\n  return size;\n}\n\n/**\n * This will parse an image's offset properties provided by `<prefix>-offset`, `<prefix>-offset-origin` and `<prefix>-size`\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {import(\"../expr/gpu.js\").CompilationContext} context Shader compilation context (vertex or fragment)\n * @param {string} imageSize Pixel size of the full image as a GLSL expression\n * @param {string} sampleSize Pixel size of the sample in the image as a GLSL expression\n * @return {string} The offset expression\n */\nfunction parseImageOffsetProperties(\n  style,\n  prefix,\n  context,\n  imageSize,\n  sampleSize,\n) {\n  let offsetExpression = expressionToGlsl(\n    context,\n    style[`${prefix}offset`],\n    NumberArrayType,\n  );\n  if (`${prefix}offset-origin` in style) {\n    switch (style[`${prefix}offset-origin`]) {\n      case 'top-right':\n        offsetExpression = `vec2(${imageSize}.x, 0.) + ${sampleSize} * vec2(-1., 0.) + ${offsetExpression} * vec2(-1., 1.)`;\n        break;\n      case 'bottom-left':\n        offsetExpression = `vec2(0., ${imageSize}.y) + ${sampleSize} * vec2(0., -1.) + ${offsetExpression} * vec2(1., -1.)`;\n        break;\n      case 'bottom-right':\n        offsetExpression = `${imageSize} - ${sampleSize} - ${offsetExpression}`;\n        break;\n      default: // pass\n    }\n  }\n  return offsetExpression;\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseCircleProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // this function takes in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  fragContext.functions['circleDistanceField'] =\n    `float circleDistanceField(vec2 point, float radius) {\n  return length(point) - radius;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'circle-');\n\n  // OPACITY\n  let opacity = null;\n  if ('circle-opacity' in style) {\n    opacity = expressionToGlsl(\n      fragContext,\n      style['circle-opacity'],\n      NumberType,\n    );\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('circle-scale' in style) {\n    const scale = expressionToGlsl(\n      fragContext,\n      style['circle-scale'],\n      SizeType,\n    );\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('circle-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['circle-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('circle-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // RADIUS\n  let radius = expressionToGlsl(\n    fragContext,\n    style['circle-radius'],\n    NumberType,\n  );\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('circle-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-width'],\n      NumberType,\n    );\n    radius = `(${radius} + ${strokeWidth} * 0.5)`;\n  }\n\n  // FINAL COLOR\n  const distanceField = `circleDistanceField(${currentPoint}, ${radius})`;\n  const colorExpression = getColorFromDistanceField(\n    distanceField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseShapeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  fragContext.functions['round'] = `float round(float v) {\n  return sign(v) * floor(abs(v) + 0.5);\n}`;\n\n  // these functions take in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the polygon, positive outside, values in pixels)\n  // inspired by https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md#n-sided-regular-polygon\n  fragContext.functions['starDistanceField'] =\n    `float starDistanceField(vec2 point, float numPoints, float radius, float radius2, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round(beta / alpha) * alpha; // angle in sector\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  vec2 tipToPoint = inSector + vec2(-radius, 0.);\n  vec2 edgeNormal = vec2(radius2 * sin(alpha * 0.5), -radius2 * cos(alpha * 0.5) + radius);\n  return dot(normalize(edgeNormal), tipToPoint);\n}`;\n  fragContext.functions['regularDistanceField'] =\n    `float regularDistanceField(vec2 point, float numPoints, float radius, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float radiusIn = radius * cos(PI / numPoints);\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round((beta - alpha * 0.5) / alpha) * alpha + alpha * 0.5; // angle in sector from mid\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  return inSector.x - radiusIn;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'shape-');\n\n  // OPACITY\n  let opacity = null;\n  if ('shape-opacity' in style) {\n    opacity = expressionToGlsl(fragContext, style['shape-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('shape-scale' in style) {\n    const scale = expressionToGlsl(fragContext, style['shape-scale'], SizeType);\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('shape-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['shape-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('shape-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('shape-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-width'],\n      NumberType,\n    );\n  }\n\n  // SHAPE TYPE\n  const numPoints = expressionToGlsl(\n    fragContext,\n    style['shape-points'],\n    NumberType,\n  );\n  let angle = '0.';\n  if ('shape-angle' in style) {\n    angle = expressionToGlsl(fragContext, style['shape-angle'], NumberType);\n  }\n  let shapeField;\n  let radius = expressionToGlsl(fragContext, style['shape-radius'], NumberType);\n  if (strokeWidth !== null) {\n    radius = `${radius} + ${strokeWidth} * 0.5`;\n  }\n  if ('shape-radius2' in style) {\n    let radius2 = expressionToGlsl(\n      fragContext,\n      style['shape-radius2'],\n      NumberType,\n    );\n    if (strokeWidth !== null) {\n      radius2 = `${radius2} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `starDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${radius2}, ${angle})`;\n  } else {\n    shapeField = `regularDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${angle})`;\n  }\n\n  // FINAL COLOR\n  const colorExpression = getColorFromDistanceField(\n    shapeField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseIconProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // COLOR\n  let color = 'vec4(1.0)';\n  if ('icon-color' in style) {\n    color = expressionToGlsl(fragContext, style['icon-color'], ColorType);\n  }\n\n  // OPACITY\n  if ('icon-opacity' in style) {\n    color = `${color} * vec4(1.0, 1.0, 1.0, ${expressionToGlsl(\n      fragContext,\n      style['icon-opacity'],\n      NumberType,\n    )})`;\n  }\n\n  // IMAGE & SIZE\n  const textureId = computeHash(style['icon-src']);\n  const sizeExpression = parseImageProperties(\n    style,\n    builder,\n    uniforms,\n    'icon-',\n    textureId,\n  );\n  builder\n    .setSymbolColorExpression(\n      `${color} * texture2D(u_texture${textureId}, v_texCoord)`,\n    )\n    .setSymbolSizeExpression(sizeExpression);\n\n  // override size if width/height were specified\n  if ('icon-width' in style && 'icon-height' in style) {\n    builder.setSymbolSizeExpression(\n      `vec2(${expressionToGlsl(\n        vertContext,\n        style['icon-width'],\n        NumberType,\n      )}, ${expressionToGlsl(vertContext, style['icon-height'], NumberType)})`,\n    );\n  }\n\n  // tex coord\n  if ('icon-offset' in style && 'icon-size' in style) {\n    const sampleSize = expressionToGlsl(\n      vertContext,\n      style['icon-size'],\n      NumberArrayType,\n    );\n    const fullsize = builder.getSymbolSizeExpression();\n    builder.setSymbolSizeExpression(sampleSize);\n    const offset = parseImageOffsetProperties(\n      style,\n      'icon-',\n      vertContext,\n      'v_quadSizePx',\n      sampleSize,\n    );\n    builder.setTextureCoordinateExpression(\n      `(vec4((${offset}).xyxy) + vec4(0., 0., ${sampleSize})) / (${fullsize}).xyxy`,\n    );\n  }\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'icon-');\n\n  if ('icon-anchor' in style) {\n    const anchor = expressionToGlsl(\n      vertContext,\n      style['icon-anchor'],\n      NumberArrayType,\n    );\n    let scale = `1.0`;\n    if (`icon-scale` in style) {\n      scale = expressionToGlsl(vertContext, style[`icon-scale`], SizeType);\n    }\n    let shiftPx;\n    if (\n      style['icon-anchor-x-units'] === 'pixels' &&\n      style['icon-anchor-y-units'] === 'pixels'\n    ) {\n      shiftPx = `${anchor} * ${scale}`;\n    } else if (style['icon-anchor-x-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(vec2(${scale}).x, v_quadSizePx.y)`;\n    } else if (style['icon-anchor-y-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(v_quadSizePx.x, vec2(${scale}).x)`;\n    } else {\n      shiftPx = `${anchor} * v_quadSizePx`;\n    }\n    // default origin is top-left\n    let offsetPx = `v_quadSizePx * vec2(0.5, -0.5) + ${shiftPx} * vec2(-1., 1.)`;\n    if ('icon-anchor-origin' in style) {\n      switch (style['icon-anchor-origin']) {\n        case 'top-right':\n          offsetPx = `v_quadSizePx * -0.5 + ${shiftPx}`;\n          break;\n        case 'bottom-left':\n          offsetPx = `v_quadSizePx * 0.5 - ${shiftPx}`;\n          break;\n        case 'bottom-right':\n          offsetPx = `v_quadSizePx * vec2(-0.5, 0.5) + ${shiftPx} * vec2(1., -1.)`;\n          break;\n        default: // pass\n      }\n    }\n    builder.setSymbolOffsetExpression(\n      `${builder.getSymbolOffsetExpression()} + ${offsetPx}`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseStrokeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('stroke-color' in style) {\n    builder.setStrokeColorExpression(\n      expressionToGlsl(fragContext, style['stroke-color'], ColorType),\n    );\n  }\n  if ('stroke-pattern-src' in style) {\n    const textureId = computeHash(style['stroke-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'stroke-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('stroke-pattern-offset' in style && 'stroke-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`stroke-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'stroke-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    let spacingExpression = '0.';\n    if ('stroke-pattern-spacing' in style) {\n      spacingExpression = expressionToGlsl(\n        fragContext,\n        style['stroke-pattern-spacing'],\n        NumberType,\n      );\n    }\n    fragContext.functions['sampleStrokePattern'] =\n      `vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float currentLengthPx, float currentRadiusRatio, float lineWidth) {\n  float currentLengthScaled = currentLengthPx * sampleSize.y / lineWidth;\n  float spacingScaled = spacingPx * sampleSize.y / lineWidth;\n  float uCoordPx = mod(currentLengthScaled, (sampleSize.x + spacingScaled));\n  // make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  uCoordPx = clamp(uCoordPx, 0.5, sampleSize.x - 0.5);\n  float vCoordPx = (-currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;\n  vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;\n  return texture2D(texture, texCoord);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('stroke-color' in style) {\n      tintExpression = builder.getStrokeColorExpression();\n    }\n    builder.setStrokeColorExpression(\n      `${tintExpression} * sampleStrokePattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, ${spacingExpression}, currentLengthPx, currentRadiusRatio, v_width)`,\n    );\n  }\n\n  if ('stroke-width' in style) {\n    builder.setStrokeWidthExpression(\n      expressionToGlsl(vertContext, style['stroke-width'], NumberType),\n    );\n  }\n\n  if ('stroke-offset' in style) {\n    builder.setStrokeOffsetExpression(\n      expressionToGlsl(vertContext, style['stroke-offset'], NumberType),\n    );\n  }\n\n  if ('stroke-line-cap' in style) {\n    builder.setStrokeCapExpression(\n      expressionToGlsl(vertContext, style['stroke-line-cap'], StringType),\n    );\n  }\n\n  if ('stroke-line-join' in style) {\n    builder.setStrokeJoinExpression(\n      expressionToGlsl(vertContext, style['stroke-line-join'], StringType),\n    );\n  }\n\n  if ('stroke-miter-limit' in style) {\n    builder.setStrokeMiterLimitExpression(\n      expressionToGlsl(vertContext, style['stroke-miter-limit'], NumberType),\n    );\n  }\n\n  if ('stroke-line-dash' in style) {\n    fragContext.functions['getSingleDashDistance'] =\n      `float getSingleDashDistance(float distance, float radius, float dashOffset, float dashLength, float dashLengthTotal, float capType) {\n  float localDistance = mod(distance, dashLengthTotal);\n  float distanceSegment = abs(localDistance - dashOffset - dashLength * 0.5) - dashLength * 0.5;\n  distanceSegment = min(distanceSegment, dashLengthTotal - localDistance);\n  if (capType == ${stringToGlsl('square')}) {\n    distanceSegment -= v_width * 0.5;\n  } else if (capType == ${stringToGlsl('round')}) {\n    distanceSegment = min(distanceSegment, sqrt(distanceSegment * distanceSegment + radius * radius) - v_width * 0.5);\n  }\n  return distanceSegment;\n}`;\n\n    let dashPattern = style['stroke-line-dash'].map((v) =>\n      expressionToGlsl(fragContext, v, NumberType),\n    );\n    // if pattern has odd length, concatenate it with itself to be even\n    if (dashPattern.length % 2 === 1) {\n      dashPattern = [...dashPattern, ...dashPattern];\n    }\n\n    let offsetExpression = '0.';\n    if ('stroke-line-dash-offset' in style) {\n      offsetExpression = expressionToGlsl(\n        vertContext,\n        style['stroke-line-dash-offset'],\n        NumberType,\n      );\n    }\n\n    // define a function for this dash specifically\n    const uniqueDashKey = computeHash(style['stroke-line-dash']);\n    const dashFunctionName = `dashDistanceField_${uniqueDashKey}`;\n\n    const dashLengthsDef = dashPattern.map(\n      (v, i) => `float dashLength${i} = ${v};`,\n    );\n    const totalLengthDef = dashPattern\n      .map((v, i) => `dashLength${i}`)\n      .join(' + ');\n    let currentDashOffset = '0.';\n    let distanceExpression = `getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength0, totalDashLength, capType)`;\n    for (let i = 2; i < dashPattern.length; i += 2) {\n      currentDashOffset = `${currentDashOffset} + dashLength${\n        i - 2\n      } + dashLength${i - 1}`;\n      distanceExpression = `min(${distanceExpression}, getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength${i}, totalDashLength, capType))`;\n    }\n\n    fragContext.functions[dashFunctionName] =\n      `float ${dashFunctionName}(float distance, float radius, float capType) {\n  ${dashLengthsDef.join('\\n  ')}\n  float totalDashLength = ${totalLengthDef};\n  return ${distanceExpression};\n}`;\n    builder.setStrokeDistanceFieldExpression(\n      `${dashFunctionName}(currentLengthPx + ${offsetExpression}, currentRadiusPx, capType)`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseFillProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('fill-color' in style) {\n    builder.setFillColorExpression(\n      expressionToGlsl(fragContext, style['fill-color'], ColorType),\n    );\n  }\n  if ('fill-pattern-src' in style) {\n    const textureId = computeHash(style['fill-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'fill-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('fill-pattern-offset' in style && 'fill-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`fill-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'fill-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    fragContext.functions['sampleFillPattern'] =\n      `vec4 sampleFillPattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, vec2 pxOrigin, vec2 pxPosition) {\n  float scaleRatio = pow(2., mod(u_zoom + 0.5, 1.) - 0.5);\n  vec2 pxRelativePos = pxPosition - pxOrigin;\n  // rotate the relative position from origin by the current view rotation\n  pxRelativePos = vec2(pxRelativePos.x * cos(u_rotation) - pxRelativePos.y * sin(u_rotation), pxRelativePos.x * sin(u_rotation) + pxRelativePos.y * cos(u_rotation));\n  // sample position is computed according to the sample offset & size\n  vec2 samplePos = mod(pxRelativePos / scaleRatio, sampleSize);\n  // also make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  samplePos = clamp(samplePos, vec2(0.5), sampleSize - vec2(0.5));\n  samplePos.y = sampleSize.y - samplePos.y; // invert y axis so that images appear upright\n  return texture2D(texture, (samplePos + textureOffset) / textureSize);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('fill-color' in style) {\n      tintExpression = builder.getFillColorExpression();\n    }\n    builder.setFillColorExpression(\n      `${tintExpression} * sampleFillPattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, pxOrigin, pxPos)`,\n    );\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").UniformDefinitions} uniforms Uniform definitions\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").AttributeDefinitions} attributes Attribute definitions\n */\n\n/**\n * Parses a {@link import(\"../style/webgl.js\").WebGLStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    properties: {},\n    variables: {},\n    functions: {},\n    style,\n  };\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    properties: {},\n    functions: {},\n    style,\n  };\n\n  const builder = new ShaderBuilder();\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  if ('icon-src' in style) {\n    parseIconProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('shape-points' in style) {\n    parseShapeProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('circle-radius' in style) {\n    parseCircleProperties(style, builder, uniforms, vertContext, fragContext);\n  }\n  parseStrokeProperties(style, builder, uniforms, vertContext, fragContext);\n  parseFillProperties(style, builder, uniforms, vertContext, fragContext);\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      BooleanType,\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  // define one uniform per variable\n  for (const varName in fragContext.variables) {\n    const variable = fragContext.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    builder.addUniform(`${getGlslTypeFromType(variable.type)} ${uniformName}`);\n\n    uniforms[uniformName] = () => {\n      const value = style.variables[variable.name];\n      if (typeof value === 'number') {\n        return value;\n      }\n      if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      if (variable.type === ColorType) {\n        return packColor([...asArray(value || '#eee')]);\n      }\n      if (typeof value === 'string') {\n        return getStringNumberEquivalent(value);\n      }\n      return value;\n    };\n  }\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  for (const propName in fragContext.properties) {\n    const property = fragContext.properties[propName];\n    if (!vertContext.properties[propName]) {\n      vertContext.properties[propName] = property;\n    }\n    let type = getGlslTypeFromType(property.type);\n    let expression = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      type = 'vec4';\n      expression = `unpackColor(${expression})`;\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    }\n    builder.addVarying(`v_prop_${property.name}`, type, expression);\n  }\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  for (const propName in vertContext.properties) {\n    const property = vertContext.properties[propName];\n    builder.addAttribute(\n      `${getGlslTypeFromType(property.type)} a_prop_${property.name}`,\n    );\n  }\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in vertContext.functions) {\n    builder.addVertexShaderFunction(vertContext.functions[functionName]);\n  }\n  for (const functionName in fragContext.functions) {\n    builder.addFragmentShaderFunction(fragContext.functions[functionName]);\n  }\n\n  /**\n   * @type {import('../render/webgl/VectorStyleRenderer.js').AttributeDefinitions}\n   */\n  const attributes = {};\n  for (const propName in vertContext.properties) {\n    const property = vertContext.properties[propName];\n    const callback = (feature) => {\n      const value = property.evaluator\n        ? property.evaluator(feature)\n        : feature.get(property.name);\n      if (property.type === ColorType) {\n        return packColor([...asArray(value || '#eee')]);\n      }\n      if (typeof value === 'string') {\n        return getStringNumberEquivalent(value);\n      }\n      if (typeof value === 'boolean') {\n        return value ? 1 : 0;\n      }\n      return value;\n    };\n\n    attributes[property.name] = {\n      size: getGlslSizeFromType(property.type),\n      callback,\n    };\n  }\n\n  return {builder, attributes, uniforms};\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<VectorSource<Feature>>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * @private\n     */\n    this.sourceRevision_ = -1;\n\n    /**\n     * @private\n     */\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    /**\n     * @private\n     */\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_prop_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    /**\n     * @private\n     */\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_,\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions,\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      },\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    /**\n     * @private\n     */\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  /**\n   * @override\n   */\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n\n    // upload buffers again if any\n    if (this.verticesBuffer_.getArray()) {\n      this.helper.flushBufferData(this.verticesBuffer_);\n    }\n    if (this.indicesBuffer_.getArray()) {\n      this.helper.flushBufferData(this.indicesBuffer_);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection,\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties,\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const t=\\\"GENERATE_POLYGON_BUFFERS\\\",e=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(t,e){const n=e[0],r=e[1];return e[0]=t[0]*n+t[2]*r+t[4],e[1]=t[1]*n+t[3]*r+t[5],e}function x(t,e){const n=(r=e)[0]*r[3]-r[1]*r[2];var r;!function(t,e){if(!t)throw new Error(e)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=e[0],o=e[1],u=e[2],i=e[3],f=e[4],s=e[5];return t[0]=i/n,t[1]=-o/n,t[2]=-u/n,t[3]=x/n,t[4]=(u*s-i*f)/n,t[5]=-(x*s-o*f)/n,t}function o(t,e,n=2){const r=e&&e.length,x=r?e[0]*n:t.length;let o=u(t,0,x,n,!0);const i=[];if(!o||o.next===o.prev)return i;let s,l,c;if(r&&(o=function(t,e,n,r){const x=[];for(let n=0,o=e.length;n<o;n++){const i=u(t,e[n]*r,n<o-1?e[n+1]*r:t.length,r,!1);i===i.next&&(i.steiner=!0),x.push(g(i))}x.sort(y);for(let t=0;t<x.length;t++)n=h(x[t],n);return n}(t,e,o,n)),t.length>80*n){s=1/0,l=1/0;let e=-1/0,r=-1/0;for(let o=n;o<x;o+=n){const n=t[o],x=t[o+1];n<s&&(s=n),x<l&&(l=x),n>e&&(e=n),x>r&&(r=x)}c=Math.max(e-s,r-l),c=0!==c?32767/c:0}return f(o,i,n,s,l,c,0),i}function u(t,e,n,r,x){let o;if(x===function(t,e,n,r){let x=0;for(let o=e,u=n-r;o<n;o+=r)x+=(t[u]-t[o])*(t[o+1]+t[u+1]),u=o;return x}(t,e,n,r)>0)for(let x=e;x<n;x+=r)o=z(x/r|0,t[x],t[x+1],o);else for(let x=n-r;x>=e;x-=r)o=z(x/r|0,t[x],t[x+1],o);return o&&M(o,o.next)&&(F(o),o=o.next),o}function i(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!M(r,r.next)&&0!==d(r.prev,r,r.next))r=r.next;else{if(F(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function f(t,e,n,r,x,o,u){if(!t)return;!u&&o&&function(t,e,n,r){let x=t;do{0===x.z&&(x.z=v(x.x,x.y,e,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==t);x.prevZ.nextZ=null,x.prevZ=null,function(t){let e,n=1;do{let r,x=t;t=null;let o=null;for(e=0;x;){e++;let u=x,i=0;for(let t=0;t<n&&(i++,u=u.nextZ,u);t++);let f=n;for(;i>0||f>0&&u;)0!==i&&(0===f||!u||x.z<=u.z)?(r=x,x=x.nextZ,i--):(r=u,u=u.nextZ,f--),o?o.nextZ=r:t=r,r.prevZ=o,o=r;x=u}o.nextZ=null,n*=2}while(e>1)}(x)}(t,r,x,o);let y=t;for(;t.prev!==t.next;){const h=t.prev,p=t.next;if(o?l(t,r,x,o):s(t))e.push(h.i,t.i,p.i),F(t),t=p.next,y=p.next;else if((t=p)===y){u?1===u?f(t=c(i(t),e),e,n,r,x,o,2):2===u&&a(t,e,n,r,x,o):f(i(t),e,n,r,x,o,1);break}}}function s(t){const e=t.prev,n=t,r=t.next;if(d(e,n,r)>=0)return!1;const x=e.x,o=n.x,u=r.x,i=e.y,f=n.y,s=r.y,l=x<o?x<u?x:u:o<u?o:u,c=i<f?i<s?i:s:f<s?f:s,a=x>o?x>u?x:u:o>u?o:u,y=i>f?i>s?i:s:f>s?f:s;let h=r.next;for(;h!==e;){if(h.x>=l&&h.x<=a&&h.y>=c&&h.y<=y&&b(x,i,o,f,u,s,h.x,h.y)&&d(h.prev,h,h.next)>=0)return!1;h=h.next}return!0}function l(t,e,n,r){const x=t.prev,o=t,u=t.next;if(d(x,o,u)>=0)return!1;const i=x.x,f=o.x,s=u.x,l=x.y,c=o.y,a=u.y,y=i<f?i<s?i:s:f<s?f:s,h=l<c?l<a?l:a:c<a?c:a,p=i>f?i>s?i:s:f>s?f:s,g=l>c?l>a?l:a:c>a?c:a,Z=v(y,h,e,n,r),M=v(p,g,e,n,r);let w=t.prevZ,m=t.nextZ;for(;w&&w.z>=Z&&m&&m.z<=M;){if(w.x>=y&&w.x<=p&&w.y>=h&&w.y<=g&&w!==x&&w!==u&&b(i,l,f,c,s,a,w.x,w.y)&&d(w.prev,w,w.next)>=0)return!1;if(w=w.prevZ,m.x>=y&&m.x<=p&&m.y>=h&&m.y<=g&&m!==x&&m!==u&&b(i,l,f,c,s,a,m.x,m.y)&&d(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;w&&w.z>=Z;){if(w.x>=y&&w.x<=p&&w.y>=h&&w.y<=g&&w!==x&&w!==u&&b(i,l,f,c,s,a,w.x,w.y)&&d(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;m&&m.z<=M;){if(m.x>=y&&m.x<=p&&m.y>=h&&m.y<=g&&m!==x&&m!==u&&b(i,l,f,c,s,a,m.x,m.y)&&d(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function c(t,e){let n=t;do{const r=n.prev,x=n.next.next;!M(r,x)&&w(r,n,n.next,x)&&E(r,x)&&E(x,r)&&(e.push(r.i,n.i,x.i),F(n),F(n.next),n=t=x),n=n.next}while(n!==t);return i(n)}function a(t,e,n,r,x,o){let u=t;do{let t=u.next.next;for(;t!==u.prev;){if(u.i!==t.i&&Z(u,t)){let s=I(u,t);return u=i(u,u.next),s=i(s,s.next),f(u,e,n,r,x,o,0),void f(s,e,n,r,x,o,0)}t=t.next}u=u.next}while(u!==t)}function y(t,e){return t.x-e.x}function h(t,e){const n=function(t,e){let n=e;const r=t.x,x=t.y;let o,u=-1/0;do{if(x<=n.y&&x>=n.next.y&&n.next.y!==n.y){const t=n.x+(x-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>u&&(u=t,o=n.x<n.next.x?n:n.next,t===r))return o}n=n.next}while(n!==e);if(!o)return null;const i=o,f=o.x,s=o.y;let l=1/0;n=o;do{if(r>=n.x&&n.x>=f&&r!==n.x&&b(x<s?r:u,x,f,s,x<s?u:r,x,n.x,n.y)){const e=Math.abs(x-n.y)/(r-n.x);E(n,t)&&(e<l||e===l&&(n.x>o.x||n.x===o.x&&p(o,n)))&&(o=n,l=e)}n=n.next}while(n!==i);return o}(t,e);if(!n)return e;const r=I(n,t);return i(r,r.next),i(n,n.next)}function p(t,e){return d(t.prev,t,e.prev)<0&&d(e.next,t,t.next)<0}function v(t,e,n,r,x){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-r)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function g(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function b(t,e,n,r,x,o,u,i){return(x-u)*(e-i)>=(t-u)*(o-i)&&(t-u)*(r-i)>=(n-u)*(e-i)&&(n-u)*(o-i)>=(x-u)*(r-i)}function Z(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&w(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(E(t,e)&&E(e,t)&&function(t,e){let n=t,r=!1;const x=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&x<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(d(t.prev,t,e.prev)||d(t,e.prev,e))||M(t,e)&&d(t.prev,t,t.next)>0&&d(e.prev,e,e.next)>0)}function d(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function M(t,e){return t.x===e.x&&t.y===e.y}function w(t,e,n,r){const x=A(d(t,e,n)),o=A(d(t,e,r)),u=A(d(n,r,t)),i=A(d(n,r,e));return x!==o&&u!==i||(!(0!==x||!m(t,n,e))||(!(0!==o||!m(t,r,e))||(!(0!==u||!m(n,t,r))||!(0!==i||!m(n,e,r)))))}function m(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function A(t){return t>0?1:t<0?-1:0}function E(t,e){return d(t.prev,t,t.next)<0?d(t,e,t.next)>=0&&d(t,t.prev,e)>=0:d(t,e,t.prev)<0||d(t,t.next,e)<0}function I(t,e){const n=P(t.i,t.x,t.y),r=P(e.i,e.x,e.y),x=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=x,x.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function z(t,e,n,r){const x=P(t,e,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function F(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function P(t,e,n){return{i:t,x:e,y:n,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}new Array(6);const B=[],N={vertexPosition:0,indexPosition:0};function R(t,e,n,r,x){t[e+0]=n,t[e+1]=r,t[e+2]=x}function S(t,e,n,r,x,o){const u=3+x,i=t[e+0],f=t[e+1],s=B;s.length=x;for(let n=0;n<s.length;n++)s[n]=t[e+2+n];let l=o?o.vertexPosition:0,c=o?o.indexPosition:0;const a=l/u;return R(n,l,i,f,0),s.length&&n.set(s,l+3),l+=u,R(n,l,i,f,1),s.length&&n.set(s,l+3),l+=u,R(n,l,i,f,2),s.length&&n.set(s,l+3),l+=u,R(n,l,i,f,3),s.length&&n.set(s,l+3),l+=u,r[c++]=a,r[c++]=a+1,r[c++]=a+3,r[c++]=a+1,r[c++]=a+2,r[c++]=a+3,N.vertexPosition=l,N.indexPosition=c,N}function T(t,e,n,x,o,u,i,f,s,l,c){const a=10+f.length,y=u.length/a,h=[t[e+0],t[e+1]],p=[t[n],t[n+1]],v=t[e+2],g=t[n+2],b=r(s,[...h]),Z=r(s,[...p]);function d(t,e,n){const r=Math.sqrt((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1])),x=[(e[0]-t[0])/r,(e[1]-t[1])/r],o=[-x[1],x[0]],u=Math.sqrt((n[0]-t[0])*(n[0]-t[0])+(n[1]-t[1])*(n[1]-t[1])),i=[(n[0]-t[0])/u,(n[1]-t[1])/u],f=0===r||0===u?0:Math.acos((s=i[0]*x[0]+i[1]*x[1],l=-1,c=1,Math.min(Math.max(s,l),c)));var s,l,c;return i[0]*o[0]+i[1]*o[1]>0?f:2*Math.PI-f}let M=-1,w=-1,m=c;const A=null!==o;if(null!==x){M=d(b,Z,r(s,[...[t[x],t[x+1]]])),Math.cos(M)<=.985&&(m+=Math.tan((M-Math.PI)/2))}if(A){w=d(Z,b,r(s,[...[t[o],t[o+1]]])),Math.cos(w)<=.985&&(m+=Math.tan((Math.PI-w)/2))}function E(t,e){return 0===e?1e4*t:Math.sign(e)*(1e4*t+Math.abs(e))}return u.push(h[0],h[1],v,p[0],p[1],g,M,w,l,E(0,c)),u.push(...f),u.push(h[0],h[1],v,p[0],p[1],g,M,w,l,E(1,c)),u.push(...f),u.push(h[0],h[1],v,p[0],p[1],g,M,w,l,E(2,c)),u.push(...f),u.push(h[0],h[1],v,p[0],p[1],g,M,w,l,E(3,c)),u.push(...f),i.push(y,y+1,y+2,y+1,y+3,y+2),{length:l+Math.sqrt((Z[0]-b[0])*(Z[0]-b[0])+(Z[1]-b[1])*(Z[1]-b[1])),angle:m}}function _(t,e,n,r,x){const u=2+x;let i=e;const f=t.slice(i,i+x);i+=x;const s=t[i++];let l=0;const c=new Array(s-1);for(let e=0;e<s;e++)l+=t[i++],e<s-1&&(c[e]=l);const a=t.slice(i,i+2*l),y=o(a,c,2);for(let t=0;t<y.length;t++)r.push(y[t]+n.length/u);for(let t=0;t<a.length;t+=2)n.push(a[t],a[t+1],...f);return i+2*l}const O=self;O.onmessage=r=>{const o=r.data;switch(o.type){case e:{const t=3,e=2,n=o.customAttributesSize,r=e+n,x=new Float32Array(o.renderInstructions),u=x.length/r,i=4*u*(n+t),f=new Uint32Array(6*u),s=new Float32Array(i);let l;for(let t=0;t<x.length;t+=r)l=S(x,t,s,f,n,l);const c=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},o);O.postMessage(c,[s.buffer,f.buffer,x.buffer]);break}case n:{const t=[],e=[],n=o.customAttributesSize,r=3,u=new Float32Array(o.renderInstructions);let i=0;const f=[1,0,0,1,0,0];let s,l;for(x(f,o.renderInstructionsTransform);i<u.length;){l=Array.from(u.slice(i,i+n)),i+=n,s=u[i++];const x=i,o=i+(s-1)*r,c=u[x]===u[o]&&u[x+1]===u[o+1];let a=0,y=0;for(let n=0;n<s-1;n++){let h=null;n>0?h=i+(n-1)*r:c&&(h=o-r);let p=null;n<s-2?p=i+(n+2)*r:c&&(p=x+r);const v=T(u,i+n*r,i+(n+1)*r,h,p,t,e,l,f,a,y);a=v.length,y=v.angle}i+=s*r}const c=Uint32Array.from(e),a=Float32Array.from(t),y=Object.assign({vertexBuffer:a.buffer,indexBuffer:c.buffer,renderInstructions:u.buffer},o);O.postMessage(y,[a.buffer,c.buffer,u.buffer]);break}case t:{const t=[],e=[],n=o.customAttributesSize,r=new Float32Array(o.renderInstructions);let x=0;for(;x<r.length;)x=_(r,x,t,e,n);const u=Uint32Array.from(e),i=Float32Array.from(t),f=Object.assign({vertexBuffer:i.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},o);O.postMessage(f,[i.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {VectorSourceType} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @extends {BaseVector<FeatureType, VectorSourceType, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n\n    /**\n     * @private\n     */\n    this.weightFunction_ =\n      typeof weight === 'string'\n        ? /**\n           * @param {import('../Feature.js').default} feature Feature\n           * @return {any} weight\n           */\n          (feature) => feature.get(weight)\n        : weight;\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  /**\n   * @override\n   */\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = (coordinates, geometry, projection) => {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    /**\n     * @private\n     */\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     * @private\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     * @private\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @override\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection,\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that uses them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        }),\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n            closestFeature = segmentData.feature;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and a\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes a {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_,\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection,\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      },\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @override\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTEDATE_RECORD_RE = /^HFDTEDATE:(\\d{2})(\\d{2})(\\d{2}),(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lad_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.lod_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ladStop_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStart_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lodStop_ = 0;\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (this.lad_) {\n            y +=\n              parseInt(line.slice(this.ladStart_, this.ladStop_), 10) /\n              60000 /\n              10 ** (this.ladStop_ - this.ladStart_);\n          }\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (this.lod_) {\n            x +=\n              parseInt(line.slice(this.lodStart_, this.lodStop_), 10) /\n              60000 /\n              10 ** (this.lodStop_ - this.lodStart_);\n          }\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTEDATE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = HFDTE_RECORD_RE.exec(line);\n          if (m) {\n            day = parseInt(m[1], 10);\n            month = parseInt(m[2], 10) - 1;\n            year = 2000 + parseInt(m[3], 10);\n          } else {\n            m = H_RECORD_RE.exec(line);\n            if (m) {\n              properties[m[1]] = m[2].trim();\n            }\n          }\n        }\n      } else if (line.charAt(0) == 'I') {\n        const numberAdds = parseInt(line.slice(1, 3), 10);\n        for (let i = 0; i < numberAdds; i++) {\n          const addCode = line.slice(7 + i * 7, 10 + i * 7);\n          if (addCode === 'LAD' || addCode === 'LOD') {\n            // in IGC format, columns are numbered from 1\n            const addStart = parseInt(line.slice(3 + i * 7, 5 + i * 7), 10) - 1;\n            const addStop = parseInt(line.slice(5 + i * 7, 7 + i * 7), 10);\n            if (addCode === 'LAD') {\n              this.lad_ = true;\n              this.ladStart_ = addStart;\n              this.ladStop_ = addStop;\n            } else if (addCode === 'LOD') {\n              this.lod_ = true;\n              this.lodStart_ = addStart;\n              this.lodStop_ = addStop;\n            }\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection' || type.startsWith('Multi')) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","\nconst SHIFT_LEFT_32 = (1 << 16) * (1 << 16);\nconst SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nconst TEXT_DECODER_MIN_LENGTH = 12;\nconst utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8');\n\nconst PBF_VARINT  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nconst PBF_FIXED64 = 1; // 64-bit: double, fixed64, sfixed64\nconst PBF_BYTES   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nconst PBF_FIXED32 = 5; // 32-bit: float, fixed32, sfixed32\n\nexport default class Pbf {\n    /**\n     * @param {Uint8Array | ArrayBuffer} [buf]\n     */\n    constructor(buf = new Uint8Array(16)) {\n        this.buf = ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf);\n        this.dataView = new DataView(this.buf.buffer);\n        this.pos = 0;\n        this.type = 0;\n        this.length = this.buf.length;\n    }\n\n    // === READING =================================================================\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     * @param {number} [end]\n     */\n    readFields(readField, result, end = this.length) {\n        while (this.pos < end) {\n            const val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    }\n\n    /**\n     * @template T\n     * @param {(tag: number, result: T, pbf: Pbf) => void} readField\n     * @param {T} result\n     */\n    readMessage(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    }\n\n    readFixed32() {\n        const val = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readSFixed32() {\n        const val = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getUint32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readSFixed64() {\n        const val = this.dataView.getUint32(this.pos, true) + this.dataView.getInt32(this.pos + 4, true) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    }\n\n    readFloat() {\n        const val = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return val;\n    }\n\n    readDouble() {\n        const val = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return val;\n    }\n\n    /**\n     * @param {boolean} [isSigned]\n     */\n    readVarint(isSigned) {\n        const buf = this.buf;\n        let val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    }\n\n    readVarint64() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    }\n\n    readSVarint() {\n        const num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    }\n\n    readBoolean() {\n        return Boolean(this.readVarint());\n    }\n\n    readString() {\n        const end = this.readVarint() + this.pos;\n        const pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return utf8TextDecoder.decode(this.buf.subarray(pos, end));\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    }\n\n    readBytes() {\n        const end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    }\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    /**\n     * @param {number[]} [arr]\n     * @param {boolean} [isSigned]\n     */\n    readPackedVarint(arr = [], isSigned) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSVarint(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    }\n    /** @param {boolean[]} [arr] */\n    readPackedBoolean(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFloat(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedDouble(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed32(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    }\n    /** @param {number[]} [arr] */\n    readPackedSFixed64(arr = []) {\n        const end = this.readPackedEnd();\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    }\n    readPackedEnd() {\n        return this.type === PBF_BYTES ? this.readVarint() + this.pos : this.pos + 1;\n    }\n\n    /** @param {number} val */\n    skip(val) {\n        const type = val & 0x7;\n        if (type === PBF_VARINT) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === PBF_BYTES) this.pos = this.readVarint() + this.pos;\n        else if (type === PBF_FIXED32) this.pos += 4;\n        else if (type === PBF_FIXED64) this.pos += 8;\n        else throw new Error(`Unimplemented type: ${type}`);\n    }\n\n    // === WRITING =================================================================\n\n    /**\n     * @param {number} tag\n     * @param {number} type\n     */\n    writeTag(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    }\n\n    /** @param {number} min */\n    realloc(min) {\n        let length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            const buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.dataView = new DataView(buf.buffer);\n            this.length = length;\n        }\n    }\n\n    finish() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    }\n\n    /** @param {number} val */\n    writeFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeSFixed32(val) {\n        this.realloc(4);\n        this.dataView.setInt32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeSFixed64(val) {\n        this.realloc(8);\n        this.dataView.setInt32(this.pos, val & -1, true);\n        this.dataView.setInt32(this.pos + 4, Math.floor(val * SHIFT_RIGHT_32), true);\n        this.pos += 8;\n    }\n\n    /** @param {number} val */\n    writeVarint(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    }\n\n    /** @param {number} val */\n    writeSVarint(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    }\n\n    /** @param {boolean} val */\n    writeBoolean(val) {\n        this.writeVarint(+val);\n    }\n\n    /** @param {string} str */\n    writeString(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        const startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /** @param {number} val */\n    writeFloat(val) {\n        this.realloc(4);\n        this.dataView.setFloat32(this.pos, val, true);\n        this.pos += 4;\n    }\n\n    /** @param {number} val */\n    writeDouble(val) {\n        this.realloc(8);\n        this.dataView.setFloat64(this.pos, val, true);\n        this.pos += 8;\n    }\n\n    /** @param {Uint8Array} buffer */\n    writeBytes(buffer) {\n        const len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (let i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    }\n\n    /**\n     * @template T\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeRawMessage(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        const startPos = this.pos;\n        fn(obj, this);\n        const len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    }\n\n    /**\n     * @template T\n     * @param {number} tag\n     * @param {(obj: T, pbf: Pbf) => void} fn\n     * @param {T} obj\n     */\n    writeMessage(tag, fn, obj) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeRawMessage(fn, obj);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSVarint(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean[]} arr\n     */\n    writePackedBoolean(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFloat(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFloat, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedDouble(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedDouble, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed32(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);\n    }\n    /**\n     * @param {number} tag\n     * @param {number[]} arr\n     */\n    writePackedSFixed64(tag, arr) {\n        if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr);\n    }\n\n    /**\n     * @param {number} tag\n     * @param {Uint8Array} buffer\n     */\n    writeBytesField(tag, buffer) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeBytes(buffer);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed32Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeSFixed32(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSFixed64Field(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeSFixed64(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeSVarintField(tag, val) {\n        this.writeTag(tag, PBF_VARINT);\n        this.writeSVarint(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {string} str\n     */\n    writeStringField(tag, str) {\n        this.writeTag(tag, PBF_BYTES);\n        this.writeString(str);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeFloatField(tag, val) {\n        this.writeTag(tag, PBF_FIXED32);\n        this.writeFloat(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {number} val\n     */\n    writeDoubleField(tag, val) {\n        this.writeTag(tag, PBF_FIXED64);\n        this.writeDouble(val);\n    }\n    /**\n     * @param {number} tag\n     * @param {boolean} val\n     */\n    writeBooleanField(tag, val) {\n        this.writeVarintField(tag, +val);\n    }\n};\n\n/**\n * @param {number} l\n * @param {boolean | undefined} s\n * @param {Pbf} p\n */\nfunction readVarintRemainder(l, s, p) {\n    const buf = p.buf;\n    let h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {boolean} [isSigned]\n */\nfunction toNum(low, high, isSigned) {\n    return isSigned ? high * 0x100000000 + (low >>> 0) : ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\n/**\n * @param {number} val\n * @param {Pbf} pbf\n */\nfunction writeBigVarint(val, pbf) {\n    let low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\n/**\n * @param {number} high\n * @param {number} low\n * @param {Pbf} pbf\n */\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\n/**\n * @param {number} high\n * @param {Pbf} pbf\n */\nfunction writeBigVarintHigh(high, pbf) {\n    const lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\n/**\n * @param {number} startPos\n * @param {number} len\n * @param {Pbf} pbf\n */\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    const extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (let i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSVarint(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFloat(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedDouble(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);\n}\n/**\n * @param {boolean[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedBoolean(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed32(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);\n}\n/**\n * @param {number[]} arr\n * @param {Pbf} pbf\n */\nfunction writePackedSFixed64(arr, pbf) {\n    for (let i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]);\n}\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\n/**\n * @param {Uint8Array} buf\n * @param {number} pos\n * @param {number} end\n */\nfunction readUtf8(buf, pos, end) {\n    let str = '';\n    let i = pos;\n\n    while (i < end) {\n        const b0 = buf[i];\n        let c = null; // codepoint\n        let bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        let b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\n/**\n * @param {Uint8Array} buf\n * @param {string} str\n * @param {number} pos\n */\nfunction writeUtf8(buf, str, pos) {\n    for (let i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../render/Feature.js\").default]\n * @typedef {Object} Options\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=RenderFeature]\n * @extends {FeatureFormat<FeatureType>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    this.featureClass = options.featureClass\n      ? options.featureClass\n      : /** @type {import('./Feature.js').FeatureToFeatureClass<FeatureType>} */ (\n          RenderFeature\n        );\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {FeatureType|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass === RenderFeature) {\n      feature =\n        new /** @type {import('./Feature.js').FeatureToFeatureClass<RenderFeature>} */ (\n          this.featureClass\n        )(geometryType, flatCoordinates, ends, 2, values, id);\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return /** @type {FeatureType} */ (feature);\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<FeatureType>} */ (features);\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options],\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack,\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   * @override\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.startsWith('en')) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ',' + point[1]\n      : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    if (axisOrientation === 'neu') {\n      for (let i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    const axisOrientation = containerSrs\n      ? getProjection(containerSrs).getAxisOrientation()\n      : 'enu';\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    const asXYZ = axisOrientation.startsWith('en');\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (asXYZ) {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    const point = value.getCoordinates();\n    // only 2d for simple features profile\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    const axisOrientation = srsName\n      ? getProjection(srsName).getAxisOrientation()\n      : 'enu';\n    let coords = axisOrientation.startsWith('en')\n      ? point[0] + ' ' + point[1]\n      : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null && value !== undefined) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   * @override\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   * @override\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @override\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])',\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinate(\n        /** @type {MouseEvent} */ (position),\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('pointermove', move);\n      window.removeEventListener('pointerup', endMoving);\n    };\n\n    /* Binding */\n\n    this.ovmapDiv_.addEventListener('pointerdown', function () {\n      if (event.target === overlayBox) {\n        window.addEventListener('pointermove', move);\n      }\n      window.addEventListener('pointerup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this,\n        ),\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n\n    if (view.isDef()) {\n      this.ovmap_.updateSize();\n      this.resetExtent_();\n    }\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent),\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent),\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenter();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      (event) => {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   * @override\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from '../../ol/Collection.js';\nimport $ol$Collection from '../../ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from '../../ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from '../../ol/DataTile.js';\nimport {disposedError as _ol_DataTile$disposedError} from '../../ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from '../../ol/DataTile.js';\nimport $ol$DataTile from '../../ol/DataTile.js';\nimport $ol$Disposable from '../../ol/Disposable.js';\nimport $ol$Feature from '../../ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from '../../ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from '../../ol/Geolocation.js';\nimport $ol$Geolocation from '../../ol/Geolocation.js';\nimport $ol$Image from '../../ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from '../../ol/Image.js';\nimport {load as _ol_Image$load} from '../../ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from '../../ol/Image.js';\nimport {decode as _ol_Image$decode} from '../../ol/Image.js';\nimport $ol$ImageCanvas from '../../ol/ImageCanvas.js';\nimport $ol$ImageTile from '../../ol/ImageTile.js';\nimport $ol$Kinetic from '../../ol/Kinetic.js';\nimport $ol$Map from '../../ol/Map.js';\nimport $ol$MapBrowserEvent from '../../ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from '../../ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from '../../ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from '../../ol/Object.js';\nimport $ol$Object from '../../ol/Object.js';\nimport $ol$Observable from '../../ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from '../../ol/Observable.js';\nimport $ol$Overlay from '../../ol/Overlay.js';\nimport $ol$Tile from '../../ol/Tile.js';\nimport $ol$TileCache from '../../ol/TileCache.js';\nimport $ol$TileQueue from '../../ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from '../../ol/TileQueue.js';\nimport $ol$TileRange from '../../ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from '../../ol/TileRange.js';\nimport $ol$VectorRenderTile from '../../ol/VectorRenderTile.js';\nimport $ol$View from '../../ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from '../../ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from '../../ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from '../../ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from '../../ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from '../../ol/array.js';\nimport {ascending as _ol_array$ascending} from '../../ol/array.js';\nimport {descending as _ol_array$descending} from '../../ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from '../../ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from '../../ol/array.js';\nimport {extend as _ol_array$extend} from '../../ol/array.js';\nimport {remove as _ol_array$remove} from '../../ol/array.js';\nimport {equals as _ol_array$equals} from '../../ol/array.js';\nimport {stableSort as _ol_array$stableSort} from '../../ol/array.js';\nimport {isSorted as _ol_array$isSorted} from '../../ol/array.js';\nimport {assert as _ol_asserts$assert} from '../../ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from '../../ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from '../../ol/centerconstraint.js';\nimport {NO_COLOR as _ol_color$NO_COLOR} from '../../ol/color.js';\nimport {asString as _ol_color$asString} from '../../ol/color.js';\nimport {withAlpha as _ol_color$withAlpha} from '../../ol/color.js';\nimport {rgbaToLcha as _ol_color$rgbaToLcha} from '../../ol/color.js';\nimport {lchaToRgba as _ol_color$lchaToRgba} from '../../ol/color.js';\nimport {fromString as _ol_color$fromString} from '../../ol/color.js';\nimport {asArray as _ol_color$asArray} from '../../ol/color.js';\nimport {normalize as _ol_color$normalize} from '../../ol/color.js';\nimport {toString as _ol_color$toString} from '../../ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from '../../ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from '../../ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from '../../ol/console.js';\nimport {log as _ol_console$log} from '../../ol/console.js';\nimport {warn as _ol_console$warn} from '../../ol/console.js';\nimport {error as _ol_console$error} from '../../ol/console.js';\nimport {add as _ol_coordinate$add} from '../../ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from '../../ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from '../../ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from '../../ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from '../../ol/coordinate.js';\nimport {format as _ol_coordinate$format} from '../../ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from '../../ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from '../../ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from '../../ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from '../../ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from '../../ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from '../../ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from '../../ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from '../../ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from '../../ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from '../../ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from '../../ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from '../../ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from '../../ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from '../../ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from '../../ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from '../../ol/dom.js';\nimport {getSharedCanvasContext2D as _ol_dom$getSharedCanvasContext2D} from '../../ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from '../../ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from '../../ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from '../../ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from '../../ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from '../../ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from '../../ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from '../../ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from '../../ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from '../../ol/easing.js';\nimport {linear as _ol_easing$linear} from '../../ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from '../../ol/easing.js';\nimport {listen as _ol_events$listen} from '../../ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from '../../ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from '../../ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from '../../ol/extent.js';\nimport {buffer as _ol_extent$buffer} from '../../ol/extent.js';\nimport {clone as _ol_extent$clone} from '../../ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from '../../ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from '../../ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from '../../ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from '../../ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from '../../ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from '../../ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from '../../ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from '../../ol/extent.js';\nimport {equals as _ol_extent$equals} from '../../ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from '../../ol/extent.js';\nimport {extend as _ol_extent$extend} from '../../ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from '../../ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from '../../ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from '../../ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from '../../ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from '../../ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from '../../ol/extent.js';\nimport {getArea as _ol_extent$getArea} from '../../ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from '../../ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from '../../ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from '../../ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from '../../ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from '../../ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from '../../ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from '../../ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from '../../ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from '../../ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from '../../ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from '../../ol/extent.js';\nimport {getSize as _ol_extent$getSize} from '../../ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from '../../ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from '../../ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from '../../ol/extent.js';\nimport {intersects as _ol_extent$intersects} from '../../ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from '../../ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from '../../ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from '../../ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from '../../ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from '../../ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from '../../ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from '../../ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from '../../ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from '../../ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from '../../ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from '../../ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from '../../ol/functions.js';\nimport {VOID as _ol_functions$VOID} from '../../ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from '../../ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from '../../ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from '../../ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from '../../ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from '../../ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from '../../ol/has.js';\nimport {MAC as _ol_has$MAC} from '../../ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from '../../ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from '../../ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from '../../ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from '../../ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from '../../ol/has.js';\nimport {all as _ol_loadingstrategy$all} from '../../ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from '../../ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from '../../ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from '../../ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from '../../ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from '../../ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from '../../ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from '../../ol/math.js';\nimport {toRadians as _ol_math$toRadians} from '../../ol/math.js';\nimport {modulo as _ol_math$modulo} from '../../ol/math.js';\nimport {lerp as _ol_math$lerp} from '../../ol/math.js';\nimport {toFixed as _ol_math$toFixed} from '../../ol/math.js';\nimport {round as _ol_math$round} from '../../ol/math.js';\nimport {floor as _ol_math$floor} from '../../ol/math.js';\nimport {ceil as _ol_math$ceil} from '../../ol/math.js';\nimport {jsonp as _ol_net$jsonp} from '../../ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from '../../ol/net.js';\nimport {ClientError as _ol_net$ClientError} from '../../ol/net.js';\nimport {getJSON as _ol_net$getJSON} from '../../ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from '../../ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from '../../ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from '../../ol/net.js';\nimport {clear as _ol_obj$clear} from '../../ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from '../../ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from '../../ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from '../../ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from '../../ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from '../../ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from '../../ol/proj.js';\nimport {get as _ol_proj$get} from '../../ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from '../../ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from '../../ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from '../../ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from '../../ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from '../../ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from '../../ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from '../../ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from '../../ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from '../../ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from '../../ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from '../../ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from '../../ol/proj.js';\nimport {transform as _ol_proj$transform} from '../../ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from '../../ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from '../../ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from '../../ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from '../../ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from '../../ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from '../../ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from '../../ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from '../../ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from '../../ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from '../../ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from '../../ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from '../../ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from '../../ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from '../../ol/proj.js';\nimport {toContext as _ol_render$toContext} from '../../ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from '../../ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from '../../ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from '../../ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from '../../ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from '../../ol/reproj.js';\nimport {render as _ol_reproj$render} from '../../ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from '../../ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from '../../ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from '../../ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from '../../ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from '../../ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from '../../ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from '../../ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from '../../ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from '../../ol/size.js';\nimport {hasArea as _ol_size$hasArea} from '../../ol/size.js';\nimport {scale as _ol_size$scale} from '../../ol/size.js';\nimport {toSize as _ol_size$toSize} from '../../ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from '../../ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from '../../ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from '../../ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from '../../ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from '../../ol/sphere.js';\nimport {offset as _ol_sphere$offset} from '../../ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from '../../ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from '../../ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from '../../ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from '../../ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from '../../ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from '../../ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from '../../ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from '../../ol/tilecoord.js';\nimport {hashZXY as _ol_tilecoord$hashZXY} from '../../ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from '../../ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from '../../ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from '../../ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from '../../ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from '../../ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from '../../ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from '../../ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from '../../ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from '../../ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from '../../ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from '../../ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from '../../ol/transform.js';\nimport {reset as _ol_transform$reset} from '../../ol/transform.js';\nimport {multiply as _ol_transform$multiply} from '../../ol/transform.js';\nimport {set as _ol_transform$set} from '../../ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from '../../ol/transform.js';\nimport {apply as _ol_transform$apply} from '../../ol/transform.js';\nimport {rotate as _ol_transform$rotate} from '../../ol/transform.js';\nimport {scale as _ol_transform$scale} from '../../ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from '../../ol/transform.js';\nimport {translate as _ol_transform$translate} from '../../ol/transform.js';\nimport {compose as _ol_transform$compose} from '../../ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from '../../ol/transform.js';\nimport {invert as _ol_transform$invert} from '../../ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from '../../ol/transform.js';\nimport {determinant as _ol_transform$determinant} from '../../ol/transform.js';\nimport {toString as _ol_transform$toString} from '../../ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from '../../ol/uri.js';\nimport {renderXYZTemplate as _ol_uri$renderXYZTemplate} from '../../ol/uri.js';\nimport {pickUrl as _ol_uri$pickUrl} from '../../ol/uri.js';\nimport {expandUrl as _ol_uri$expandUrl} from '../../ol/uri.js';\nimport {abstract as _ol_util$abstract} from '../../ol/util.js';\nimport {getUid as _ol_util$getUid} from '../../ol/util.js';\nimport {VERSION as _ol_util$VERSION} from '../../ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from '../../ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from '../../ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from '../../ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from '../../ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from '../../ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from '../../ol/xml.js';\nimport {parse as _ol_xml$parse} from '../../ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from '../../ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from '../../ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from '../../ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from '../../ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from '../../ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from '../../ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from '../../ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from '../../ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from '../../ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from '../../ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from '../../ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from '../../ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from '../../ol/xml.js';\nimport {serialize as _ol_xml$serialize} from '../../ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from '../../ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from '../../ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from '../../ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from '../../ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from '../../ol/xml.js';\nimport {create as _ol_vec_mat4$create} from '../../ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from '../../ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from '../../ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from '../../ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from '../../ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from '../../ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from '../../ol/tilegrid/common.js';\nimport $ol$style$Circle from '../../ol/style/Circle.js';\nimport $ol$style$Fill from '../../ol/style/Fill.js';\nimport $ol$style$Icon from '../../ol/style/Icon.js';\nimport $ol$style$IconImage from '../../ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from '../../ol/style/IconImage.js';\nimport $ol$style$IconImageCache from '../../ol/style/IconImageCache.js';\nimport {getCacheKey as _ol_style_IconImageCache$getCacheKey} from '../../ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from '../../ol/style/IconImageCache.js';\nimport $ol$style$Image from '../../ol/style/Image.js';\nimport $ol$style$RegularShape from '../../ol/style/RegularShape.js';\nimport $ol$style$Stroke from '../../ol/style/Stroke.js';\nimport $ol$style$Style from '../../ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from '../../ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from '../../ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from '../../ol/style/Style.js';\nimport $ol$style$Text from '../../ol/style/Text.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from '../../ol/style/flat.js';\nimport $ol$structs$LRUCache from '../../ol/structs/LRUCache.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from '../../ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from '../../ol/source/BingMaps.js';\nimport $ol$source$BingMaps from '../../ol/source/BingMaps.js';\nimport $ol$source$Cluster from '../../ol/source/Cluster.js';\nimport $ol$source$DataTile from '../../ol/source/DataTile.js';\nimport $ol$source$Google from '../../ol/source/Google.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from '../../ol/source/Image.js';\nimport $ol$source$Image from '../../ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from '../../ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from '../../ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from '../../ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from '../../ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from '../../ol/source/ImageStatic.js';\nimport $ol$source$ImageTile from '../../ol/source/ImageTile.js';\nimport $ol$source$ImageWMS from '../../ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from '../../ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from '../../ol/source/OSM.js';\nimport $ol$source$OSM from '../../ol/source/OSM.js';\nimport {Processor as _ol_source_Raster$Processor} from '../../ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from '../../ol/source/Raster.js';\nimport $ol$source$Raster from '../../ol/source/Raster.js';\nimport $ol$source$Source from '../../ol/source/Source.js';\nimport $ol$source$StadiaMaps from '../../ol/source/StadiaMaps.js';\nimport $ol$source$Tile from '../../ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from '../../ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from '../../ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from '../../ol/source/TileDebug.js';\nimport $ol$source$TileImage from '../../ol/source/TileImage.js';\nimport $ol$source$TileJSON from '../../ol/source/TileJSON.js';\nimport $ol$source$TileWMS from '../../ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from '../../ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from '../../ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from '../../ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from '../../ol/source/Vector.js';\nimport $ol$source$Vector from '../../ol/source/Vector.js';\nimport $ol$source$WMTS from '../../ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from '../../ol/source/WMTS.js';\nimport $ol$source$XYZ from '../../ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from '../../ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from '../../ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from '../../ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from '../../ol/source/common.js';\nimport {appendCollectionsQueryParam as _ol_source_ogcTileUtil$appendCollectionsQueryParam} from '../../ol/source/ogcTileUtil.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from '../../ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from '../../ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from '../../ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from '../../ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from '../../ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from '../../ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from '../../ol/source/wms.js';\nimport {getFeatureInfoUrl as _ol_source_wms$getFeatureInfoUrl} from '../../ol/source/wms.js';\nimport {getLegendUrl as _ol_source_wms$getLegendUrl} from '../../ol/source/wms.js';\nimport $ol$reproj$DataTile from '../../ol/reproj/DataTile.js';\nimport $ol$reproj$Image from '../../ol/reproj/Image.js';\nimport $ol$reproj$Tile from '../../ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from '../../ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from '../../ol/reproj/common.js';\nimport $ol$renderer$Composite from '../../ol/renderer/Composite.js';\nimport $ol$renderer$Layer from '../../ol/renderer/Layer.js';\nimport $ol$renderer$Map from '../../ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from '../../ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from '../../ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from '../../ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from '../../ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from '../../ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from '../../ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from '../../ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from '../../ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from '../../ol/render/Box.js';\nimport $ol$render$Event from '../../ol/render/Event.js';\nimport $ol$render$Feature from '../../ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from '../../ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from '../../ol/render/Feature.js';\nimport $ol$render$VectorContext from '../../ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from '../../ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from '../../ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from '../../ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from '../../ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from '../../ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from '../../ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from '../../ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from '../../ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from '../../ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from '../../ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from '../../ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from '../../ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from '../../ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from '../../ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from '../../ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from '../../ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from '../../ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from '../../ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from '../../ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from '../../ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from '../../ol/render/canvas.js';\nimport $ol$render$canvas$Builder from '../../ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from '../../ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from '../../ol/render/canvas/Executor.js';\nimport {ALL as _ol_render_canvas_ExecutorGroup$ALL} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {DECLUTTER as _ol_render_canvas_ExecutorGroup$DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {NON_DECLUTTER as _ol_render_canvas_ExecutorGroup$NON_DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ExecutorGroup from '../../ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from '../../ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from '../../ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from '../../ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from '../../ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$ZIndexContext from '../../ol/render/canvas/ZIndexContext.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from '../../ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from '../../ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from '../../ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from '../../ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from '../../ol/render/canvas/style.js';\nimport $ol$proj$Projection from '../../ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from '../../ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from '../../ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from '../../ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from '../../ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from '../../ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from '../../ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from '../../ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from '../../ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from '../../ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from '../../ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from '../../ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from '../../ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from '../../ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from '../../ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from '../../ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from '../../ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from '../../ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from '../../ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from '../../ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from '../../ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from '../../ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from '../../ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from '../../ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from '../../ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from '../../ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from '../../ol/proj/transforms.js';\nimport $ol$layer$Base from '../../ol/layer/Base.js';\nimport $ol$layer$BaseImage from '../../ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from '../../ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from '../../ol/layer/BaseVector.js';\nimport $ol$layer$Flow from '../../ol/layer/Flow.js';\nimport $ol$layer$Graticule from '../../ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from '../../ol/layer/Group.js';\nimport $ol$layer$Group from '../../ol/layer/Group.js';\nimport $ol$layer$Heatmap from '../../ol/layer/Heatmap.js';\nimport $ol$layer$Image from '../../ol/layer/Image.js';\nimport $ol$layer$Layer from '../../ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from '../../ol/layer/Layer.js';\nimport $ol$layer$Tile from '../../ol/layer/Tile.js';\nimport $ol$layer$Vector from '../../ol/layer/Vector.js';\nimport $ol$layer$VectorImage from '../../ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from '../../ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from '../../ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from '../../ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from '../../ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from '../../ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from '../../ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from '../../ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from '../../ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from '../../ol/interaction/Draw.js';\nimport $ol$interaction$Draw from '../../ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from '../../ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from '../../ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Extent from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from '../../ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from '../../ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from '../../ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from '../../ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from '../../ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from '../../ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from '../../ol/interaction/Modify.js';\nimport $ol$interaction$Modify from '../../ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from '../../ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from '../../ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from '../../ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from '../../ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from '../../ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from '../../ol/interaction/Select.js';\nimport $ol$interaction$Select from '../../ol/interaction/Select.js';\nimport $ol$interaction$Snap from '../../ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from '../../ol/interaction/Translate.js';\nimport $ol$interaction$Translate from '../../ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from '../../ol/interaction/defaults.js';\nimport $ol$geom$Circle from '../../ol/geom/Circle.js';\nimport $ol$geom$Geometry from '../../ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from '../../ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from '../../ol/geom/LineString.js';\nimport $ol$geom$LinearRing from '../../ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from '../../ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from '../../ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from '../../ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from '../../ol/geom/Point.js';\nimport $ol$geom$Polygon from '../../ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from '../../ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from '../../ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from '../../ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from '../../ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from '../../ol/geom/SimpleGeometry.js';\nimport {getLayoutForStride as _ol_geom_SimpleGeometry$getLayoutForStride} from '../../ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from '../../ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from '../../ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from '../../ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from '../../ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from '../../ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from '../../ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from '../../ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from '../../ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from '../../ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from '../../ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from '../../ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from '../../ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from '../../ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from '../../ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from '../../ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from '../../ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from '../../ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from '../../ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from '../../ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from '../../ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from '../../ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from '../../ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from '../../ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from '../../ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from '../../ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from '../../ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from '../../ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from '../../ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from '../../ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from '../../ol/geom/flat/transform.js';\nimport $ol$format$Feature from '../../ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from '../../ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from '../../ol/format/Feature.js';\nimport {createRenderFeature as _ol_format_Feature$createRenderFeature} from '../../ol/format/Feature.js';\nimport {createGeometry as _ol_format_Feature$createGeometry} from '../../ol/format/Feature.js';\nimport $ol$format$GPX from '../../ol/format/GPX.js';\nimport $ol$format$GeoJSON from '../../ol/format/GeoJSON.js';\nimport $ol$format$IGC from '../../ol/format/IGC.js';\nimport $ol$format$JSONFeature from '../../ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from '../../ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from '../../ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from '../../ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from '../../ol/format/KML.js';\nimport $ol$format$KML from '../../ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from '../../ol/format/KML.js';\nimport $ol$format$MVT from '../../ol/format/MVT.js';\nimport $ol$format$OSMXML from '../../ol/format/OSMXML.js';\nimport $ol$format$OWS from '../../ol/format/OWS.js';\nimport $ol$format$Polyline from '../../ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from '../../ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from '../../ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from '../../ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from '../../ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from '../../ol/format/Polyline.js';\nimport $ol$format$TextFeature from '../../ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from '../../ol/format/TopoJSON.js';\nimport $ol$format$WFS from '../../ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from '../../ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from '../../ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from '../../ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from '../../ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from '../../ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from '../../ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from '../../ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from '../../ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from '../../ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from '../../ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from '../../ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from '../../ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from '../../ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from '../../ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from '../../ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from '../../ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from '../../ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from '../../ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from '../../ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from '../../ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from '../../ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from '../../ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from '../../ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from '../../ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from '../../ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from '../../ol/expr/expression.js';\nimport {SizeType as _ol_expr_expression$SizeType} from '../../ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from '../../ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from '../../ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from '../../ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from '../../ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from '../../ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from '../../ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from '../../ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from '../../ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from '../../ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from '../../ol/expr/expression.js';\nimport {computeGeometryType as _ol_expr_expression$computeGeometryType} from '../../ol/expr/expression.js';\nimport {numberToGlsl as _ol_expr_gpu$numberToGlsl} from '../../ol/expr/gpu.js';\nimport {arrayToGlsl as _ol_expr_gpu$arrayToGlsl} from '../../ol/expr/gpu.js';\nimport {colorToGlsl as _ol_expr_gpu$colorToGlsl} from '../../ol/expr/gpu.js';\nimport {sizeToGlsl as _ol_expr_gpu$sizeToGlsl} from '../../ol/expr/gpu.js';\nimport {getStringNumberEquivalent as _ol_expr_gpu$getStringNumberEquivalent} from '../../ol/expr/gpu.js';\nimport {stringToGlsl as _ol_expr_gpu$stringToGlsl} from '../../ol/expr/gpu.js';\nimport {uniformNameForVariable as _ol_expr_gpu$uniformNameForVariable} from '../../ol/expr/gpu.js';\nimport {newCompilationContext as _ol_expr_gpu$newCompilationContext} from '../../ol/expr/gpu.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_expr_gpu$PALETTE_TEXTURE_ARRAY} from '../../ol/expr/gpu.js';\nimport {buildExpression as _ol_expr_gpu$buildExpression} from '../../ol/expr/gpu.js';\nimport $ol$events$Event from '../../ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from '../../ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from '../../ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from '../../ol/events/SnapEvent.js';\nimport $ol$events$Target from '../../ol/events/Target.js';\nimport {all as _ol_events_condition$all} from '../../ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from '../../ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from '../../ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from '../../ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from '../../ol/events/condition.js';\nimport {always as _ol_events_condition$always} from '../../ol/events/condition.js';\nimport {click as _ol_events_condition$click} from '../../ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from '../../ol/events/condition.js';\nimport {never as _ol_events_condition$never} from '../../ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from '../../ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from '../../ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from '../../ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from '../../ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from '../../ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from '../../ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from '../../ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from '../../ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from '../../ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from '../../ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from '../../ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from '../../ol/events/condition.js';\nimport $ol$control$Attribution from '../../ol/control/Attribution.js';\nimport $ol$control$Control from '../../ol/control/Control.js';\nimport $ol$control$FullScreen from '../../ol/control/FullScreen.js';\nimport $ol$control$MousePosition from '../../ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from '../../ol/control/OverviewMap.js';\nimport $ol$control$Rotate from '../../ol/control/Rotate.js';\nimport $ol$control$ScaleLine from '../../ol/control/ScaleLine.js';\nimport $ol$control$Zoom from '../../ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from '../../ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from '../../ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from '../../ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.disposedError = _ol_DataTile$disposedError;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.NO_COLOR = _ol_color$NO_COLOR;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.lchaToRgba = _ol_color$lchaToRgba;\nol.color.normalize = _ol_color$normalize;\nol.color.rgbaToLcha = _ol_color$rgbaToLcha;\nol.color.toString = _ol_color$toString;\nol.color.withAlpha = _ol_color$withAlpha;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.getSharedCanvasContext2D = _ol_dom$getSharedCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.SizeType = _ol_expr_expression$SizeType;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.computeGeometryType = _ol_expr_expression$computeGeometryType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.expr.gpu = {};\nol.expr.gpu.PALETTE_TEXTURE_ARRAY = _ol_expr_gpu$PALETTE_TEXTURE_ARRAY;\nol.expr.gpu.arrayToGlsl = _ol_expr_gpu$arrayToGlsl;\nol.expr.gpu.buildExpression = _ol_expr_gpu$buildExpression;\nol.expr.gpu.colorToGlsl = _ol_expr_gpu$colorToGlsl;\nol.expr.gpu.getStringNumberEquivalent = _ol_expr_gpu$getStringNumberEquivalent;\nol.expr.gpu.newCompilationContext = _ol_expr_gpu$newCompilationContext;\nol.expr.gpu.numberToGlsl = _ol_expr_gpu$numberToGlsl;\nol.expr.gpu.sizeToGlsl = _ol_expr_gpu$sizeToGlsl;\nol.expr.gpu.stringToGlsl = _ol_expr_gpu$stringToGlsl;\nol.expr.gpu.uniformNameForVariable = _ol_expr_gpu$uniformNameForVariable;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.createGeometry = _ol_format_Feature$createGeometry;\nol.format.Feature.createRenderFeature = _ol_format_Feature$createRenderFeature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getLayoutForStride = _ol_geom_SimpleGeometry$getLayoutForStride;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Flow = $ol$layer$Flow;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.ALL = _ol_render_canvas_ExecutorGroup$ALL;\nol.render.canvas.ExecutorGroup.DECLUTTER = _ol_render_canvas_ExecutorGroup$DECLUTTER;\nol.render.canvas.ExecutorGroup.NON_DECLUTTER = _ol_render_canvas_ExecutorGroup$NON_DECLUTTER;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.ZIndexContext = $ol$render$canvas$ZIndexContext;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Google = $ol$source$Google;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageTile = $ol$source$ImageTile;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.appendCollectionsQueryParam = _ol_source_ogcTileUtil$appendCollectionsQueryParam;\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getFeatureInfoUrl = _ol_source_wms$getFeatureInfoUrl;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getLegendUrl = _ol_source_wms$getLegendUrl;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.getCacheKey = _ol_style_IconImageCache$getCacheKey;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.hashZXY = _ol_tilecoord$hashZXY;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.uri.expandUrl = _ol_uri$expandUrl;\nol.uri.pickUrl = _ol_uri$pickUrl;\nol.uri.renderXYZTemplate = _ol_uri$renderXYZTemplate;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nol.VERSION = ol.util.VERSION;\n\nol.getUid = ol.util.getUid;\n\nexport default ol;","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase,\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase,\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_,\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers,\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_,\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_,\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @override\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text on this layer. Any truthy value will enable\n * decluttering. The priority is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../Feature.js\").default} [FeatureType=import(\"../Feature.js\").default]\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<FeatureType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(FeatureType):(Point|null)} [geometryFunction]\n * Function that takes a {@link module:ol/Feature~Feature} as argument and returns a\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<FeatureType>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource<FeatureType>} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {VectorSource<Feature<import(\"../geom/Geometry.js\").default>>}\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options<FeatureType>} [options] Cluster options.\n   */\n  constructor(options) {\n    options = options || {};\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {FeatureType} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<FeatureType>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource<FeatureType>|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   * @override\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource<FeatureType>|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @override\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source?.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource<FeatureType>|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   * @override\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<FeatureType>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/source/Google\n */\n\nimport TileImage from './TileImage.js';\nimport ViewHint from '../ViewHint.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getBottomLeft, getTopRight} from '../extent.js';\nimport {toLonLat} from '../proj.js';\n\nconst createSessionUrl = 'https://tile.googleapis.com/v1/createSession';\nconst tileUrl = 'https://tile.googleapis.com/v1/2dtiles';\nconst attributionUrl = 'https://tile.googleapis.com/tile/v1/viewport';\nconst maxZoom = 22;\n\n/**\n * @typedef {Object} Options\n * @property {string} key Google Map Tiles API key. Get yours at https://developers.google.com/maps/documentation/tile/get-api-key.\n * @property {string} [mapType='roadmap'] The type of [base map](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields).\n * @property {string} [language='en-US'] An [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) for information displayed on the tiles.\n * @property {string} [region='US'] A [Common Locale Data Repository](https://cldr.unicode.org/) (CLDR) region identifier that represents the user location.\n * @property {string} [imageFormat] The image format used for the map tiles (e.g. `'jpeg'`, or `'png'`).\n * @property {string} [scale] Scale for map elements (`'scaleFactor1x'`, `'scaleFactor2x'`, or `'scaleFactor4x'`).\n * @property {boolean} [highDpi=false] Use high-resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types added to the map (e.g. `'layerRoadmap'`, `'layerStreetview'`, or `'layerTraffic'`).\n * @property {boolean} [overlay=false] Display only the `layerTypes` and not the underlying `mapType` (only works if `layerTypes` is provided).\n * @property {Array<Object>} [styles] [Custom styles](https://developers.google.com/maps/documentation/tile/style-reference) applied to the map.\n * @property {boolean} [attributionsCollapsible=true] Allow the attributions to be collapsed.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [apiOptions] An array of values specifying additional options to apply.\n * @property {boolean} [wrapX=true] Wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} SessionTokenRequest\n * @property {string} mapType The map type.\n * @property {string} language The language.\n * @property {string} region The region.\n * @property {string} [imageFormat] The image format.\n * @property {string} [scale] The scale.\n * @property {boolean} [highDpi] Use high resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types.\n * @property {boolean} [overlay] The overlay.\n * @property {Array<Object>} [styles] The styles.\n * @property {Array<string>} [apiOptions] An array of values specifying additional options to apply.\n */\n\n/**\n * @typedef {Object} SessionTokenResponse\n * @property {string} session The session token.\n * @property {string} expiry The session token expiry (seconds since the epoch as a string).\n * @property {number} tileWidth The tile width.\n * @property {number} tileHeight The tile height.\n * @property {string} imageFormat The image format.\n */\n\n/**\n * @classdesc\n * A tile layer source that renders tiles from the Google [Map Tiles API](https://developers.google.com/maps/documentation/tile/overview).\n * The constructor takes options that are passed to the request to create a session token.  Refer to the\n * [documentation](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields)\n * for additional details.\n * @api\n */\nclass Google extends TileImage {\n  /**\n   * @param {Options} options Google Maps options.\n   */\n  constructor(options) {\n    const highDpi = !!options.highDpi;\n\n    super({\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      projection: 'EPSG:3857',\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: highDpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @type {Error|null}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {SessionTokenRequest}\n     */\n    const sessionTokenRequest = {\n      mapType: options.mapType || 'roadmap',\n      language: options.language || 'en-US',\n      region: options.region || 'US',\n    };\n    if (options.imageFormat) {\n      sessionTokenRequest.imageFormat = options.imageFormat;\n    }\n    if (options.scale) {\n      sessionTokenRequest.scale = options.scale;\n    }\n    if (highDpi) {\n      sessionTokenRequest.highDpi = true;\n    }\n    if (options.layerTypes) {\n      sessionTokenRequest.layerTypes = options.layerTypes;\n    }\n    if (options.styles) {\n      sessionTokenRequest.styles = options.styles;\n    }\n    if (options.overlay === true) {\n      sessionTokenRequest.overlay = true;\n    }\n    if (options.apiOptions) {\n      sessionTokenRequest.apiOptions = options.apiOptions;\n    }\n\n    /**\n     * @type {SessionTokenRequest}\n     * @private\n     */\n    this.sessionTokenRequest_ = sessionTokenRequest;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.sessionTokenValue_;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.sessionRefreshId_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportAttribution_;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.previousViewportExtent_;\n\n    this.createSession_();\n  }\n\n  /**\n   * @return {Error|null} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * source.on('change', () => {\n   *   if (source.getState() === 'error') {\n   *     console.error(source.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Exposed here so it can be overridden in the tests.\n   * @param {string} url The URL.\n   * @param {RequestInit} config The config.\n   * @return {Promise<Response>} A promise that resolves with the response.\n   */\n  fetchSessionToken(url, config) {\n    return fetch(url, config);\n  }\n\n  /**\n   * Get or renew a session token for use with tile requests.\n   * @private\n   */\n  async createSession_() {\n    const url = createSessionUrl + '?key=' + this.apiKey_;\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.sessionTokenRequest_),\n    };\n\n    const response = await this.fetchSessionToken(url, config);\n    if (!response.ok) {\n      try {\n        const body = await response.json();\n        this.error_ = new Error(body.error.message);\n      } catch {\n        this.error_ = new Error('Error fetching session token');\n      }\n      this.setState('error');\n      return;\n    }\n\n    /**\n     * @type {SessionTokenResponse}\n     */\n    const sessionTokenResponse = await response.json();\n\n    const tilePixelRatio = this.getTilePixelRatio(1);\n    const tileSize = [\n      sessionTokenResponse.tileWidth / tilePixelRatio,\n      sessionTokenResponse.tileHeight / tilePixelRatio,\n    ];\n\n    this.tileGrid = createXYZ({\n      extent: extentFromProjection(this.getProjection()),\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n\n    const session = sessionTokenResponse.session;\n    this.sessionTokenValue_ = session;\n    const key = this.apiKey_;\n    this.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const url = `${tileUrl}/${z}/${x}/${y}?session=${session}&key=${key}`;\n      return url;\n    };\n\n    const expiry = parseInt(sessionTokenResponse.expiry, 10) * 1000;\n    const timeout = Math.max(expiry - Date.now() - 60 * 1000, 1);\n    this.sessionRefreshId_ = setTimeout(() => this.createSession_(), timeout);\n\n    this.setAttributions(this.fetchAttributions_.bind(this));\n    // even if the state is already ready, we want the change event\n    this.setState('ready');\n  }\n\n  /**\n   * @param {import('../Map.js').FrameState} frameState The frame state.\n   * @return {Promise<string>} The attributions.\n   * @private\n   */\n  async fetchAttributions_(frameState) {\n    if (\n      frameState.viewHints[ViewHint.ANIMATING] ||\n      frameState.viewHints[ViewHint.INTERACTING] ||\n      frameState.animate\n    ) {\n      return this.previousViewportAttribution_;\n    }\n    const [west, south] = toLonLat(\n      getBottomLeft(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const [east, north] = toLonLat(\n      getTopRight(frameState.extent),\n      frameState.viewState.projection,\n    );\n    const tileGrid = this.getTileGrid();\n    const zoom = tileGrid.getZForResolution(\n      frameState.viewState.resolution,\n      this.zDirection,\n    );\n    const viewportExtent = `zoom=${zoom}&north=${north}&south=${south}&east=${east}&west=${west}`;\n    // check if the extent or zoom has actually changed to avoid unnecessary requests\n    if (this.previousViewportExtent_ == viewportExtent) {\n      return this.previousViewportAttribution_;\n    }\n    this.previousViewportExtent_ = viewportExtent;\n    const session = this.sessionTokenValue_;\n    const key = this.apiKey_;\n    const url = `${attributionUrl}?session=${session}&key=${key}&${viewportExtent}`;\n    this.previousViewportAttribution_ = await fetch(url)\n      .then((response) => response.json())\n      .then((json) => json.copyright);\n\n    return this.previousViewportAttribution_;\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    clearTimeout(this.sessionRefreshId_);\n    super.disposeInternal();\n  }\n}\n\nexport default Google;\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection,\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      }),\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this),\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {Array<string>} [collections] A list of geospatial data sub-resources to include. If not provided, the entire dataset will\n * be included. This option is not applicable when requesting the tileset for a single collection.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes. For supporting the `collections`\n * option, the service must conform to the collections selection\n * (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/collections-selection) conformance class.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n      collections: options.collections,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params,\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas,\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams, expandUrl} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().startsWith('ne');\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as Google} from './source/Google.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageTile} from './source/ImageTile.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["BaseEvent","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","evt","ObjectEventType","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType$1","listen","thisArg","once","originalListener","bind","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","Tile","tileCoord","state","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getTileCoord","getState","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeChildren","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","removeChild","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","disposedError","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","DataTile","loader_","loader","data_","error_","size_","size","controller_","controller","getSize","imageData","getData","getError","then","catch","abort","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","matrixPrecision","toString","map","round","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","destinationStride","anchor","anchorX","anchorY","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","startsWith","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","message","ImageState","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageWrapper","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","complete","ImageCanvas","canvas_","handleLoad_","ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","LayerProperty","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","series","animation","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","smoothExtentConstraint","constrainOnlyCenter","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","RenderEventType","handlePrecompose_","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","quickselect","left","defaultCompare","s","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","xyz$1","luv","arg","o","_u","_v","u","v","xn","yn","zn","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","cstr","space","parts","alpha","names","base","exec","dims","trim","parseFloat","endsWith","match","parse","NO_COLOR","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getCacheKey","getPattern","pattern","createPattern","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","color_","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","globalCompositeOperation","onChange","cacheKey","iconImageCache","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","concat","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","encoded","expectedType","colorFromString","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","interpolationType","JSON","stringify","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","newEvaluationContext","buildExpression","compileExpression","colorValue","compileAssertionExpression","nameExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","toStyleLike","toStyleFunction","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","layerIndex","sourceState","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","getAllLayers","visibleAttributions","flatMap","getAttributionsCollapsible","setCollapsible","from","updateElement_","attribution","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attributionOptions","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","rootNode","activeElement","ShadowRoot","host","focusWithTabindex","hasAttribute","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","KeyboardZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","Overlay","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","entry","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","hashZXY","withinExtentAndZ","tileRange","getFullTileRange","TileCache","pruneExceptNewestZ","TileRange","containsTileRange","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","setRequestHeader","resolveUrl","URL","href","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","userTransform","context_","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","beginPath","setTransform","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getBuilder","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","hasImage","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","fromResolutionLike","ERROR_THRESHOLD","Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","Source","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","attributionLike","tmpTileCoord","TileGrid","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","tilePixelRatio_","tilePixelRatio","tmpSize","tileOptions","zDirection","tileCache","getTileCacheForProjection","getGutterForProjection","setKey","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","appendParams","uri","params","keyParams","encodeURIComponent","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","pickUrl","urls","expandUrl","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","createFromTemplate","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","tileCoordKey","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","quadKey","digits","mask","XYZ","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","setCenterAndRadius","getRadiusSquared_","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","appendPoint","multiPoint","getPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","toGeometry","VectorEventType","VectorSourceEvent","VectorSource","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","ReprojDataTile","reprojData_","reprojError_","reprojSize_","sourceTileGridExtent","dataSources","imageLike","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","ImageData","DataTileSource","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","sourceLoader","AbortController","loaderOptions","signal","requestZ","requestX","requestY","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DECIMALS","ImageSourceEventType","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","getRequestExtent","handleImageChange","defaultImageLoadFunction","imageResolution","getRequestUrl","baseUrl","srid","createLoader","hidpi","F","FORMAT","TRANSPARENT","imageExtent","resolutionX","resolutionY","loadError","loadImage","makeLoaderFromTemplates","makeLoaderFromUrlLike","keyCount","keyFromUrlLike","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","getFeatureInfoUrl","projectionObj","baseParams","QUERY_LAYERS","INFO_FORMAT","getLegendUrl","mpu","knownMapMediaTypes","knownVectorMediaTypes","appendCollectionsQueryParam","tileUrlTemplate","collections","pathname","logError","encodedCollections","searchParams","append","decodeURIComponent","getMapTileUrlTemplate","links","mediaType","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","orderedAxes","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","ATTRIBUTION","BaseImageLayer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","unshift","getLayer","renderIfReadyAndVisible","ZIndexContext","instructions_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","prepareContainer","canvasTransform","toTransformString","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","clipped","dw","dh","ImageLayer","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","getUseInterimTilesOnError","sourceKey","addTileToLookup","tilesByZ","existing","has","removeTileFromLookup","delete","getRenderExtent","gridExtent","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","createTileCoord","tileCache_","renderedProjection_","getTileCache","getOrCreateTile","tileSource","tileOrigin","sourceRevision","renderedRevision_","enqueueTiles","initialZ","minZ","tileQueueKey","findStaleTile_","staleKeys","findAltTiles_","altZ","covered","frameExtent","canvasExtent","targetZ","renderExtent","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","TileLayer","createMinion","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","imageOps_","workers","onWorkerMessage_","minion","terminated","postMessage","terminate","createFauxWorker","workers_","queue_","maxQueueLength_","queue","running_","dataLookup_","job_","process","inputs","enqueue_","dispatch_","job","slices","resolveJob_","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttributions","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","alidade_satellite","outdoors","osm_bright","ProviderConfig","retina","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","handleError_","json","requestJSONP","onXHRLoad_","onXHRError_","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillPatternScale","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","widths_","zIndexContext_","getZIndexContext","createLabel","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","getSquaredRenderTolerance","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","dirty","replayGroupInstructions","CanvasVectorImageLayerRenderer","vectorRenderer_","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","fetch","ok","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","WebGLArrayBuffer","usage","usage_","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","setArray","ArrayType","getUsage","Uint32Array","BaseTileRepresentation","helper","setTile","uploadTile","setReady","setHelper","bindAndConfigure","gl","texture","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadDataTexture","getGL","textureType","canInterpolate","FLOAT","getExtension","UNSIGNED_BYTE","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","RGBA","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","texImage2D","TileTexture","textures","renderSize_","flushBufferData","deleteBuffer","deleteTexture","createTexture","uploadImageTexture","sourceTileSize","textureCount","textureDataArrays","textureIndex","dataValue","bandIndex","textureData","getImagePixelData_","renderCol","renderRow","renderHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","getArrayPixelData_","sourceSize","sourceWidth","sourceHeight","getPixelData","ContextEventType","WebGLPostProcessingPass","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getRenderTargetTexture","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","bufferKey","bufferCache","webGlBuffer","buf","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","bindFrameBuffer","frameBuffer","bindInitialFrameBuffer","slot","uniformName","bindAttribute","attributeName","getAttributeLocation","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","WebGLTexture","prevValue","imageReady","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","onMapChanged_","clearCache","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","depthForZ","lookupHasTile","tileRepresentationLookup","tileIds","addTileRepresentationToLookup","tileRepresentation","representationsByZ","getTileCoordKey","WebGLBaseTileLayerRenderer$1","tileTransform_","tempMat4","tempSize_","tileRepresentationCache","createTileRepresentation","beforeTilesRender","tilesWithAlpha","beforeTilesMaskRender","renderTile","tileTransform","tileExtent","depth","renderTileMask","tileZ","drawTile_","alphaLookup","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","tileCenterI","tileCenterJ","resetTransform","scaleTransform","rotateTransform","translateTransform","blend","beforeFinalize","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","Attributes","attributeDescriptions","WebGLTileLayerRenderer","WebGLBaseTileLayerRenderer","program_","vertexShader_","fragmentShader_","indices_","paletteTextures_","paletteTextures","paletteTexture","tileTexture","paletteIndex","mat4FromTransform","gutterExtent","getSources","tileTextureCache","deleteProgram","U","TEXTURE","VELOCITY_TEXTURE","POSITION_TEXTURE","PARTICLE_COUNT_SQRT","MAX_SPEED","GAIN","OFFSET","IS_FLOAT","RANDOM_SEED","SPEED_FACTOR","DROP_RATE","DROP_RATE_BUMP","OPACITY","VIEWPORT_SIZE_PX","V","FlowLayerRenderer","tileVertexShader","tileFragmentShader","maxSpeed","particleColorFragmentShader_","particleColorFragmentShader","velocityTexture_","particleCountSqrt_","particles","particleIndexBuffer_","quadBuffer_","particlePositionProgram_","particlePositionVertexShader_","particlePositionVertexShader","particlePositionFragmentShader_","particlePositionFragmentShader","previousPositionTexture_","nextPositionTexture_","particleColorProgram_","particleColorVertexShader_","particleColorVertexShader","textureProgram_","textureVertexShader_","textureVertexShader","textureFragmentShader_","textureFragmentShader","previousTrailsTexture_","nextTrailsTexture_","fadeOpacity_","maxSpeed_","speedFactor_","speedFactor","dropRate_","dropRateBump_","tempVec2_","renderedWidth_","renderedHeight_","framebuffer_","particleCount","particleIndices","particleIndexBuffer","quadIndices","quadBuffer","particlePositions","random","createSizeDependentTextures_","screenWidth","screenHeight","blank","copyTexImage2D","drawParticleTrails_","updateParticlePositions_","drawTexture_","drawParticleColor_","SRC_ALPHA","current","POINTS","colorEncodeId","radix","divide","PaletteTexture","texture_","numberToGlsl","arrayToGlsl","colorToGlsl","sizeToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","newCompilationContext","inFragmentShader","functions","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","compilationContext","compile","createCompiler","compilers","propName","varName","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","numColors","palette","paletteName","compiler","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","attribute","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","BA","BU","quadVertexShader","parseStyle","pipeline","variableNames","uniformDeclarations","functionDefintions","FlowLayer","particles_","styleVariables_","handleSourceUpdate_","updateStyleVariables","parsedStyle","VectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","tmpArray4","WebGLRenderTarget","helper_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","startWorld","getWorldParameters","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","userCoords","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","renderCount","DEFAULT_GRADIENT","DragAndDropEventType","DragAndDropEvent","file","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","py","getDefaultStyleFunction","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","readNumber","writeNumber","to5","differentNumber","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","squaredCoordinateDistance","distanceToCircumference","closestOnSegmentData","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","features_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","SnapEventType","SnapEvent","vertex","vertexPixel","getFeatureFromEvent","TranslateEventType","TranslateEvent","startCoordinate","flipXY","destOffset","FeatureFormat","defaultFeatureProjection","featureClass","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","equivalentProjection","fromProjection","toProjection","transformExtentWithOptions","GeometryConstructor","createRenderFeature","orientFlatCoordinates","createGeometry","XMLFeature","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","AUTHOR_PARSERS","email","getAttribute","domain","parseLink","METADATA_PARSERS","desc","author","copyright","COPYRIGHT_PARSERS","keywords","bounds","minlat","minlon","maxlat","maxlon","extensions","parseExtensions","year","license","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","hasZ","hasM","applyLayoutOptions","setAttributeNS","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","HFDTEDATE_RECORD_RE","NEWLINE_RE","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","substr","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","Pbf","ArrayBuffer","isView","dataView","readFields","readField","readVarint","tag","startPos","skip","readMessage","readFixed32","getUint32","readSFixed32","getInt32","readFixed64","readSFixed64","readFloat","getFloat32","readDouble","getFloat64","isSigned","toNum","readVarintRemainder","readVarint64","readSVarint","num","subarray","str","b0","b3","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedEnd","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeVarint","realloc","writeFixed32","setInt32","writeSFixed32","writeFixed64","writeSFixed64","pbf","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeSVarint","writeBoolean","writeString","lead","writeUtf8","makeRoomForExtraLength","writeFloat","setFloat32","writeDouble","setFloat64","writeBytes","writeRawMessage","writeMessage","writePackedVarint","writePackedSVarint","writePackedBoolean","writePackedFloat","writePackedDouble","writePackedFixed32","writePackedSFixed32","writePackedFixed64","writePackedSFixed64","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","extraLen","LN2","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","XML","read","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","geometryName","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","segments","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","dim","asXYZ","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","geom","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML32","Filter","tagName_","getTagName","LogicalNary","And","Bbox","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","timeInstant","timePosition","writeGetFeature","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","Format","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","readBoundingBox","BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","PROJECTION","COORDINATE_FORMAT","MAX_RATIO","MIN_RATIO","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","Direction","ol","$ol$Collection","_ol_Collection$CollectionEvent","$ol$DataTile","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$disposedError","_ol_DataTile$toArray","$ol$Disposable","$ol$Feature","_ol_Feature$createStyleFunction","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","_ol_Geolocation$GeolocationError","$ol$Image","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","$ol$ImageCanvas","$ol$ImageTile","$ol$Kinetic","$ol$Map","$ol$MapBrowserEvent","$ol$MapBrowserEventHandler","$ol$MapEvent","$ol$Object","_ol_Object$ObjectEvent","$ol$Observable","_ol_Observable$unByKey","$ol$Overlay","$ol$Tile","$ol$TileCache","$ol$TileQueue","_ol_TileQueue$getTilePriority","$ol$TileRange","_ol_TileRange$createOrUpdate","VectorRenderTile","getSourceTiles","removeSourceTiles","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","removeSourceTiles_","hasContext","getReplayState","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedTileZ","$ol$View","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$NO_COLOR","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","isStringColor","_","_ol_color$lchaToRgba","_ol_color$normalize","_ol_color$rgbaToLcha","_ol_color$toString","_ol_color$withAlpha","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","$ol$control$Attribution","$ol$control$Control","FullScreen","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","ovmap_","boxSizing","boxOverlay_","scope","overlayBox","move","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","updateBoxAfterOvmapIsRendered_","newView","resetExtent_","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","$ol$control$Rotate","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","$ol$control$Zoom","ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","ZoomToExtent","handleZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$getSharedCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","$ol$events$Event","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","$ol$events$Target","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$SizeType","_ol_expr_expression$StringType","_ol_expr_expression$computeGeometryType","_ol_expr_expression$includesType","_ol_expr_expression$isType","_ol_expr_expression$newParsingContext","overlapsType","oneType","otherType","_ol_expr_expression$parse","_ol_expr_expression$typeName","gpu","_ol_expr_gpu$PALETTE_TEXTURE_ARRAY","_ol_expr_gpu$arrayToGlsl","_ol_expr_gpu$buildExpression","_ol_expr_gpu$colorToGlsl","_ol_expr_gpu$getStringNumberEquivalent","_ol_expr_gpu$newCompilationContext","_ol_expr_gpu$numberToGlsl","_ol_expr_gpu$sizeToGlsl","_ol_expr_gpu$stringToGlsl","_ol_expr_gpu$uniformNameForVariable","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","$ol$format$Feature","_ol_format_Feature$createGeometry","_ol_format_Feature$createRenderFeature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","geometryObject","objects","IGC","altitudeMode_","lad_","lod_","ladStart_","ladStop_","lodStart_","lodStop_","month","day","lastDateTime","hour","minute","second","UTC","numberAdds","addCode","addStart","addStop","$ol$format$JSONFeature","KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","OSMXML","$ol$format$OWS","Polyline","factor_","geometryLayout_","geometryLayout","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","$ol$format$TextFeature","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","WFS","version_","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","writeFilter","WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","WMTSCapabilities","owsParser_","WMTSCapabilityObject","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","$ol$geom$Circle","$ol$geom$Geometry","$ol$geom$GeometryCollection","$ol$geom$LineString","$ol$geom$LinearRing","$ol$geom$MultiLineString","$ol$geom$MultiPoint","$ol$geom$MultiPolygon","$ol$geom$Point","$ol$geom$Polygon","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","$ol$geom$SimpleGeometry","_ol_geom_SimpleGeometry$getLayoutForStride","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","$ol$interaction$DoubleClickZoom","DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","handleResult_","formats","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","_ol_interaction_DragAndDrop$DragAndDropEvent","$ol$interaction$DragBox","_ol_interaction_DragBox$DragBoxEvent","$ol$interaction$DragPan","$ol$interaction$DragRotate","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","$ol$interaction$DragZoom","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","mode","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","getSegments","closestSegment","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","_ol_interaction_Extent$ExtentEvent","$ol$interaction$Interaction","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","$ol$interaction$KeyboardPan","$ol$interaction$KeyboardZoom","animationOptions","animationOptions_","params_","replace_","prefix_","initial_","trackedCallbacks_","trackedValues_","getParamName_","get_","set_","delete_","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","track","updateHistory_","visibilities","pushState","Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","_ol_interaction_Modify$ModifyEvent","$ol$interaction$MouseWheelZoom","$ol$interaction$PinchRotate","$ol$interaction$PinchZoom","Pointer","$ol$interaction$Pointer","_ol_interaction_Pointer$centroid","$ol$interaction$Select","_ol_interaction_Select$SelectEvent","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","$ol$layer$Base","BaseImage","$ol$layer$BaseImage","BaseTile","$ol$layer$BaseTile","$ol$layer$BaseVector","Flow","$ol$layer$Flow","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","epsg4326Projection","toLonLatTransform","lonLatCoordinates","worldExtentP","Group","$ol$layer$Group","_ol_layer_Group$GroupEvent","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","builder","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$Image","$ol$layer$Layer","_ol_layer_Layer$inView","$ol$layer$Tile","Vector","$ol$layer$Vector","VectorImage","imageRatio","imageRatio_","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","$ol$proj$Projection","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","_ol_proj$toLonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","$ol$render$Box","$ol$render$Event","$ol$render$Feature","toFeature","_ol_render_Feature$toGeometry","$ol$render$VectorContext","$ol$render$canvas$Builder","$ol$render$canvas$BuilderGroup","$ol$render$canvas$Executor","$ol$render$canvas$ExecutorGroup","_ol_render_canvas_ExecutorGroup$ALL","_ol_render_canvas_ExecutorGroup$DECLUTTER","_ol_render_canvas_ExecutorGroup$NON_DECLUTTER","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","$ol$render$canvas$ImageBuilder","Immediate","$ol$render$canvas$Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","$ol$render$canvas$LineStringBuilder","$ol$render$canvas$PolygonBuilder","$ol$render$canvas$TextBuilder","_ol_render_canvas_TextBuilder$TEXT_ALIGN","$ol$render$canvas$ZIndexContext","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","Composite","$ol$renderer$Composite","$ol$renderer$Layer","$ol$renderer$Map","$ol$renderer$canvas$ImageLayer","$ol$renderer$canvas$Layer","_ol_renderer_canvas_Layer$canvasPool","$ol$renderer$canvas$TileLayer","VectorImageLayer","$ol$renderer$canvas$VectorImageLayer","$ol$renderer$canvas$VectorLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","$ol$reproj$DataTile","$ol$reproj$Image","$ol$reproj$Tile","$ol$reproj$Triangulation","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","_ol_source_BingMaps$quadKey","Cluster","interpolationRatio","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$source$DataTile","Google","highDpi","sessionTokenRequest","mapType","language","region","imageFormat","layerTypes","apiOptions","sessionTokenRequest_","sessionTokenValue_","sessionRefreshId_","previousViewportAttribution_","previousViewportExtent_","createSession_","fetchSessionToken","createSessionUrl","method","headers","sessionTokenResponse","session","expiry","fetchAttributions_","viewportExtent","$ol$source$Image","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","imageLoadFunction_","imageLoadFunction","imageSize_","ratio_","loaderProjection_","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","canvasFunction_","canvasFunction","canvasElement","ImageStatic","imageExtent_","getImageExtent","ImageWMS","serverType_","sourceProjectionObj","OGCMapTile","handleTileSetInfo_","tileSetInfo","OSM","_ol_source_OSM$ATTRIBUTION","Raster","$ol$source$Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","$ol$source$Source","StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$Tile","_ol_source_Tile$TileSourceEvent","TileArcGISRest","getKeyForParams_","getRequestUrl_","TileDebug","strokeRect","$ol$source$TileImage","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","tileJSON","getTileJSON","attributionExtent","TileWMS","v13_","updateV13_","sourceProjCoord","LAYERS","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","_ol_source_UTFGrid$CustomTile","$ol$source$UrlTile","$ol$source$Vector","_ol_source_Vector$VectorSourceEvent","WMTS","requestEncoding","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","TileCol","TileRow","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","el","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","$ol$source$XYZ","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","_ol_source_common$DECIMALS","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$appendCollectionsQueryParam","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getFeatureInfoUrl","_ol_source_wms$getImageSrc","_ol_source_wms$getLegendUrl","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","$ol$structs$LRUCache","$ol$structs$PriorityQueue","_ol_structs_PriorityQueue$DROP","$ol$structs$RBush","$ol$style$Circle","$ol$style$Fill","$ol$style$Icon","$ol$style$IconImage","_ol_style_IconImage$get","$ol$style$IconImageCache","_ol_style_IconImageCache$getCacheKey","_ol_style_IconImageCache$shared","$ol$style$Image","$ol$style$RegularShape","$ol$style$Stroke","$ol$style$Style","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","$ol$style$Text","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$hashZXY","_ol_tilecoord$withinExtentAndZ","$ol$tilegrid$TileGrid","$ol$tilegrid$WMTS","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","_ol_uri$expandUrl","_ol_uri$pickUrl","_ol_uri$renderXYZTemplate","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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","x_google_ignoreList":[71,72,75,76,77,78,79,80,81,82,267]}