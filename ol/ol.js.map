{"version":3,"file":"ol.js","sources":["../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/css.js","../ol/render/canvas.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/size.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/colorlike.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/structs/RBush.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/uri.js","../ol/source/arcgisRest.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/static.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/tilegrid/WMTS.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/Image.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/IconImage.js","../ol/style/Icon.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Text.js","../ol/webgl/PaletteTexture.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/renderer/webgl/TileLayer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/style/expressions.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/geom/flat/length.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/render/canvas/style.js","../ol/proj/proj4.js","../ol/layer/BaseVector.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/webgl/ShaderBuilder.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../index.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.0.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions()\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading)\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord))\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries'\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (((this.wantedExtent_ &&\n            containsExtent(this.wantedExtent_, requestExtent)) ||\n            containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  if (modifiedUrl == baseUrl) {\n    throw new Error('`options.featureTypes` should be an Array');\n  }\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, options.ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      })\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {DECIMALS} from './common.js';\nimport {\n  DEFAULT_VERSION,\n  createLoader,\n  getRequestParams,\n  getRequestUrl,\n} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor} from '../math.js';\nimport {getForViewAndSize} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params\n    );\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n    baseParams[v13 ? 'I' : 'X'] = x;\n    baseParams[v13 ? 'J' : 'Y'] = y;\n\n    return getRequestUrl(\n      this.url_,\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const backwards = projection.getAxisOrientation().substr(0, 2) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme'\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet'\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'alidade_smooth': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stadia_outdoors': {\n    extension: 'png',\n    opaque: true,\n  },\n  'osm_bright': {\n    extension: 'png',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `stadia_outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} apiKey Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} retina Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap')\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`'\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1]\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (!this.helper || !this.helper.canvasCacheKeyMatches(canvasCacheKey)) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1]\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.loaded) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.loaded &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * @param {string} typeHint Type hint\n * @return {ValueTypes} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return ValueTypes.STRING;\n    case 'color':\n      return ValueTypes.COLOR;\n    case 'number':\n      return ValueTypes.NUMBER;\n    case 'boolean':\n      return ValueTypes.BOOLEAN;\n    case 'number[]':\n      return ValueTypes.NUMBER_ARRAY;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes): string} toGlsl Returns a GLSL-compatible string\n * given a parsing context, an array of arguments and an expected type.\n * Note: the expected type can be a combination such as ValueTypes.NUMBER | ValueTypes.STRING or ValueTypes.ANY for instance\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Print types as a readable string\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {string} Types\n */\nfunction printTypes(valueType) {\n  const result = [];\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    result.push('number');\n  }\n  if ((valueType & ValueTypes.COLOR) > 0) {\n    result.push('color');\n  }\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    result.push('boolean');\n  }\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    result.push('number[]');\n  }\n  if ((valueType & ValueTypes.STRING) > 0) {\n    result.push('string');\n  }\n  return result.length > 0 ? result.join(', ') : '(no type)';\n}\n\n/**\n * @typedef {Object} ParsingContextExternal\n * @property {string} name Name, unprefixed\n * @property {ValueTypes} type One of the value types constants\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [callback] Function used for computing the attribute value;\n *   if undefined, `feature.get(attribute.name)` will be used\n */\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<ParsingContextExternal>} variables External variables used in the expression\n * @property {Array<ParsingContextExternal>} attributes External attributes used in the expression\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/literal\").LiteralStyle} style The style being parsed\n */\n\n/**\n * @param {string} operator Operator\n * @param {ParsingContext} context Parsing context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [expectedType] Expected final type (can be several types combined)\n * If omitted, defaults to ValueTypes.NUMBER\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, expectedType) {\n  const returnType =\n    expectedType !== undefined ? expectedType : ValueTypes.NUMBER;\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), returnType);\n  }\n\n  const possibleType = getValueType(value) & returnType;\n  assertNotEmptyType(value, possibleType, '');\n\n  if ((possibleType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if ((possibleType & ValueTypes.STRING) > 0) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if ((possibleType & ValueTypes.COLOR) > 0) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${value} (expected type ${printTypes(returnType)})`\n  );\n}\n\nfunction assertNumber(value) {\n  if ((getValueType(value) & ValueTypes.NUMBER) === 0) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if ((getValueType(value) & ValueTypes.STRING) === 0) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if ((getValueType(value) & ValueTypes.BOOLEAN) === 0) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertNotEmptyType(args, types, descriptor) {\n  if (types === ValueTypes.NONE) {\n    throw new Error(\n      `No matching type was found for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\nfunction assertSingleType(args, types, descriptor) {\n  assertNotEmptyType(args, types, descriptor);\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Expected to have a unique type for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}\nGot the following types instead: ${printTypes(types)}`\n    );\n  }\n}\nfunction assertOfType(args, types, expectedTypes, descriptor) {\n  if ((types & expectedTypes) === ValueTypes.NONE) {\n    throw new Error(\n      `Expected the ${descriptor} type of the following expression: ${JSON.stringify(\n        args\n      )} to be of the following types: ${printTypes(expectedTypes)}\nGot these types instead: ${printTypes(types)}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    if (args.length === 2) {\n      const hint = args[1];\n      return getTypeFromHint(/** @type {string} */ (hint));\n    }\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertString(args[0]);\n    const outputType = expectedType & Operators['get'].getReturnType(args);\n    assertSingleType(['get', ...args], outputType, '');\n    const name = args[0].toString();\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following attribute was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function () {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const name = args[0].toString();\n    if (\n      !context.style.variables ||\n      context.style.variables[name] === undefined\n    ) {\n      throw new Error(\n        `The following variable is missing from the style: ${name}`\n      );\n    }\n    const initialValue = context.style.variables[name];\n    const outputType = expectedType & getValueType(initialValue);\n    assertSingleType(['var', ...args], outputType, '');\n    const existing = context.variables.find((a) => a.name === name);\n    if (!existing) {\n      context.variables.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following variable was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    return uniformNameForVariable(name);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['geometry-type'] = {\n  getReturnType: function () {\n    return ValueTypes.STRING;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    const name = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: ValueTypes.STRING,\n        callback: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      });\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    let outputType = ValueTypes.NUMBER | ValueTypes.COLOR;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    return outputType;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 2);\n    let outputType = expectedType;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    assertOfType(\n      args,\n      outputType,\n      ValueTypes.NUMBER | ValueTypes.COLOR,\n      'output'\n    );\n    return `(${args\n      .map((arg) => expressionToGlsl(context, arg, outputType))\n      .join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sqrt'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sqrt(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0], ValueTypes.BOOLEAN)})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = args\n        .map((arg) => expressionToGlsl(context, arg, ValueTypes.BOOLEAN))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args\n      .slice(0, 3)\n      .map((val) => `${expressionToGlsl(context, val)} / 255.0`);\n    if (args.length === 3) {\n      return `vec4(${parsedArgs.join(', ')}, 1.0)`;\n    }\n    const alpha = expressionToGlsl(context, args[3]);\n    return `(${alpha} * vec4(${parsedArgs.join(', ')}, 1.0))`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    const inputType = ValueTypes.NUMBER;\n    const outputType =\n      Operators['interpolate'].getReturnType(args) & expectedType;\n    assertSingleType(['interpolate', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[1], inputType);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i], inputType);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2], inputType);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      let ratio;\n      if (interpolation === 1) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    let inputType = getValueType(args[0]);\n    for (let i = 1; i < args.length - 1; i += 2) {\n      inputType = inputType & getValueType(args[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const outputType = Operators['match'].getReturnType(args) & expectedType;\n    assertSingleType(['match', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[0], inputType);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i], inputType);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    const outputType = Operators['case'].getReturnType(args) & expectedType;\n    assertSingleType(['case', ...args], outputType, 'output');\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i], ValueTypes.BOOLEAN);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['in'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    const needle = args[0];\n    let haystack = args[1];\n    if (!Array.isArray(haystack)) {\n      throw new Error(\n        `The \"in\" operator expects an array literal as its second argument.`\n      );\n    }\n    if (typeof haystack[0] === 'string') {\n      if (haystack[0] !== 'literal') {\n        throw new Error(\n          `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n        );\n      }\n      if (!Array.isArray(haystack[1])) {\n        throw new Error(\n          `The \"in\" operator was provided a literal value which was not an array as second argument.`\n        );\n      }\n      haystack = haystack[1];\n    }\n\n    let inputType = getValueType(needle);\n    for (let i = 0; i < haystack.length - 1; i += 1) {\n      inputType = inputType & getValueType(haystack[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(\n        `  if (inputValue == ${expressionToGlsl(\n          context,\n          haystack[i],\n          inputType\n        )}) { return true; }`\n      );\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${expressionToGlsl(context, needle, inputType)})`;\n  },\n};\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', 'population', 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-color': 'blue',\n *        },\n *      ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice())\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          declutterTree: new RBush(9),\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n        })\n      );\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        }\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1]\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        })\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse)\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) => r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat)\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent())\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1]\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Polygon render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of custom attributes count in the polygon render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment start point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} instructionsTransform Transform matrix used to project coordinates in instructions\n * @param {import('../../transform.js').Transform} invertInstructionsTransform Transform matrix used to project coordinates in instructions\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  instructionsTransform,\n  invertInstructionsTransform\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 5; // base attributes: x0, y0, x1, y1, params (vertex number [0-3], join angle 1, join angle 2)\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute offsets from the line center we need to reproject\n  // coordinates back in world units and compute the length of the segment\n  const p0world = applyTransform(invertInstructionsTransform, [...p0]);\n  const p1world = applyTransform(invertInstructionsTransform, [...p1]);\n\n  function computeVertexParameters(vertexNumber, joinAngle1, joinAngle2) {\n    const shift = 10000;\n    const anglePrecision = 1500;\n    return (\n      Math.round(joinAngle1 * anglePrecision) +\n      Math.round(joinAngle2 * anglePrecision) * shift +\n      vertexNumber * shift * shift\n    );\n  }\n\n  // compute the angle between p0pA and p0pB\n  // returns a value in [0, 2PI]\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1])\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1])\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1)\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  let angle0 = 0;\n  let angle1 = 0;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(invertInstructionsTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n  }\n  // adapt offsets for P1 in case of join\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(invertInstructionsTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(0, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(1, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(2, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    computeVertexParameters(3, angle0, angle1)\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2\n  );\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals, getWidth} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      }\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const [startWorld, endWorld, worldWidth] =\n      this.getWorldParameters_(frameState);\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n    const canvas = this.helper.getCanvas();\n\n    if (this.hitDetectionEnabled_) {\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Compute world params\n   * @private\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<number>} The world start, end and width.\n   */\n  getWorldParameters_(frameState) {\n    const projection = frameState.viewState.projection;\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    // FIXME fix hit detection isn't reliable when rendering multiple worlds\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const projectionExtent = projection.getExtent();\n\n    const extent = frameState.extent;\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n\n    const startWorld = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n\n    return [startWorld, endWorld, worldWidth];\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`'\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",n=\\\"GENERATE_POINT_BUFFERS\\\",t=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,n){const t=n[0],r=n[1];return n[0]=e[0]*t+e[2]*r+e[4],n[1]=e[1]*t+e[3]*r+e[5],n}function x(e,n){const t=(r=n)[0]*r[3]-r[1]*r[2];var r;!function(e,n){if(!e)throw new Error(n)}(0!==t,\\\"Transformation matrix cannot be inverted\\\");const x=n[0],u=n[1],i=n[2],o=n[3],f=n[4],s=n[5];return e[0]=o/t,e[1]=-u/t,e[2]=-i/t,e[3]=x/t,e[4]=(i*s-o*f)/t,e[5]=-(x*s-u*f)/t,e}function u(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var i={exports:{}};function o(e,n,t){t=t||2;var r,x,u,i,o,s,l,v=n&&n.length,c=v?n[0]*t:e.length,h=f(e,0,c,t,!0),g=[];if(!h||h.next===h.prev)return g;if(v&&(h=function(e,n,t,r){var x,u,i,o=[];for(x=0,u=n.length;x<u;x++)(i=f(e,n[x]*r,x<u-1?n[x+1]*r:e.length,r,!1))===i.next&&(i.steiner=!0),o.push(d(i));for(o.sort(p),x=0;x<o.length;x++)t=y(o[x],t);return t}(e,n,h,t)),e.length>80*t){r=u=e[0],x=i=e[1];for(var b=t;b<c;b+=t)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>u&&(u=o),s>i&&(i=s);l=0!==(l=Math.max(u-r,i-x))?32767/l:0}return a(h,g,t,r,x,l,0),g}function f(e,n,t,r,x){var u,i;if(x===O(e,n,t,r)>0)for(u=n;u<t;u+=r)i=P(u,e[u],e[u+1],i);else for(u=t-r;u>=n;u-=r)i=P(u,e[u],e[u+1],i);return i&&m(i,i.next)&&(B(i),i=i.next),i}function s(e,n){if(!e)return e;n||(n=e);var t,r=e;do{if(t=!1,r.steiner||!m(r,r.next)&&0!==M(r.prev,r,r.next))r=r.next;else{if(B(r),(r=n=r.prev)===r.next)break;t=!0}}while(t||r!==n);return n}function a(e,n,t,r,x,u,i){if(e){!i&&u&&function(e,n,t,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,n,t,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var n,t,r,x,u,i,o,f,s=1;do{for(t=e,e=null,u=null,i=0;t;){for(i++,r=t,o=0,n=0;n<s&&(o++,r=r.nextZ);n++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||t.z<=r.z)?(x=t,t=t.nextZ,o--):(x=r,r=r.nextZ,f--),u?u.nextZ=x:e=x,x.prevZ=u,u=x;t=r}u.nextZ=null,s*=2}while(i>1)}(x)}(e,r,x,u);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,u?v(e,r,x,u):l(e))n.push(o.i/t|0),n.push(e.i/t|0),n.push(f.i/t|0),B(e),e=f.next,p=f.next;else if((e=f)===p){i?1===i?a(e=c(s(e),n,t),n,t,r,x,u,2):2===i&&h(e,n,t,r,x,u):a(s(e),n,t,r,x,u,1);break}}}function l(e){var n=e.prev,t=e,r=e.next;if(M(n,t,r)>=0)return!1;for(var x=n.x,u=t.x,i=r.x,o=n.y,f=t.y,s=r.y,a=x<u?x<i?x:i:u<i?u:i,l=o<f?o<s?o:s:f<s?f:s,v=x>u?x>i?x:i:u>i?u:i,c=o>f?o>s?o:s:f>s?f:s,h=r.next;h!==n;){if(h.x>=a&&h.x<=v&&h.y>=l&&h.y<=c&&Z(x,o,u,f,i,s,h.x,h.y)&&M(h.prev,h,h.next)>=0)return!1;h=h.next}return!0}function v(e,n,t,r){var x=e.prev,u=e,i=e.next;if(M(x,u,i)>=0)return!1;for(var o=x.x,f=u.x,s=i.x,a=x.y,l=u.y,v=i.y,c=o<f?o<s?o:s:f<s?f:s,h=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(c,h,n,t,r),d=b(p,y,n,t,r),w=e.prevZ,m=e.nextZ;w&&w.z>=g&&m&&m.z<=d;){if(w.x>=c&&w.x<=p&&w.y>=h&&w.y<=y&&w!==x&&w!==i&&Z(o,a,f,l,s,v,w.x,w.y)&&M(w.prev,w,w.next)>=0)return!1;if(w=w.prevZ,m.x>=c&&m.x<=p&&m.y>=h&&m.y<=y&&m!==x&&m!==i&&Z(o,a,f,l,s,v,m.x,m.y)&&M(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;w&&w.z>=g;){if(w.x>=c&&w.x<=p&&w.y>=h&&w.y<=y&&w!==x&&w!==i&&Z(o,a,f,l,s,v,w.x,w.y)&&M(w.prev,w,w.next)>=0)return!1;w=w.prevZ}for(;m&&m.z<=d;){if(m.x>=c&&m.x<=p&&m.y>=h&&m.y<=y&&m!==x&&m!==i&&Z(o,a,f,l,s,v,m.x,m.y)&&M(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function c(e,n,t){var r=e;do{var x=r.prev,u=r.next.next;!m(x,u)&&A(x,r,r.next,u)&&F(x,u)&&F(u,x)&&(n.push(x.i/t|0),n.push(r.i/t|0),n.push(u.i/t|0),B(r),B(r.next),r=e=u),r=r.next}while(r!==e);return s(r)}function h(e,n,t,r,x,u){var i=e;do{for(var o=i.next.next;o!==i.prev;){if(i.i!==o.i&&w(i,o)){var f=I(i,o);return i=s(i,i.next),f=s(f,f.next),a(i,n,t,r,x,u,0),void a(f,n,t,r,x,u,0)}o=o.next}i=i.next}while(i!==e)}function p(e,n){return e.x-n.x}function y(e,n){var t=function(e,n){var t,r=n,x=e.x,u=e.y,i=-1/0;do{if(u<=r.y&&u>=r.next.y&&r.next.y!==r.y){var o=r.x+(u-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>i&&(i=o,t=r.x<r.next.x?r:r.next,o===x))return t}r=r.next}while(r!==n);if(!t)return null;var f,s=t,a=t.x,l=t.y,v=1/0;r=t;do{x>=r.x&&r.x>=a&&x!==r.x&&Z(u<l?x:i,u,a,l,u<l?i:x,u,r.x,r.y)&&(f=Math.abs(u-r.y)/(x-r.x),F(r,e)&&(f<v||f===v&&(r.x>t.x||r.x===t.x&&g(t,r)))&&(t=r,v=f)),r=r.next}while(r!==s);return t}(e,n);if(!t)return n;var r=I(t,e);return s(r,r.next),s(t,t.next)}function g(e,n){return M(e.prev,e,n.prev)<0&&M(n.next,e,e.next)<0}function b(e,n,t,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-t)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=(n-r)*x|0)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function d(e){var n=e,t=e;do{(n.x<t.x||n.x===t.x&&n.y<t.y)&&(t=n),n=n.next}while(n!==e);return t}function Z(e,n,t,r,x,u,i,o){return(x-i)*(n-o)>=(e-i)*(u-o)&&(e-i)*(r-o)>=(t-i)*(n-o)&&(t-i)*(u-o)>=(x-i)*(r-o)}function w(e,n){return e.next.i!==n.i&&e.prev.i!==n.i&&!function(e,n){var t=e;do{if(t.i!==e.i&&t.next.i!==e.i&&t.i!==n.i&&t.next.i!==n.i&&A(t,t.next,e,n))return!0;t=t.next}while(t!==e);return!1}(e,n)&&(F(e,n)&&F(n,e)&&function(e,n){var t=e,r=!1,x=(e.x+n.x)/2,u=(e.y+n.y)/2;do{t.y>u!=t.next.y>u&&t.next.y!==t.y&&x<(t.next.x-t.x)*(u-t.y)/(t.next.y-t.y)+t.x&&(r=!r),t=t.next}while(t!==e);return r}(e,n)&&(M(e.prev,e,n.prev)||M(e,n.prev,n))||m(e,n)&&M(e.prev,e,e.next)>0&&M(n.prev,n,n.next)>0)}function M(e,n,t){return(n.y-e.y)*(t.x-n.x)-(n.x-e.x)*(t.y-n.y)}function m(e,n){return e.x===n.x&&e.y===n.y}function A(e,n,t,r){var x=z(M(e,n,t)),u=z(M(e,n,r)),i=z(M(t,r,e)),o=z(M(t,r,n));return x!==u&&i!==o||(!(0!==x||!E(e,t,n))||(!(0!==u||!E(e,r,n))||(!(0!==i||!E(t,e,r))||!(0!==o||!E(t,n,r)))))}function E(e,n,t){return n.x<=Math.max(e.x,t.x)&&n.x>=Math.min(e.x,t.x)&&n.y<=Math.max(e.y,t.y)&&n.y>=Math.min(e.y,t.y)}function z(e){return e>0?1:e<0?-1:0}function F(e,n){return M(e.prev,e,e.next)<0?M(e,n,e.next)>=0&&M(e,e.prev,n)>=0:M(e,n,e.prev)<0||M(e,e.next,n)<0}function I(e,n){var t=new _(e.i,e.x,e.y),r=new _(n.i,n.x,n.y),x=e.next,u=n.prev;return e.next=n,n.prev=e,t.next=x,x.prev=t,r.next=t,t.prev=r,u.next=r,r.prev=u,r}function P(e,n,t,r){var x=new _(e,n,t);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,n,t){this.i=e,this.x=n,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,n,t,r){for(var x=0,u=n,i=t-r;u<t;u+=r)x+=(e[i]-e[u])*(e[u+1]+e[i+1]),i=u;return x}i.exports=o,i.exports.default=o,o.deviation=function(e,n,t,r){var x=n&&n.length,u=x?n[0]*t:e.length,i=Math.abs(O(e,0,u,t));if(x)for(var o=0,f=n.length;o<f;o++){var s=n[o]*t,a=o<f-1?n[o+1]*t:e.length;i-=Math.abs(O(e,s,a,t))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*t,c=r[o+1]*t,h=r[o+2]*t;l+=Math.abs((e[v]-e[h])*(e[c+1]-e[v+1])-(e[v]-e[c])*(e[h+1]-e[v+1]))}return 0===i&&0===l?0:Math.abs((l-i)/i)},o.flatten=function(e){for(var n=e[0][0].length,t={vertices:[],holes:[],dimensions:n},r=0,x=0;x<e.length;x++){for(var u=0;u<e[x].length;u++)for(var i=0;i<n;i++)t.vertices.push(e[x][u][i]);x>0&&(r+=e[x-1].length,t.holes.push(r))}return t};var N=u(i.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,n,t,r,x){e[n+0]=t,e[n+1]=r,e[n+2]=x}function U(e,n,t,r,x,u){const i=3+x,o=e[n+0],f=e[n+1],s=R;s.length=x;for(let t=0;t<s.length;t++)s[t]=e[n+2+t];let a=u?u.vertexPosition:0,l=u?u.indexPosition:0;const v=a/i;return T(t,a,o,f,0),s.length&&t.set(s,a+3),a+=i,T(t,a,o,f,1),s.length&&t.set(s,a+3),a+=i,T(t,a,o,f,2),s.length&&t.set(s,a+3),a+=i,T(t,a,o,f,3),s.length&&t.set(s,a+3),a+=i,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,n,t,x,u,i,o,f,s,a){const l=5+f.length,v=i.length/l,c=[e[n+0],e[n+1]],h=[e[t],e[t+1]],p=r(a,[...c]),y=r(a,[...h]);function g(e,n,t){const r=1e4;return Math.round(1500*n)+Math.round(1500*t)*r+e*r*r}function b(e,n,t){const r=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),x=[(n[0]-e[0])/r,(n[1]-e[1])/r],u=[-x[1],x[0]],i=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/i,(t[1]-e[1])/i],f=0===r||0===i?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*u[0]+o[1]*u[1]>0?f:2*Math.PI-f}const d=null!==u;let Z=0,w=0;if(null!==x){Z=b(p,y,r(a,[...[e[x],e[x+1]]]))}if(d){w=b(y,p,r(a,[...[e[u],e[u+1]]]))}i.push(c[0],c[1],h[0],h[1],g(0,Z,w)),i.push(...f),i.push(c[0],c[1],h[0],h[1],g(1,Z,w)),i.push(...f),i.push(c[0],c[1],h[0],h[1],g(2,Z,w)),i.push(...f),i.push(c[0],c[1],h[0],h[1],g(3,Z,w)),i.push(...f),o.push(v,v+1,v+2,v+1,v+3,v+2)}function G(e,n,t,r,x){const u=2+x;let i=n;const o=e.slice(i,i+x);i+=x;const f=e[i++];let s=0;const a=new Array(f-1);for(let n=0;n<f;n++)s+=e[i++],n<f-1&&(a[n]=s);const l=e.slice(i,i+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+t.length/u);for(let e=0;e<l.length;e+=2)t.push(l[e],l[e+1],...o);return i+2*s}const j=self;j.onmessage=r=>{const u=r.data;switch(u.type){case n:{const e=3,n=2,t=u.customAttributesSize,r=n+t,x=new Float32Array(u.renderInstructions),i=x.length/r,o=4*i*(t+e),f=new Uint32Array(6*i),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,t,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},u);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case t:{const e=[],n=[],t=u.customAttributesSize,r=2,i=new Float32Array(u.renderInstructions);let o=0;const f=u.renderInstructionsTransform,s=[1,0,0,1,0,0];let a,l;for(x(s,f);o<i.length;){l=Array.from(i.slice(o,o+t)),o+=t,a=i[o++];for(let t=0;t<a-1;t++)k(i,o+t*r,o+(t+1)*r,t>0?o+(t-1)*r:null,t<a-2?o+(t+2)*r:null,e,n,l,0,s);o+=a*r}const v=Uint32Array.from(n),c=Float32Array.from(e),h=Object.assign({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:i.buffer},u);j.postMessage(h,[c.buffer,v.buffer,i.buffer]);break}case e:{const e=[],n=[],t=u.customAttributesSize,r=new Float32Array(u.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,n,t);const i=Uint32Array.from(n),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:i.buffer,renderInstructions:r.buffer},u);j.postMessage(f,[o.buffer,i.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {colorToGlsl, numberToGlsl} from '../style/expressions.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nconst BASE_UNIFORMS = `uniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform vec4 u_renderExtent;\nuniform mediump int u_hitDetection;\n`;\n\nconst PRECISION_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .outputSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius']\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color'])\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color'])\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color'])\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${PRECISION_HEADER}\nuniform mat4 u_projectionMatrix;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec2 u_viewportSizePx;\nuniform mediump int u_hitDetection;\n\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  ${\n    this.symbolRotateWithView_\n      ? 'scaled = vec2(scaled.x * cos(-u_rotation) - scaled.y * sin(-u_rotation), scaled.x * sin(-u_rotation) + scaled.y * cos(-u_rotation));'\n      : ''\n  }\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), 0., 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_hitColor = a_hitColor;\n  v_angle = angle;\n  ${this.symbolRotateWithView_ ? 'v_angle += u_rotation;' : ''}\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${PRECISION_HEADER}\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${PRECISION_HEADER}\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = pxPos * 4.0 / u_viewportSizePx;\n  return vec4(screenPos.xy, 0.0, 0.0);\n}\n\nvec2 getOffsetDirection(vec2 normalPx, vec2 tangentPx, float joinAngle) {\n  if (cos(joinAngle) > 0.93) return normalPx - tangentPx;\n  float halfAngle = joinAngle / 2.0;\n  vec2 angleBisectorNormal = vec2(\n    sin(halfAngle) * normalPx.x + cos(halfAngle) * normalPx.y,\n    -cos(halfAngle) * normalPx.x + sin(halfAngle) * normalPx.y\n  );\n  float length = 1.0 / sin(halfAngle);\n  return angleBisectorNormal * length;\n}\n\nvoid main(void) {\n  float lineWidth = ${this.strokeWidthExpression_};\n  float anglePrecision = 1500.0;\n  float paramShift = 10000.0;\n  v_angleStart = fract(a_parameters / paramShift) * paramShift / anglePrecision;\n  v_angleEnd = fract(floor(a_parameters / paramShift + 0.5) / paramShift) * paramShift / anglePrecision;\n  float vertexNumber = floor(a_parameters / paramShift / paramShift + 0.0001);\n  vec2 tangentPx = worldToPx(a_segmentEnd) - worldToPx(a_segmentStart);\n  tangentPx = normalize(tangentPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 offsetPx = getOffsetDirection(normalPx * normalDir, tangentDir * tangentPx, angle) * lineWidth * 0.5;\n  vec2 position =  vertexNumber < 1.5 ? a_segmentStart : a_segmentEnd;\n  gl_Position = u_projectionMatrix * vec4(position, 0.0, 1.0) + pxToScreen(offsetPx);\n  v_segmentStart = worldToPx(a_segmentStart);\n  v_segmentEnd = worldToPx(a_segmentEnd);\n  v_width = lineWidth;\n  v_hitColor = a_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${PRECISION_HEADER}\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float radius) {\n  vec2 startToPoint = point - start;\n  vec2 startToEnd = end - start;\n  float ratio = clamp(dot(startToPoint, startToEnd) / dot(startToEnd, startToEnd), 0.0, 1.0);\n  float dist = length(startToPoint - ratio * startToEnd);\n  return 1.0 - smoothstep(radius - 1.0, radius, dist);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 v_worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      v_worldPos[0] < u_renderExtent[0] ||\n      v_worldPos[1] < u_renderExtent[1] ||\n      v_worldPos[0] > u_renderExtent[2] ||\n      v_worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.strokeColorExpression_} * u_globalAlpha;\n  gl_FragColor *= segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${PRECISION_HEADER}\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${PRECISION_HEADER}\n${BASE_UNIFORMS}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvoid main(void) {\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 v_worldPos = pxToWorld(gl_FragCoord.xy / u_pixelRatio);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      v_worldPos[0] < u_renderExtent[0] ||\n      v_worldPos[1] < u_renderExtent[1] ||\n      v_worldPos[0] > u_renderExtent[2] ||\n      v_worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<import(\"../geom/Point.js\").default>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_weight')\n      .addVarying('v_weight', 'float', 'a_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_weight)'\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n      ? 3\n      : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n        ? options.maxPoints\n        : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState\n        )\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout()\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates()\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry)\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      })\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this)\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this)\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer'\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this)\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this)\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      }\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection)\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt\n        )\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry) {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection)\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            geom.getType() === 'Point' &&\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter}\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry]\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt\n          )\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      }\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n          circleGeometry.clone().transform(userProjection, projection)\n        );\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection)\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection)\n      ),\n      projection\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\n          createEmpty()\n        );\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n        })\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this\n          )\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_\n      ),\n      projection\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n        circleGeometry.clone().transform(userProjection, projection)\n      );\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event\n        )\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      }\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options)\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options]\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options)\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source))\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n))\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source))\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i]\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                })\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                })\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName']\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value']\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value']\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h'])\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  })\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ]\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints()\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings()\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons()\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options]\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options)\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options\n            )\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName')\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4]\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1]\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior'\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])'\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds'\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary'\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source)\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source)\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n)\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures')\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      []\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array'\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set'\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context]\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version]\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const name = createElementNS(ns, 'Name');\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from './ol/Collection.js';\nimport $ol$Collection from './ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from './ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from './ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from './ol/DataTile.js';\nimport $ol$DataTile from './ol/DataTile.js';\nimport $ol$Disposable from './ol/Disposable.js';\nimport $ol$Feature from './ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from './ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from './ol/Geolocation.js';\nimport $ol$Geolocation from './ol/Geolocation.js';\nimport $ol$Image from './ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from './ol/Image.js';\nimport {load as _ol_Image$load} from './ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from './ol/Image.js';\nimport {decode as _ol_Image$decode} from './ol/Image.js';\nimport $ol$ImageCanvas from './ol/ImageCanvas.js';\nimport $ol$ImageTile from './ol/ImageTile.js';\nimport $ol$Kinetic from './ol/Kinetic.js';\nimport $ol$Map from './ol/Map.js';\nimport $ol$MapBrowserEvent from './ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from './ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from './ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from './ol/Object.js';\nimport $ol$Object from './ol/Object.js';\nimport $ol$Observable from './ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable.js';\nimport $ol$Overlay from './ol/Overlay.js';\nimport $ol$Tile from './ol/Tile.js';\nimport $ol$TileCache from './ol/TileCache.js';\nimport $ol$TileQueue from './ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from './ol/TileQueue.js';\nimport $ol$TileRange from './ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from './ol/TileRange.js';\nimport $ol$VectorRenderTile from './ol/VectorRenderTile.js';\nimport $ol$View from './ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from './ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from './ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from './ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from './ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from './ol/array.js';\nimport {ascending as _ol_array$ascending} from './ol/array.js';\nimport {descending as _ol_array$descending} from './ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from './ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from './ol/array.js';\nimport {extend as _ol_array$extend} from './ol/array.js';\nimport {remove as _ol_array$remove} from './ol/array.js';\nimport {equals as _ol_array$equals} from './ol/array.js';\nimport {stableSort as _ol_array$stableSort} from './ol/array.js';\nimport {isSorted as _ol_array$isSorted} from './ol/array.js';\nimport {assert as _ol_asserts$assert} from './ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from './ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from './ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from './ol/color.js';\nimport {fromString as _ol_color$fromString} from './ol/color.js';\nimport {asArray as _ol_color$asArray} from './ol/color.js';\nimport {normalize as _ol_color$normalize} from './ol/color.js';\nimport {toString as _ol_color$toString} from './ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from './ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from './ol/console.js';\nimport {log as _ol_console$log} from './ol/console.js';\nimport {warn as _ol_console$warn} from './ol/console.js';\nimport {error as _ol_console$error} from './ol/console.js';\nimport {add as _ol_coordinate$add} from './ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from './ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from './ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from './ol/coordinate.js';\nimport {format as _ol_coordinate$format} from './ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from './ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from './ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from './ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from './ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from './ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from './ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from './ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from './ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from './ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from './ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from './ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from './ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from './ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from './ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from './ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from './ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from './ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from './ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from './ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from './ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from './ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from './ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing.js';\nimport {linear as _ol_easing$linear} from './ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing.js';\nimport {listen as _ol_events$listen} from './ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from './ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from './ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent.js';\nimport {buffer as _ol_extent$buffer} from './ol/extent.js';\nimport {clone as _ol_extent$clone} from './ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from './ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from './ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from './ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from './ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from './ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from './ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from './ol/extent.js';\nimport {equals as _ol_extent$equals} from './ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from './ol/extent.js';\nimport {extend as _ol_extent$extend} from './ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from './ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from './ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from './ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from './ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from './ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from './ol/extent.js';\nimport {getArea as _ol_extent$getArea} from './ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from './ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from './ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from './ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from './ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from './ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from './ol/extent.js';\nimport {getSize as _ol_extent$getSize} from './ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent.js';\nimport {intersects as _ol_extent$intersects} from './ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from './ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from './ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from './ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from './ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from './ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from './ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from './ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from './ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from './ol/functions.js';\nimport {VOID as _ol_functions$VOID} from './ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from './ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from './ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from './ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from './ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from './ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from './ol/has.js';\nimport {MAC as _ol_has$MAC} from './ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from './ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from './ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from './ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from './ol/has.js';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from './ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from './ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from './ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from './ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from './ol/math.js';\nimport {toRadians as _ol_math$toRadians} from './ol/math.js';\nimport {modulo as _ol_math$modulo} from './ol/math.js';\nimport {lerp as _ol_math$lerp} from './ol/math.js';\nimport {toFixed as _ol_math$toFixed} from './ol/math.js';\nimport {round as _ol_math$round} from './ol/math.js';\nimport {floor as _ol_math$floor} from './ol/math.js';\nimport {ceil as _ol_math$ceil} from './ol/math.js';\nimport {jsonp as _ol_net$jsonp} from './ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from './ol/net.js';\nimport {ClientError as _ol_net$ClientError} from './ol/net.js';\nimport {getJSON as _ol_net$getJSON} from './ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from './ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from './ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from './ol/net.js';\nimport {clear as _ol_obj$clear} from './ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from './ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from './ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from './ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from './ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from './ol/proj.js';\nimport {get as _ol_proj$get} from './ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from './ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from './ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from './ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from './ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from './ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj.js';\nimport {transform as _ol_proj$transform} from './ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from './ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from './ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from './ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from './ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from './ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from './ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from './ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from './ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from './ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from './ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from './ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from './ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from './ol/proj.js';\nimport {toContext as _ol_render$toContext} from './ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from './ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from './ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from './ol/reproj.js';\nimport {render as _ol_reproj$render} from './ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from './ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from './ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from './ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from './ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from './ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from './ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from './ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from './ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from './ol/size.js';\nimport {hasArea as _ol_size$hasArea} from './ol/size.js';\nimport {scale as _ol_size$scale} from './ol/size.js';\nimport {toSize as _ol_size$toSize} from './ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from './ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from './ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere.js';\nimport {offset as _ol_sphere$offset} from './ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from './ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from './ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from './ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from './ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from './ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from './ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from './ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from './ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from './ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from './ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from './ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from './ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from './ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from './ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from './ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from './ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from './ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from './ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from './ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from './ol/transform.js';\nimport {reset as _ol_transform$reset} from './ol/transform.js';\nimport {multiply as _ol_transform$multiply} from './ol/transform.js';\nimport {set as _ol_transform$set} from './ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from './ol/transform.js';\nimport {apply as _ol_transform$apply} from './ol/transform.js';\nimport {rotate as _ol_transform$rotate} from './ol/transform.js';\nimport {scale as _ol_transform$scale} from './ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from './ol/transform.js';\nimport {translate as _ol_transform$translate} from './ol/transform.js';\nimport {compose as _ol_transform$compose} from './ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from './ol/transform.js';\nimport {invert as _ol_transform$invert} from './ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from './ol/transform.js';\nimport {determinant as _ol_transform$determinant} from './ol/transform.js';\nimport {toString as _ol_transform$toString} from './ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from './ol/uri.js';\nimport {abstract as _ol_util$abstract} from './ol/util.js';\nimport {getUid as _ol_util$getUid} from './ol/util.js';\nimport {VERSION as _ol_util$VERSION} from './ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from './ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from './ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from './ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from './ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from './ol/xml.js';\nimport {parse as _ol_xml$parse} from './ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from './ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from './ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from './ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from './ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from './ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from './ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from './ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from './ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from './ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from './ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from './ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from './ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from './ol/xml.js';\nimport {serialize as _ol_xml$serialize} from './ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from './ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from './ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from './ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from './ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from './ol/xml.js';\nimport {create as _ol_vec_mat4$create} from './ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from './ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from './ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from './ol/tilegrid/common.js';\nimport $ol$style$Circle from './ol/style/Circle.js';\nimport $ol$style$Fill from './ol/style/Fill.js';\nimport $ol$style$Icon from './ol/style/Icon.js';\nimport $ol$style$IconImage from './ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from './ol/style/IconImage.js';\nimport $ol$style$IconImageCache from './ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache.js';\nimport $ol$style$Image from './ol/style/Image.js';\nimport $ol$style$RegularShape from './ol/style/RegularShape.js';\nimport $ol$style$Stroke from './ol/style/Stroke.js';\nimport $ol$style$Style from './ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from './ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from './ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from './ol/style/Style.js';\nimport $ol$style$Text from './ol/style/Text.js';\nimport {Operators as _ol_style_expressions$Operators} from './ol/style/expressions.js';\nimport {getValueType as _ol_style_expressions$getValueType} from './ol/style/expressions.js';\nimport {isTypeUnique as _ol_style_expressions$isTypeUnique} from './ol/style/expressions.js';\nimport {numberToGlsl as _ol_style_expressions$numberToGlsl} from './ol/style/expressions.js';\nimport {arrayToGlsl as _ol_style_expressions$arrayToGlsl} from './ol/style/expressions.js';\nimport {colorToGlsl as _ol_style_expressions$colorToGlsl} from './ol/style/expressions.js';\nimport {getStringNumberEquivalent as _ol_style_expressions$getStringNumberEquivalent} from './ol/style/expressions.js';\nimport {stringToGlsl as _ol_style_expressions$stringToGlsl} from './ol/style/expressions.js';\nimport {expressionToGlsl as _ol_style_expressions$expressionToGlsl} from './ol/style/expressions.js';\nimport {uniformNameForVariable as _ol_style_expressions$uniformNameForVariable} from './ol/style/expressions.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_style_expressions$PALETTE_TEXTURE_ARRAY} from './ol/style/expressions.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from './ol/style/flat.js';\nimport $ol$structs$LRUCache from './ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from './ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from './ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from './ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from './ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from './ol/source/BingMaps.js';\nimport $ol$source$BingMaps from './ol/source/BingMaps.js';\nimport $ol$source$Cluster from './ol/source/Cluster.js';\nimport $ol$source$DataTile from './ol/source/DataTile.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from './ol/source/Image.js';\nimport $ol$source$Image from './ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from './ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from './ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from './ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM.js';\nimport $ol$source$OSM from './ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from './ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from './ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from './ol/source/Raster.js';\nimport $ol$source$Raster from './ol/source/Raster.js';\nimport $ol$source$Source from './ol/source/Source.js';\nimport $ol$source$StadiaMaps from './ol/source/StadiaMaps.js';\nimport $ol$source$Tile from './ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from './ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from './ol/source/TileDebug.js';\nimport $ol$source$TileImage from './ol/source/TileImage.js';\nimport $ol$source$TileJSON from './ol/source/TileJSON.js';\nimport $ol$source$TileWMS from './ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from './ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from './ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from './ol/source/Vector.js';\nimport $ol$source$Vector from './ol/source/Vector.js';\nimport $ol$source$WMTS from './ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS.js';\nimport $ol$source$XYZ from './ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from './ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from './ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from './ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from './ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from './ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from './ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from './ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from './ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from './ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from './ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from './ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from './ol/source/wms.js';\nimport $ol$reproj$DataTile from './ol/reproj/DataTile.js';\nimport $ol$reproj$Image from './ol/reproj/Image.js';\nimport $ol$reproj$Tile from './ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from './ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from './ol/reproj/common.js';\nimport $ol$renderer$Composite from './ol/renderer/Composite.js';\nimport $ol$renderer$Layer from './ol/renderer/Layer.js';\nimport $ol$renderer$Map from './ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from './ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from './ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from './ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from './ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from './ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from './ol/render/Box.js';\nimport $ol$render$Event from './ol/render/Event.js';\nimport $ol$render$Feature from './ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from './ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from './ol/render/Feature.js';\nimport $ol$render$VectorContext from './ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from './ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from './ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from './ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from './ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from './ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from './ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from './ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from './ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from './ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from './ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from './ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from './ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from './ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from './ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from './ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from './ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from './ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from './ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from './ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from './ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from './ol/render/canvas.js';\nimport $ol$render$canvas$Builder from './ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from './ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from './ol/render/canvas/Executor.js';\nimport $ol$render$canvas$ExecutorGroup from './ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from './ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from './ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from './ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from './ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from './ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from './ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from './ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from './ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from './ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from './ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from './ol/render/canvas/TextBuilder.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from './ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from './ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from './ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from './ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from './ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from './ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from './ol/render/canvas/style.js';\nimport $ol$proj$Projection from './ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from './ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from './ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from './ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from './ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from './ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from './ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from './ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from './ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from './ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from './ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from './ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from './ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from './ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from './ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from './ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from './ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from './ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from './ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from './ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from './ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from './ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from './ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from './ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from './ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from './ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from './ol/proj/transforms.js';\nimport $ol$layer$Base from './ol/layer/Base.js';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from './ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from './ol/layer/Group.js';\nimport $ol$layer$Group from './ol/layer/Group.js';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap.js';\nimport $ol$layer$Image from './ol/layer/Image.js';\nimport $ol$layer$Layer from './ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from './ol/layer/Layer.js';\nimport $ol$layer$Tile from './ol/layer/Tile.js';\nimport $ol$layer$Vector from './ol/layer/Vector.js';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from './ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from './ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from './ol/interaction/Draw.js';\nimport $ol$interaction$Draw from './ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from './ol/interaction/Extent.js';\nimport $ol$interaction$Extent from './ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from './ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from './ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from './ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from './ol/interaction/Modify.js';\nimport $ol$interaction$Modify from './ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from './ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from './ol/interaction/Select.js';\nimport $ol$interaction$Select from './ol/interaction/Select.js';\nimport $ol$interaction$Snap from './ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from './ol/interaction/Translate.js';\nimport $ol$interaction$Translate from './ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from './ol/interaction/defaults.js';\nimport $ol$geom$Circle from './ol/geom/Circle.js';\nimport $ol$geom$Geometry from './ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from './ol/geom/LineString.js';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from './ol/geom/Point.js';\nimport $ol$geom$Polygon from './ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from './ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from './ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from './ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from './ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from './ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from './ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from './ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from './ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from './ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from './ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from './ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from './ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from './ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from './ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from './ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from './ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from './ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from './ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from './ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from './ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from './ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from './ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from './ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from './ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from './ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from './ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from './ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from './ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from './ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from './ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from './ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from './ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from './ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from './ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from './ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from './ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from './ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from './ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from './ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from './ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from './ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from './ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from './ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from './ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from './ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from './ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from './ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from './ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from './ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from './ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from './ol/geom/flat/transform.js';\nimport $ol$format$Feature from './ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from './ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from './ol/format/Feature.js';\nimport $ol$format$GPX from './ol/format/GPX.js';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON.js';\nimport $ol$format$IGC from './ol/format/IGC.js';\nimport $ol$format$JSONFeature from './ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from './ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from './ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from './ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from './ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from './ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from './ol/format/KML.js';\nimport $ol$format$KML from './ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from './ol/format/KML.js';\nimport $ol$format$MVT from './ol/format/MVT.js';\nimport $ol$format$OSMXML from './ol/format/OSMXML.js';\nimport $ol$format$OWS from './ol/format/OWS.js';\nimport $ol$format$Polyline from './ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from './ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from './ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from './ol/format/Polyline.js';\nimport $ol$format$TextFeature from './ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON.js';\nimport $ol$format$WFS from './ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from './ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from './ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from './ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from './ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from './ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from './ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from './ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from './ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from './ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from './ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from './ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from './ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from './ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from './ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from './ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from './ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from './ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from './ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from './ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from './ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from './ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from './ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from './ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from './ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from './ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from './ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from './ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from './ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from './ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from './ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from './ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from './ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from './ol/expr/expression.js';\nimport $ol$events$Event from './ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from './ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from './ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from './ol/events/SnapEvent.js';\nimport $ol$events$Target from './ol/events/Target.js';\nimport {all as _ol_events_condition$all} from './ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from './ol/events/condition.js';\nimport {always as _ol_events_condition$always} from './ol/events/condition.js';\nimport {click as _ol_events_condition$click} from './ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from './ol/events/condition.js';\nimport {never as _ol_events_condition$never} from './ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from './ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition.js';\nimport $ol$control$Attribution from './ol/control/Attribution.js';\nimport $ol$control$Control from './ol/control/Control.js';\nimport $ol$control$FullScreen from './ol/control/FullScreen.js';\nimport $ol$control$MousePosition from './ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap.js';\nimport $ol$control$Rotate from './ol/control/Rotate.js';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine.js';\nimport $ol$control$Zoom from './ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from './ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.normalize = _ol_color$normalize;\nol.color.toString = _ol_color$toString;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.expressions = {};\nol.style.expressions.Operators = _ol_style_expressions$Operators;\nol.style.expressions.PALETTE_TEXTURE_ARRAY = _ol_style_expressions$PALETTE_TEXTURE_ARRAY;\nol.style.expressions.arrayToGlsl = _ol_style_expressions$arrayToGlsl;\nol.style.expressions.colorToGlsl = _ol_style_expressions$colorToGlsl;\nol.style.expressions.expressionToGlsl = _ol_style_expressions$expressionToGlsl;\nol.style.expressions.getStringNumberEquivalent = _ol_style_expressions$getStringNumberEquivalent;\nol.style.expressions.getValueType = _ol_style_expressions$getValueType;\nol.style.expressions.isTypeUnique = _ol_style_expressions$isTypeUnique;\nol.style.expressions.numberToGlsl = _ol_style_expressions$numberToGlsl;\nol.style.expressions.stringToGlsl = _ol_style_expressions$stringToGlsl;\nol.style.expressions.uniformNameForVariable = _ol_style_expressions$uniformNameForVariable;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["stopPropagation","evt","$ol$events$Event","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType$1","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","EventType","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformStringDiv","toString","transformString","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","message","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ImageState","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","$ol$Image","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","$ol$ImageCanvas","ImageWrapper","canvas_","handleLoad_","$ol$ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","map","Number","normalize","fromStringInternal_","asArray","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","$ol$style$IconImageCache","shared","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","RenderEventType","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","layers","renderDeclutter","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","Key","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","asColorLike","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","JSON","parse","setRequestHeader","resolveUrl","base","URL","href","$ol$render$VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","beginPath","arc","fill","stroke","getFill","getStroke","getText","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","setLineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","imagePixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getRotateWithView","imageScale","getScaleArray","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay","getBuilder","textBuilderGroup","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","Circle","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","fromResolutionLike","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","TileGrid","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","params","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","$ol$source$XYZ","quickselect","quickselectStep","defaultCompare","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","_all","search","toBBox","nodesToSearch","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","bboxMargin","siblings","p","destNode","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","RBush","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DECIMALS","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","getRequestExtent","imageResolution","$ol$source$Image","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","requestExtent","handleImageChange","appendParams","uri","keyParams","encodeURIComponent","qs","getRequestUrl","baseUrl","srid","modifiedUrl","createLoader","F","FORMAT","TRANSPARENT","$ol$source$ImageArcGISRest","ImageSource","imageLoadFunction_","imageLoadFunction","params_","imageSize_","renderedRevision_","ratio_","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","imageExtent","resolutionX","resolutionY","$ol$source$ImageStatic","imageExtent_","getImageExtent","DEFAULT_VERSION","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","GETFEATUREINFO_IMAGE_SIZE","$ol$source$ImageWMS","serverType_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","QUERY_LAYERS","getLegendUrl","LAYERS","mpu","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","matrixIds","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileWidth","tileHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","handleError_","tileSetInfo","logError","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","previousAlpha","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","_","newImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","config","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","stadia_outdoors","osm_bright","ProviderConfig","retina","$ol$source$StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$TileArcGISRest","getKeyForParams_","getRequestUrl_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","v13_","updateV13_","sourceProjCoord","version","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","WMTSTileGrid","matrixIds_","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","elt","matrixAvailable","elt_ml","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","getScale","getDisplacement","getHitDetectionImage","getImageSize","setDisplacement","setRotateWithView","setScale","$ol$style$Image","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getPoints","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","color_","setColor","$ol$style$Fill","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","cacheKey","$ol$style$IconImage","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","initialOptions_","setAnchor","iconImageSize","$ol$style$Icon","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ol$style$Stroke","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","$ol$style$Style","Text","font_","textAlign_","justify_","justify","repeat_","repeat","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getPlacement","getRepeat","getMaxAngle","getOverflow","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","PaletteTexture$1","texture_","getTexture","gl","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","getArrayClassForType","Uint32Array","WebGLArrayBuffer$1","usage","ofSize","fromArray","fromArrayBuffer","getUsage","ContextEventType","WebGLPostProcessingPass$1","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","LINEAR","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","WebGLPostProcessingPass","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","prevValue","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","WebGLLayerRenderer$1","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","Operators","getValueType","stringify","valueArr","v","operator","getReturnType","isTypeUnique","valueType","printTypes","numberToGlsl","arrayToGlsl","colorToGlsl","getStringNumberEquivalent","string","stringLiteralsMap","stringToGlsl","expressionToGlsl","expectedType","returnType","toGlsl","possibleType","assertNotEmptyType","assertNumber","assertNumbers","assertString","assertBoolean","assertArgsCount","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","types","descriptor","assertSingleType","assertOfType","expectedTypes","uniformNameForVariable","variableName","typeHint","getTypeFromHint","outputType","existing","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","colors","numColors","palette","paletteTextures","paletteName","paletteTexture","PaletteTexture","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","band","functions","ifBlocks","colorIndex","bandIndex","bandExpression","xOffsetExpression","yOffsetExpression","computeType","substring","parsedArgs","interpolation","inputType","exponent","stop1","output1","stop2","fallback","assertArgsOdd","funcName","computeOperatorFunctionName","tests","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","builderTypes","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","lastIndexOf","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","getDeclutter","userExtent","getSquaredRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","toGeometry","$ol$render$Feature","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","newParsingContext","encoded","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","createParser","withArgs","minArgs","maxArgs","argType","argCount","expression","gotType","argValidator","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","rulesToStyleFunction","rules","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","buildIcon","pointsName","requireNumber","shape","buildShape","evaluateRadius","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSizeLike","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","ok","$ol$layer$BaseVector","declutter_","declutter","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","$ol$layer$Vector","BaseVectorLayer","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","tmpArray4","WebGLRenderTarget$1","helper_","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","an","bp","sum","colorEncodeId","radix","divide","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","WebGLPointsLayerRenderer$1","projectionMatrixTransform","sourceRevision_","verticesBuffer_","WebGLArrayBuffer","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","WebGLRenderTarget","getWorldParameters_","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","translateTransform","renderCount","BASE_UNIFORMS","PRECISION_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","setFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","builder","WebGLPointsLayerRenderer","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$interaction$DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","getParamName_","get_","set_","delete_","oldMap","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","initial","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","SnapEventType","SnapEvent","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformExtentWithOptions","XMLFeature$1","FeatureFormat","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","getAttribute","hasZ","hasM","applyLayoutOptions","setAttributeNS","$ol$format$GPX","XMLFeature","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","getObject","$ol$format$JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","JSONFeature","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","objects","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","featureClass","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML$1","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","XML","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","GMLBase$1","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML2$1","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter$1","tagName_","getTagName","LogicalNary$1","Filter","And$1","LogicalNary","Bbox$1","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","pattern","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","Bbox","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","readBoundingBox","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","WGS84_BBOX_READERS","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","BoundingBox","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$ol$format$WMTSCapabilities","owsParser_","OWS","WMTSCapabilityObject","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$normalize","_ol_color$toString","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$StringType","_ol_expr_expression$includesType","isType","_ol_expr_expression$newParsingContext","_ol_expr_expression$overlapsType","_ol_expr_expression$parse","_ol_expr_expression$typeName","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","WMTSCapabilities","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","t1","t2","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas_TextBuilder$TEXT_ALIGN","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","scaleTransform","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","StadiaMaps","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","_ol_source_common$DECIMALS","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getImageSrc","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","expressions","_ol_style_expressions$Operators","_ol_style_expressions$PALETTE_TEXTURE_ARRAY","_ol_style_expressions$arrayToGlsl","_ol_style_expressions$colorToGlsl","_ol_style_expressions$expressionToGlsl","_ol_style_expressions$getStringNumberEquivalent","_ol_style_expressions$getValueType","_ol_style_expressions$isTypeUnique","_ol_style_expressions$numberToGlsl","_ol_style_expressions$stringToGlsl","_ol_style_expressions$uniformNameForVariable","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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","x_google_ignoreList":[141,142,239,267,268]}