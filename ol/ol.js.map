{"version":3,"file":"ol.js","sources":["../ol/events/Event.js","../ol/ObjectEventType.js","../ol/Disposable.js","../ol/array.js","../ol/functions.js","../ol/obj.js","../ol/events/Target.js","../ol/events/EventType.js","../ol/events.js","../ol/Observable.js","../ol/util.js","../ol/Object.js","../ol/CollectionEventType.js","../ol/Collection.js","../ol/TileState.js","../ol/easing.js","../ol/Tile.js","../ol/has.js","../ol/dom.js","../ol/DataTile.js","../ol/asserts.js","../ol/Feature.js","../ol/transform.js","../ol/extent/Relationship.js","../ol/extent.js","../ol/proj/Units.js","../ol/proj/Projection.js","../ol/proj/epsg3857.js","../ol/proj/epsg4326.js","../ol/proj/projections.js","../ol/proj/transforms.js","../ol/math.js","../ol/string.js","../ol/coordinate.js","../ol/sphere.js","../ol/console.js","../ol/proj.js","../ol/geom/flat/transform.js","../ol/geom/Geometry.js","../ol/geom/SimpleGeometry.js","../ol/geom/flat/closest.js","../ol/geom/flat/deflate.js","../ol/geom/flat/simplify.js","../ol/geom/flat/inflate.js","../ol/geom/flat/area.js","../ol/geom/LinearRing.js","../ol/geom/Point.js","../ol/geom/flat/contains.js","../ol/geom/flat/interiorpoint.js","../ol/geom/flat/segments.js","../ol/geom/flat/intersectsextent.js","../ol/geom/flat/reverse.js","../ol/geom/flat/orient.js","../ol/geom/Polygon.js","../ol/Geolocation.js","../ol/ImageState.js","../ol/Image.js","../ol/ImageCanvas.js","../ol/ImageTile.js","../ol/Kinetic.js","../ol/layer/Property.js","../ol/layer/Base.js","../ol/render/EventType.js","../ol/ViewHint.js","../ol/ViewProperty.js","../ol/tilegrid/common.js","../ol/centerconstraint.js","../ol/resolutionconstraint.js","../ol/rotationconstraint.js","../ol/View.js","../ol/layer/Layer.js","../../node_modules/quickselect/index.js","../../node_modules/rbush/index.js","../ol/size.js","../ol/style/Image.js","../../node_modules/color-space/rgb.js","../../node_modules/color-space/xyz.js","../../node_modules/color-space/luv.js","../../node_modules/color-space/lchuv.js","../../node_modules/color-name/index.js","../../node_modules/color-parse/index.js","../../node_modules/color-space/hsl.js","../../node_modules/color-rgba/index.js","../ol/color.js","../ol/style/IconImageCache.js","../ol/style/IconImage.js","../ol/colorlike.js","../ol/css.js","../ol/render/canvas.js","../ol/style/RegularShape.js","../ol/style/Circle.js","../ol/style/Fill.js","../ol/style/Stroke.js","../ol/style/Style.js","../ol/style/Icon.js","../ol/style/Text.js","../ol/expr/expression.js","../ol/expr/cpu.js","../ol/render/canvas/style.js","../ol/layer/BaseVector.js","../ol/renderer/Map.js","../ol/render/Event.js","../ol/renderer/Composite.js","../ol/layer/Group.js","../ol/MapEvent.js","../ol/MapBrowserEvent.js","../ol/MapBrowserEventType.js","../ol/pointer/EventType.js","../ol/MapBrowserEventHandler.js","../ol/MapEventType.js","../ol/MapProperty.js","../ol/structs/PriorityQueue.js","../ol/TileQueue.js","../ol/control/Control.js","../ol/control/Attribution.js","../ol/control/Rotate.js","../ol/control/Zoom.js","../ol/control/defaults.js","../ol/interaction/Property.js","../ol/interaction/Interaction.js","../ol/interaction/DoubleClickZoom.js","../ol/interaction/Pointer.js","../ol/events/condition.js","../ol/interaction/DragPan.js","../ol/interaction/DragRotate.js","../ol/render/Box.js","../ol/interaction/DragBox.js","../ol/interaction/DragZoom.js","../ol/events/Key.js","../ol/interaction/KeyboardPan.js","../ol/interaction/KeyboardZoom.js","../ol/interaction/MouseWheelZoom.js","../ol/interaction/PinchRotate.js","../ol/interaction/PinchZoom.js","../ol/interaction/defaults.js","../ol/Map.js","../ol/Overlay.js","../ol/structs/LRUCache.js","../ol/tilecoord.js","../ol/TileCache.js","../ol/TileRange.js","../ol/VectorRenderTile.js","../ol/featureloader.js","../ol/net.js","../ol/loadingstrategy.js","../ol/render/VectorContext.js","../ol/render/canvas/Immediate.js","../ol/renderer/vector.js","../ol/render.js","../ol/reproj.js","../ol/resolution.js","../ol/reproj/common.js","../ol/reproj/Triangulation.js","../ol/reproj/Tile.js","../ol/source/TileEventType.js","../ol/source/Source.js","../ol/tilegrid/TileGrid.js","../ol/tilegrid/WMTS.js","../ol/tilegrid.js","../ol/source/Tile.js","../ol/tileurlfunction.js","../ol/source/UrlTile.js","../ol/source/TileImage.js","../ol/source/BingMaps.js","../ol/source/XYZ.js","../ol/structs/RBush.js","../ol/geom/Circle.js","../ol/geom/GeometryCollection.js","../ol/geom/flat/interpolate.js","../ol/geom/flat/length.js","../ol/geom/LineString.js","../ol/geom/MultiLineString.js","../ol/geom/MultiPoint.js","../ol/geom/flat/center.js","../ol/geom/MultiPolygon.js","../ol/render/Feature.js","../ol/source/VectorEventType.js","../ol/source/Vector.js","../ol/source/Cluster.js","../ol/reproj/DataTile.js","../ol/source/DataTile.js","../ol/source/Google.js","../ol/reproj/Image.js","../ol/source/common.js","../ol/source/Image.js","../ol/uri.js","../ol/source/arcgisRest.js","../ol/source/ImageArcGISRest.js","../ol/source/ImageCanvas.js","../ol/source/static.js","../ol/source/ImageStatic.js","../ol/source/wms.js","../ol/source/ImageWMS.js","../ol/source/ogcTileUtil.js","../ol/source/OGCMapTile.js","../ol/source/OSM.js","../ol/layer/BaseImage.js","../ol/renderer/Layer.js","../ol/render/canvas/ZIndexContext.js","../ol/renderer/canvas/Layer.js","../ol/renderer/canvas/ImageLayer.js","../ol/layer/Image.js","../ol/layer/TileProperty.js","../ol/layer/BaseTile.js","../ol/renderer/canvas/TileLayer.js","../ol/layer/Tile.js","../ol/source/Raster.js","../ol/source/StadiaMaps.js","../ol/source/TileArcGISRest.js","../ol/source/TileDebug.js","../ol/source/TileJSON.js","../ol/source/TileWMS.js","../ol/source/UTFGrid.js","../ol/source/WMTS.js","../ol/xml.js","../ol/vec/mat4.js","../ol/style/flat.js","../ol/structs/LinkedList.js","../ol/render/canvas/Instruction.js","../ol/render/canvas/Builder.js","../ol/render/canvas/ImageBuilder.js","../ol/render/canvas/LineStringBuilder.js","../ol/render/canvas/PolygonBuilder.js","../ol/geom/flat/linechunk.js","../ol/geom/flat/straightchunk.js","../ol/render/canvas/TextBuilder.js","../ol/render/canvas/BuilderGroup.js","../ol/geom/flat/textpath.js","../ol/render/canvas/Executor.js","../ol/render/canvas/ExecutorGroup.js","../ol/render/canvas/hitdetect.js","../ol/renderer/canvas/VectorLayer.js","../ol/renderer/canvas/VectorImageLayer.js","../ol/proj/proj4.js","../ol/layer/Vector.js","../ol/geom/flat/geodesic.js","../ol/layer/Graticule.js","../ol/webgl.js","../ol/webgl/Buffer.js","../ol/webgl/ContextEventType.js","../ol/webgl/PostProcessingPass.js","../ol/webgl/Helper.js","../ol/renderer/webgl/Layer.js","../ol/webgl/RenderTarget.js","../ol/render/webgl/constants.js","../../node_modules/earcut/src/earcut.js","../ol/render/webgl/utils.js","../ol/renderer/webgl/PointsLayer.js","../ol/worker/webgl.js","../ol/renderer/webgl/worldUtil.js","../ol/webgl/PaletteTexture.js","../ol/renderer/webgl/TileLayer.js","../ol/renderer/webgl/TileLayerBase.js","../ol/expr/gpu.js","../ol/webgl/ShaderBuilder.js","../ol/layer/Heatmap.js","../ol/layer/VectorImage.js","../ol/interaction/DblClickDragZoom.js","../ol/interaction/DragAndDrop.js","../ol/interaction/DragRotateAndZoom.js","../ol/interaction/Draw.js","../ol/interaction/Extent.js","../ol/interaction/Link.js","../ol/interaction/Modify.js","../ol/interaction/Select.js","../ol/events/SnapEvent.js","../ol/interaction/Snap.js","../ol/interaction/Translate.js","../ol/geom/flat/flip.js","../ol/format/Feature.js","../ol/format/XMLFeature.js","../ol/format/xsd.js","../ol/format/GPX.js","../ol/format/JSONFeature.js","../ol/format/GeoJSON.js","../ol/format/TextFeature.js","../ol/format/IGC.js","../ol/format/KML.js","../../node_modules/ieee754/index.js","../../node_modules/pbf/index.js","../ol/format/MVT.js","../ol/format/OSMXML.js","../ol/format/XML.js","../ol/format/xlink.js","../ol/format/OWS.js","../ol/format/Polyline.js","../ol/format/TopoJSON.js","../ol/format/GMLBase.js","../ol/format/GML2.js","../ol/format/GML3.js","../ol/format/GML32.js","../ol/format/filter/Filter.js","../ol/format/filter/LogicalNary.js","../ol/format/filter/And.js","../ol/format/filter/Bbox.js","../ol/format/WFS.js","../ol/format/filter.js","../ol/format/WMSGetFeatureInfo.js","../ol/format/WMTSCapabilities.js","../ol/control/FullScreen.js","../ol/control/MousePosition.js","../ol/control/OverviewMap.js","../ol/control/ScaleLine.js","../ol/control/ZoomSlider.js","../ol/control/ZoomToExtent.js","../ol/dist/ol.js","../ol/geom/flat/topology.js","../ol/source.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.0.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseEvent from './events/Event.js';\nimport BaseObject from './Object.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  identityTransform,\n} from './proj.js';\nimport {toRadians} from './math.js';\n\n/**\n * @enum {string}\n */\nconst Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions',\n};\n\n/**\n * @enum string\n */\nconst GeolocationErrorType = {\n  /**\n   * Triggered when a `GeolocationPositionError` occurs.\n   * @event module:ol/Geolocation.GeolocationError#error\n   * @api\n   */\n  ERROR: 'error',\n};\n\n/**\n * @classdesc\n * Events emitted on [GeolocationPositionError](https://developer.mozilla.org/en-US/docs/Web/API/GeolocationPositionError).\n */\nexport class GeolocationError extends BaseEvent {\n  /**\n   * @param {GeolocationPositionError} error error object.\n   */\n  constructor(error) {\n    super(GeolocationErrorType.ERROR);\n\n    /**\n     * Code of the underlying `GeolocationPositionError`.\n     * @type {number}\n     * @api\n     */\n    this.code = error.code;\n\n    /**\n     * Message of the underlying `GeolocationPositionError`.\n     * @type {string}\n     * @api\n     */\n    this.message = error.message;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See https://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:accuracy'|'change:accuracyGeometry'|'change:altitude'|\n *    'change:altitudeAccuracy'|'change:heading'|'change:position'|'change:projection'|'change:speed'|'change:tracking'|\n *    'change:trackingOptions'} GeolocationObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<GeolocationObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'error', GeolocationError, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|GeolocationObjectEventTypes, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return>} GeolocationOnSignature\n */\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](https://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes and errors, register listeners for the generic\n * `change` event and the `error` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     const geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       console.log(geolocation.getPosition());\n *     });\n *     // listen to error\n *     geolocation.on('error', function(evt) {\n *       window.console.log(evt.message);\n *     });\n *\n * @fires GeolocationError\n * @api\n */\nclass Geolocation extends BaseObject {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GeolocationOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GeolocationOnSignature<void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    this.addChangeListener(Property.PROJECTION, this.handleProjectionChanged_);\n    this.addChangeListener(Property.TRACKING, this.handleTrackingChanged_);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        projection,\n      );\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if ('geolocation' in navigator) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions(),\n        );\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPosition} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(\n      Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude,\n    );\n    this.set(\n      Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ? undefined : coords.altitudeAccuracy,\n    );\n    this.set(\n      Property.HEADING,\n      coords.heading === null ? undefined : toRadians(coords.heading),\n    );\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition.slice());\n    this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * @private\n   * @param {GeolocationPositionError} error error object.\n   */\n  positionError_(error) {\n    this.dispatchEvent(new GeolocationError(error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return /** @type {?import(\"./geom/Polygon.js\").default} */ (\n      this.get(Property.ACCURACY_GEOMETRY) || null\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (\n      this.get(Property.ALTITUDE_ACCURACY)\n    );\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"./proj/Projection.js\").default|undefined} */ (\n      this.get(Property.PROJECTION)\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See https://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](https://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (\n      this.get(Property.TRACKING_OPTIONS)\n    );\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(Property.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  }\n}\n\nexport default Geolocation;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise (WebGL only).\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise (WebGL only).\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render.js';\n * import Fill from 'ol/style/Fill.js';\n * import Polygon from 'ol/geom/Polygon.js';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const a = event.inversePixelTransform[0];\n  const b = event.inversePixelTransform[1];\n  const canvasPixelRatio = Math.sqrt(a * a + b * b);\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform,\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio,\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection,\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform,\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} [placeholderTiles] Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned. When not set, the default behaviour of the imagery set takes place,\n * which is unique for each imagery set in BingMaps.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord,\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord)),\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      }),\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection(),\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection,\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z,\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `layout` and no\n   *     `radius` are also accepted.\n   * @param {number} [radius] Radius in units of the projection.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(center, radius, layout) {\n    super();\n    if (layout !== undefined && radius === undefined) {\n      this.setFlatCoordinates(layout, center);\n    } else {\n      radius = radius ? radius : 0;\n      this.setCenterAndRadius(center, radius, layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout,\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent,\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Circle';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, layout) {\n    this.setLayout(layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center),\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(\n          !geometry || geometry.getType() === 'Point',\n          'The default `geometryFunction` can only handle `Point` or null geometries',\n        );\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    }\n    return new Feature({\n      geometry,\n      features,\n    });\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false,\n          false,\n          true,\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height,\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height,\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this,\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions,\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions,\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","/**\n * @module ol/source/Google\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\nconst defaultAttribution =\n  'Google Maps' +\n  '<a class=\"ol-attribution-google-tos\" href=\"https://cloud.google.com/maps-platform/terms/\" target=\"_blank\">Terms of Use</a>' +\n  ' and ' +\n  '<a class=\"ol-attribution-google-tos\" href=\"https://policies.google.com/privacy\" target=\"_blank\">Privacy Policy</a>';\n\nconst createSessionUrl = 'https://tile.googleapis.com/v1/createSession';\nconst tileUrl = 'https://tile.googleapis.com/v1/2dtiles';\nconst maxZoom = 22;\n\n/**\n * @typedef {Object} Options\n * @property {string} key Google Map Tiles API key. Get yours at https://developers.google.com/maps/documentation/tile/get-api-key.\n * @property {string} [mapType='roadmap'] The type of [base map](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields).\n * @property {string} [language='en-US'] An [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) for information displayed on the tiles.\n * @property {string} [region='US'] A [Common Locale Data Repository](https://cldr.unicode.org/) (CLDR) region identifier that represents the user location.\n * @property {string} [imageFormat] The image format used for the map tiles (e.g. `'jpeg'`, or `'png'`).\n * @property {string} [scale] Scale for map elements (`'scaleFactor1x'`, `'scaleFactor2x'`, or `'scaleFactor4x'`).\n * @property {boolean} [highDpi=false] Use high-resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types added to the map (e.g. `'layerRoadmap'`, `'layerStreetview'`, or `'layerTraffic'`).\n * @property {boolean} [overlay=false] Display only the `layerTypes` and not the underlying `mapType` (only works if `layerTypes` is provided).\n * @property {Array<Object>} [styles] [Custom styles](https://developers.google.com/maps/documentation/tile/style-reference) applied to the map.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} SessionTokenRequest\n * @property {string} mapType The map type.\n * @property {string} language The language.\n * @property {string} region The region.\n * @property {string} [imageFormat] The image format.\n * @property {string} [scale] The scale.\n * @property {boolean} [highDpi] Use high resolution tiles.\n * @property {Array<string>} [layerTypes] The layer types.\n * @property {boolean} [overlay] The overlay.\n * @property {Array<Object>} [styles] The styles.\n */\n\n/**\n * @typedef {Object} SessionTokenResponse\n * @property {string} session The session token.\n * @property {string} expiry The session token expiry (seconds since the epoch as a string).\n * @property {number} tileWidth The tile width.\n * @property {number} tileHeight The tile height.\n * @property {string} imageFormat The image format.\n */\n\n/**\n * @classdesc\n * A tile layer source that renders tiles from the Google [Map Tiles API](https://developers.google.com/maps/documentation/tile/overview).\n * The constructor takes options that are passed to the request to create a session token.  Refer to the\n * [documentation](https://developers.google.com/maps/documentation/tile/session_tokens#required_fields)\n * for additional details.\n * @api\n */\nclass Google extends TileImage {\n  /**\n   * @param {Options} options Google Maps options.\n   */\n  constructor(options) {\n    const highDpi = !!options.highDpi;\n    const opaque = !(options.overlay === true);\n    const attributions = options.attributions || [defaultAttribution];\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: opaque,\n      projection: 'EPSG:3857',\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: highDpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @type {Error|null}\n     */\n    this.error_ = null;\n\n    /**\n     * @type {SessionTokenRequest}\n     */\n    const sessionTokenRequest = {\n      mapType: options.mapType || 'roadmap',\n      language: options.language || 'en-US',\n      region: options.region || 'US',\n    };\n    if (options.imageFormat) {\n      sessionTokenRequest.imageFormat = options.imageFormat;\n    }\n    if (options.scale) {\n      sessionTokenRequest.scale = options.scale;\n    }\n    if (highDpi) {\n      sessionTokenRequest.highDpi = true;\n    }\n    if (options.layerTypes) {\n      sessionTokenRequest.layerTypes = options.layerTypes;\n    }\n    if (options.styles) {\n      sessionTokenRequest.styles = options.styles;\n    }\n    if (options.overlay === true) {\n      sessionTokenRequest.overlay = true;\n    }\n\n    /**\n     * @type {SessionTokenRequest}\n     * @private\n     */\n    this.sessionTokenRequest_ = sessionTokenRequest;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.sessionRefreshId_;\n\n    this.createSession_();\n  }\n\n  /**\n   * @return {Error|null} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * source.on('change', () => {\n   *   if (source.getState() === 'error') {\n   *     console.error(source.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Exposed here so it can be overridden in the tests.\n   * @param {string} url The URL.\n   * @param {RequestInit} config The config.\n   * @return {Promise<Response>} A promise that resolves with the response.\n   */\n  fetchSessionToken(url, config) {\n    return fetch(url, config);\n  }\n\n  /**\n   * Get or renew a session token for use with tile requests.\n   * @private\n   */\n  async createSession_() {\n    const url = createSessionUrl + '?key=' + this.apiKey_;\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(this.sessionTokenRequest_),\n    };\n\n    const response = await this.fetchSessionToken(url, config);\n    if (!response.ok) {\n      try {\n        const body = await response.json();\n        this.error_ = new Error(body.error.message);\n      } catch {\n        this.error_ = new Error('Error fetching session token');\n      }\n      this.setState('error');\n      return;\n    }\n\n    /**\n     * @type {SessionTokenResponse}\n     */\n    const sessionTokenResponse = await response.json();\n\n    const tilePixelRatio = this.getTilePixelRatio(1);\n    const tileSize = [\n      sessionTokenResponse.tileWidth / tilePixelRatio,\n      sessionTokenResponse.tileHeight / tilePixelRatio,\n    ];\n\n    this.tileGrid = createXYZ({\n      extent: extentFromProjection(this.getProjection()),\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n\n    const session = sessionTokenResponse.session;\n    const key = this.apiKey_;\n    this.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      const z = tileCoord[0];\n      const x = tileCoord[1];\n      const y = tileCoord[2];\n      const url = `${tileUrl}/${z}/${x}/${y}?session=${session}&key=${key}`;\n      return url;\n    };\n\n    const expiry = parseInt(sessionTokenResponse.expiry, 10) * 1000;\n    const timeout = Math.max(expiry - Date.now() - 60 * 1000, 1);\n    this.sessionRefreshId_ = setTimeout(() => this.createSession_(), timeout);\n\n    // even if the state is already ready, we want the change event\n    this.setState('ready');\n  }\n\n  disposeInternal() {\n    clearTimeout(this.sessionRefreshId_);\n    super.disposeInternal();\n  }\n}\n\nexport default Google;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this,\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\nimport {round} from '../math.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n\n  /** @type {import('../Image.js').ImageObjectPromiseLoader} */\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, options.ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\nimport {decode} from '../Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection,\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/static\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image. When using this loader with an\n * `ol/source/Image`, the same extent must be set as `extent` of the `ol/layer/Image`.\n * @property {string} url Image URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for static images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load || decode;\n  const extent = options.imageExtent;\n  const image = new Image();\n  if (options.crossOrigin !== null) {\n    image.crossOrigin = options.crossOrigin;\n  }\n\n  return () =>\n    load(image, options.url).then((image) => {\n      const resolutionX = getWidth(extent) / image.width;\n      const resolutionY = getHeight(extent) / image.height;\n      const resolution =\n        resolutionX !== resolutionY ? [resolutionX, resolutionY] : resolutionY;\n      return {image, extent, resolution, pixelRatio: 1};\n    });\n}\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper, {decode} from '../Image.js';\nimport {createLoader} from './static.js';\nimport {get as getProjection} from '../proj.js';\nimport {intersects} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} imageExtent Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    this.image = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      createLoader({\n        url: options.url,\n        imageExtent: options.imageExtent,\n        crossOrigin,\n        load: (image, src) => {\n          this.image.setImage(image);\n          imageLoadFunction(this.image, src);\n          return decode(image);\n        },\n      }),\n    );\n\n    this.image.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this),\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image.getExtent())) {\n      return this.image;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\nimport {DECIMALS} from './common.js';\nimport {appendParams} from '../uri.js';\nimport {compareVersions} from '../string.js';\nimport {decode} from '../Image.js';\nimport {floor, round} from '../math.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {getRequestExtent} from './Image.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  if (v13 && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (baseUrl), params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': true,\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n\n  /**\n   * @type {import(\"../Image.js\").Loader}\n   */\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    if (options.crossOrigin !== null) {\n      image.crossOrigin = options.crossOrigin;\n    }\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (options.params === undefined || options.params['LAYER'] === undefined) {\n    const layers = options.params.LAYERS;\n    const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/ogcTileUtil\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {getJSON, resolveUrl} from '../net.js';\nimport {get as getProjection} from '../proj.js';\nimport {getIntersection as intersectExtents} from '../extent.js';\n\n/**\n * See https://ogcapi.ogc.org/tiles/.\n */\n\n/**\n * @typedef {'map' | 'vector'} TileType\n */\n\n/**\n * @typedef {'topLeft' | 'bottomLeft'} CornerOfOrigin\n */\n\n/**\n * @typedef {Object} TileSet\n * @property {TileType} dataType Type of data represented in the tileset.\n * @property {string} [tileMatrixSetDefinition] Reference to a tile matrix set definition.\n * @property {TileMatrixSet} [tileMatrixSet] Tile matrix set definition.\n * @property {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @property {Array<Link>} links Tileset links.\n */\n\n/**\n * @typedef {Object} Link\n * @property {string} rel The link rel attribute.\n * @property {string} href The link URL.\n * @property {string} type The link type.\n */\n\n/**\n * @typedef {Object} TileMatrixSetLimit\n * @property {string} tileMatrix The tile matrix id.\n * @property {number} minTileRow The minimum tile row.\n * @property {number} maxTileRow The maximum tile row.\n * @property {number} minTileCol The minimum tile column.\n * @property {number} maxTileCol The maximum tile column.\n */\n\n/**\n * @typedef {Object} TileMatrixSet\n * @property {string} id The tile matrix set identifier.\n * @property {string} crs The coordinate reference system.\n * @property {Array<string>} [orderedAxes] Axis order.\n * @property {Array<TileMatrix>} tileMatrices Array of tile matrices.\n */\n\n/**\n * @typedef {Object} TileMatrix\n * @property {string} id The tile matrix identifier.\n * @property {number} cellSize The pixel resolution (map units per pixel).\n * @property {Array<number>} pointOfOrigin The map location of the matrix origin.\n * @property {CornerOfOrigin} [cornerOfOrigin='topLeft'] The corner of the matrix that represents the origin ('topLeft' or 'bottomLeft').\n * @property {number} matrixWidth The number of columns.\n * @property {number} matrixHeight The number of rows.\n * @property {number} tileWidth The pixel width of a tile.\n * @property {number} tileHeight The pixel height of a tile.\n */\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownMapMediaTypes = {\n  'image/png': true,\n  'image/jpeg': true,\n  'image/gif': true,\n  'image/webp': true,\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst knownVectorMediaTypes = {\n  'application/vnd.mapbox-vector-tile': true,\n  'application/geo+json': true,\n};\n\n/**\n * @typedef {Object} TileSetInfo\n * @property {string} urlTemplate The tile URL template.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid The tile grid.\n * @property {import(\"../Tile.js\").UrlFunction} urlFunction The tile URL function.\n */\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} url The tile set URL.\n * @property {string} mediaType The preferred tile media type.\n * @property {Array<string>} [supportedMediaTypes] The supported media types.\n * @property {import(\"../proj/Projection.js\").default} projection The source projection.\n * @property {Object} [context] Optional context for constructing the URL.\n */\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @return {string} The tile URL template.\n */\nexport function getMapTileUrlTemplate(links, mediaType) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownMapMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      } else if (!fallbackUrlTemplate && link.type.startsWith('image/')) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {Array<Link>} links Tileset links.\n * @param {string} [mediaType] The preferred media type.\n * @param {Array<string>} [supportedMediaTypes] The media types supported by the parser.\n * @return {string} The tile URL template.\n */\nexport function getVectorTileUrlTemplate(\n  links,\n  mediaType,\n  supportedMediaTypes,\n) {\n  let tileUrlTemplate;\n  let fallbackUrlTemplate;\n\n  /**\n   * Lookup of URL by media type.\n   * @type {Object<string, string>}\n   */\n  const hrefLookup = {};\n\n  for (let i = 0; i < links.length; ++i) {\n    const link = links[i];\n    hrefLookup[link.type] = link.href;\n    if (link.rel === 'item') {\n      if (link.type === mediaType) {\n        tileUrlTemplate = link.href;\n        break;\n      }\n      if (knownVectorMediaTypes[link.type]) {\n        fallbackUrlTemplate = link.href;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate && supportedMediaTypes) {\n    for (let i = 0; i < supportedMediaTypes.length; ++i) {\n      const supportedMediaType = supportedMediaTypes[i];\n      if (hrefLookup[supportedMediaType]) {\n        tileUrlTemplate = hrefLookup[supportedMediaType];\n        break;\n      }\n    }\n  }\n\n  if (!tileUrlTemplate) {\n    if (fallbackUrlTemplate) {\n      tileUrlTemplate = fallbackUrlTemplate;\n    } else {\n      throw new Error('Could not find \"item\" link');\n    }\n  }\n\n  return tileUrlTemplate;\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileMatrixSet} tileMatrixSet Tile matrix set.\n * @param {string} tileUrlTemplate Tile URL template.\n * @param {Array<TileMatrixSetLimit>} [tileMatrixSetLimits] Tile matrix set limits.\n * @return {TileSetInfo} Tile set info.\n */\nfunction parseTileMatrixSet(\n  sourceInfo,\n  tileMatrixSet,\n  tileUrlTemplate,\n  tileMatrixSetLimits,\n) {\n  let projection = sourceInfo.projection;\n  if (!projection) {\n    projection = getProjection(tileMatrixSet.crs);\n    if (!projection) {\n      throw new Error(`Unsupported CRS: ${tileMatrixSet.crs}`);\n    }\n  }\n  const orderedAxes = tileMatrixSet.orderedAxes;\n  const backwards =\n    (orderedAxes\n      ? orderedAxes\n          .slice(0, 2)\n          .map((s) => s.replace(/E|X|Lon/i, 'e').replace(/N|Y|Lat/i, 'n'))\n          .join('')\n      : projection.getAxisOrientation().substr(0, 2)) !== 'en';\n\n  const matrices = tileMatrixSet.tileMatrices;\n\n  /**\n   * @type {Object<string, TileMatrix>}\n   */\n  const matrixLookup = {};\n  for (let i = 0; i < matrices.length; ++i) {\n    const matrix = matrices[i];\n    matrixLookup[matrix.id] = matrix;\n  }\n\n  /**\n   * @type {Object<string, TileMatrixSetLimit>}\n   */\n  const limitLookup = {};\n\n  /**\n   * @type {Array<string>}\n   */\n  const matrixIds = [];\n\n  if (tileMatrixSetLimits) {\n    for (let i = 0; i < tileMatrixSetLimits.length; ++i) {\n      const limit = tileMatrixSetLimits[i];\n      const id = limit.tileMatrix;\n      matrixIds.push(id);\n      limitLookup[id] = limit;\n    }\n  } else {\n    for (let i = 0; i < matrices.length; ++i) {\n      const id = matrices[i].id;\n      matrixIds.push(id);\n    }\n  }\n\n  const length = matrixIds.length;\n  const origins = new Array(length);\n  const resolutions = new Array(length);\n  const sizes = new Array(length);\n  const tileSizes = new Array(length);\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n\n  for (let i = 0; i < length; ++i) {\n    const id = matrixIds[i];\n    const matrix = matrixLookup[id];\n    const origin = matrix.pointOfOrigin;\n    if (backwards) {\n      origins[i] = [origin[1], origin[0]];\n    } else {\n      origins[i] = origin;\n    }\n    resolutions[i] = matrix.cellSize;\n    sizes[i] = [matrix.matrixWidth, matrix.matrixHeight];\n    tileSizes[i] = [matrix.tileWidth, matrix.tileHeight];\n    const limit = limitLookup[id];\n    if (limit) {\n      const tileMapWidth = matrix.cellSize * matrix.tileWidth;\n      const minX = origins[i][0] + limit.minTileCol * tileMapWidth;\n      const maxX = origins[i][0] + (limit.maxTileCol + 1) * tileMapWidth;\n\n      const tileMapHeight = matrix.cellSize * matrix.tileHeight;\n      const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n      let minY;\n      let maxY;\n      if (upsideDown) {\n        minY = origins[i][1] + limit.minTileRow * tileMapHeight;\n        maxY = origins[i][1] + (limit.maxTileRow + 1) * tileMapHeight;\n      } else {\n        minY = origins[i][1] - (limit.maxTileRow + 1) * tileMapHeight;\n        maxY = origins[i][1] - limit.minTileRow * tileMapHeight;\n      }\n\n      intersectExtents(extent, [minX, minY, maxX, maxY], extent);\n    }\n  }\n\n  const tileGrid = new TileGrid({\n    origins: origins,\n    resolutions: resolutions,\n    sizes: sizes,\n    tileSizes: tileSizes,\n    extent: tileMatrixSetLimits ? extent : undefined,\n  });\n\n  const context = sourceInfo.context;\n  const base = sourceInfo.url;\n\n  /** @type {import('../Tile.js').UrlFunction} */\n  function tileUrlFunction(tileCoord, pixelRatio, projection) {\n    if (!tileCoord) {\n      return undefined;\n    }\n\n    const id = matrixIds[tileCoord[0]];\n    const matrix = matrixLookup[id];\n    const upsideDown = matrix.cornerOfOrigin === 'bottomLeft';\n\n    const localContext = {\n      tileMatrix: id,\n      tileCol: tileCoord[1],\n      tileRow: upsideDown ? -tileCoord[2] - 1 : tileCoord[2],\n    };\n\n    if (tileMatrixSetLimits) {\n      const limit = limitLookup[matrix.id];\n      if (\n        localContext.tileCol < limit.minTileCol ||\n        localContext.tileCol > limit.maxTileCol ||\n        localContext.tileRow < limit.minTileRow ||\n        localContext.tileRow > limit.maxTileRow\n      ) {\n        return undefined;\n      }\n    }\n\n    Object.assign(localContext, context);\n\n    const url = tileUrlTemplate.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n      return localContext[p];\n    });\n\n    return resolveUrl(base, url);\n  }\n\n  return {\n    grid: tileGrid,\n    urlTemplate: tileUrlTemplate,\n    urlFunction: tileUrlFunction,\n  };\n}\n\n/**\n * @param {SourceInfo} sourceInfo The source info.\n * @param {TileSet} tileSet Tile set.\n * @return {TileSetInfo|Promise<TileSetInfo>} Tile set info.\n */\nfunction parseTileSetMetadata(sourceInfo, tileSet) {\n  const tileMatrixSetLimits = tileSet.tileMatrixSetLimits;\n  /** @type {string} */\n  let tileUrlTemplate;\n\n  if (tileSet.dataType === 'map') {\n    tileUrlTemplate = getMapTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n    );\n  } else if (tileSet.dataType === 'vector') {\n    tileUrlTemplate = getVectorTileUrlTemplate(\n      tileSet.links,\n      sourceInfo.mediaType,\n      sourceInfo.supportedMediaTypes,\n    );\n  } else {\n    throw new Error('Expected tileset data type to be \"map\" or \"vector\"');\n  }\n\n  if (tileSet.tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileSet.tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  }\n\n  const tileMatrixSetLink = tileSet.links.find(\n    (link) =>\n      link.rel === 'http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme',\n  );\n  if (!tileMatrixSetLink) {\n    throw new Error(\n      'Expected http://www.opengis.net/def/rel/ogc/1.0/tiling-scheme link or tileMatrixSet',\n    );\n  }\n  const tileMatrixSetDefinition = tileMatrixSetLink.href;\n\n  const url = resolveUrl(sourceInfo.url, tileMatrixSetDefinition);\n  return getJSON(url).then(function (tileMatrixSet) {\n    return parseTileMatrixSet(\n      sourceInfo,\n      tileMatrixSet,\n      tileUrlTemplate,\n      tileMatrixSetLimits,\n    );\n  });\n}\n\n/**\n * @param {SourceInfo} sourceInfo Source info.\n * @return {Promise<TileSetInfo>} Tile set info.\n */\nexport function getTileSetInfo(sourceInfo) {\n  return getJSON(sourceInfo.url).then(function (tileSet) {\n    return parseTileSetMetadata(sourceInfo, tileSet);\n  });\n}\n","/**\n * @module ol/source/OGCMapTile\n */\nimport TileImage from './TileImage.js';\nimport {getTileSetInfo} from './ogcTileUtil.js';\nimport {error as logError} from '../console.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} url URL to the OGC Map Tileset endpoint.\n * @property {Object} [context] A lookup of values to use in the tile URL template.  The `{tileMatrix}`\n * (zoom level), `{tileRow}`, and `{tileCol}` variables in the URL will always be provided by the source.\n * @property {string} [mediaType] The content type for the tiles (e.g. \"image/png\").  If not provided,\n * the source will try to find a link with rel=\"item\" that uses a supported image type.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. By default, the projection\n * will be derived from the `crs` of the `tileMatrixSet`.  You can override this by supplying\n * a projection to the constructor.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(tile, src) {\n *   tile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for map tiles from an [OGC API - Tiles](https://ogcapi.ogc.org/tiles/) service that provides \"map\" type tiles.\n * The service must conform to at least the core (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/core)\n * and tileset (http://www.opengis.net/spec/ogcapi-tiles-1/1.0/conf/tileset) conformance classes.\n * @api\n */\nclass OGCMapTile extends TileImage {\n  /**\n   * @param {Options} options OGC map tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n    });\n\n    const sourceInfo = {\n      url: options.url,\n      projection: this.getProjection(),\n      mediaType: options.mediaType,\n      context: options.context || null,\n    };\n\n    getTileSetInfo(sourceInfo)\n      .then(this.handleTileSetInfo_.bind(this))\n      .catch(this.handleError_.bind(this));\n  }\n\n  /**\n   * @param {import(\"./ogcTileUtil.js\").TileSetInfo} tileSetInfo Tile set info.\n   * @private\n   */\n  handleTileSetInfo_(tileSetInfo) {\n    this.tileGrid = tileSetInfo.grid;\n    this.setTileUrlFunction(tileSetInfo.urlFunction, tileSetInfo.urlTemplate);\n    this.setState('ready');\n  }\n\n  /**\n   * @private\n   * @param {Error} error The error.\n   */\n  handleError_(error) {\n    logError(error);\n    this.setState('error');\n  }\n}\n\nexport default OGCMapTile;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height,\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'})),\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0),\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers,\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices,\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta,\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutter: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data),\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState),\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas,\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data),\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/StadiaMaps\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type string\n */\nconst STADIA_ATTRIBUTION =\n  '&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a>';\n\n/**\n * @const\n * @type string\n */\nconst OMT_ATTRIBUTION =\n  '&copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a>';\n\n/**\n * @const\n * @type string\n */\nconst STAMEN_ATTRIBUTION =\n  '&copy; <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>';\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'stamen_terrain': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_terrain_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_terrain_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_toner_labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'stamen_toner_lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'stamen_watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'alidade_smooth': {\n    extension: 'png',\n    opaque: true,\n  },\n  'alidade_smooth_dark': {\n    extension: 'png',\n    opaque: true,\n  },\n  'outdoors': {\n    extension: 'png',\n    opaque: true,\n  },\n  'osm_bright': {\n    extension: 'png',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number, retina: boolean}>}\n */\nconst ProviderConfig = {\n  'stamen_terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n    retina: true,\n  },\n  'stamen_toner': {\n    minZoom: 0,\n    maxZoom: 20,\n    retina: true,\n  },\n  'stamen_watercolor': {\n    minZoom: 1,\n    maxZoom: 18,\n    retina: false,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name. Valid values: `alidade_smooth`, `alidade_smooth_dark`, `outdoors`, `stamen_terrain`, `stamen_terrain_background`, `stamen_terrain_labels`, `stamen_terrain_lines`, `stamen_toner_background`, `stamen_toner`, `stamen_toner_labels`, `stamen_toner_lines`, `stamen_toner_lite`, `stamen_watercolor`, and `osm_bright`.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [apiKey] Stadia Maps API key. Not required for localhost or most public web deployments. See https://docs.stadiamaps.com/authentication/ for details.\n * @property {boolean} [retina] Use retina tiles (if available; not available for Stamen Watercolor).\n */\n\n/**\n * @classdesc\n * Layer source for the Stadia Maps tile server.\n * @api\n */\nclass StadiaMaps extends XYZ {\n  /**\n   * @param {Options} options StadiaMaps options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider] || {\n      'minZoom': 0,\n      'maxZoom': 20,\n      'retina': true,\n    };\n\n    const layerConfig = LayerConfig[options.layer];\n    const query = options.apiKey ? '?api_key=' + options.apiKey : '';\n    const retina = providerConfig.retina && options.retina ? '@2x' : '';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tiles.stadiamaps.com/tiles/' +\n          options.layer +\n          '/{z}/{x}/{y}' +\n          retina +\n          '.' +\n          layerConfig.extension +\n          query;\n\n    const attributions = [STADIA_ATTRIBUTION, OMT_ATTRIBUTION, OSM_ATTRIBUTION];\n\n    if (options.layer.startsWith('stamen_')) {\n      attributions.splice(1, 0, STAMEN_ATTRIBUTION);\n    }\n\n    super({\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom !== undefined\n          ? options.maxZoom\n          : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom !== undefined\n          ? options.minZoom\n          : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      tilePixelRatio: retina ? 2 : 1,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default StadiaMaps;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {createEmpty} from '../extent.js';\nimport {getRequestUrl} from './arcgisRest.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params,\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getRequestUrl(\n      url,\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      params,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas,\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this,\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(() => {\n          callback(this.getData(coordinate));\n        }, 0);\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this),\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      throw new Error('Either `url` or `tileJSON` options must be provided');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection(),\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection,\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_,\n    );\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack,\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/structs/LinkedList\n */\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev] Previous.\n * @property {Item} [next] Next.\n * @property {?} data Data.\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nclass LinkedList {\n  /**\n   * @param {boolean} [circular] The last item is connected to the first one,\n   * and the first item to the last one. Default is true.\n   */\n  constructor(circular) {\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.first_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.last_;\n\n    /**\n     * @private\n     * @type {Item|undefined}\n     */\n    this.head_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.circular_ = circular === undefined ? true : circular;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.length_ = 0;\n  }\n\n  /**\n   * Inserts an item into the linked list right after the current one.\n   *\n   * @param {?} data Item data.\n   */\n  insertItem(data) {\n    /** @type {Item} */\n    const item = {\n      prev: undefined,\n      next: undefined,\n      data: data,\n    };\n\n    const head = this.head_;\n\n    //Initialize the list.\n    if (!head) {\n      this.first_ = item;\n      this.last_ = item;\n      if (this.circular_) {\n        item.next = item;\n        item.prev = item;\n      }\n    } else {\n      //Link the new item to the adjacent ones.\n      const next = head.next;\n      item.prev = head;\n      item.next = next;\n      head.next = item;\n      if (next) {\n        next.prev = item;\n      }\n\n      if (head === this.last_) {\n        this.last_ = item;\n      }\n    }\n    this.head_ = item;\n    this.length_++;\n  }\n\n  /**\n   * Removes the current item from the list. Sets the cursor to the next item,\n   * if possible.\n   */\n  removeItem() {\n    const head = this.head_;\n    if (head) {\n      const next = head.next;\n      const prev = head.prev;\n      if (next) {\n        next.prev = prev;\n      }\n      if (prev) {\n        prev.next = next;\n      }\n      this.head_ = next || prev;\n\n      if (this.first_ === this.last_) {\n        this.head_ = undefined;\n        this.first_ = undefined;\n        this.last_ = undefined;\n      } else if (this.first_ === head) {\n        this.first_ = this.head_;\n      } else if (this.last_ === head) {\n        this.last_ = prev ? this.head_.prev : this.head_;\n      }\n      this.length_--;\n    }\n  }\n\n  /**\n   * Sets the cursor to the first item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  firstItem() {\n    this.head_ = this.first_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the last item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  lastItem() {\n    this.head_ = this.last_;\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the next item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  nextItem() {\n    if (this.head_ && this.head_.next) {\n      this.head_ = this.head_.next;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the next item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getNextItem() {\n    if (this.head_ && this.head_.next) {\n      return this.head_.next.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the cursor to the previous item, and returns the associated data.\n   *\n   * @return {?} Item data.\n   */\n  prevItem() {\n    if (this.head_ && this.head_.prev) {\n      this.head_ = this.head_.prev;\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the previous item's data without moving the cursor.\n   *\n   * @return {?} Item data.\n   */\n  getPrevItem() {\n    if (this.head_ && this.head_.prev) {\n      return this.head_.prev.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the current item's data.\n   *\n   * @return {?} Item data.\n   */\n  getCurrItem() {\n    if (this.head_) {\n      return this.head_.data;\n    }\n    return undefined;\n  }\n\n  /**\n   * Sets the first item of the list. This only works for circular lists, and sets\n   * the last item accordingly.\n   */\n  setFirstItem() {\n    if (this.circular_ && this.head_) {\n      this.first_ = this.head_;\n      this.last_ = this.head_.prev;\n    }\n  }\n\n  /**\n   * Concatenates two lists.\n   * @param {LinkedList} list List to merge into the current list.\n   */\n  concat(list) {\n    if (list.head_) {\n      if (this.head_) {\n        const end = this.head_.next;\n        this.head_.next = list.first_;\n        list.first_.prev = this.head_;\n        end.prev = list.last_;\n        list.last_.next = end;\n        this.length_ += list.length_;\n      } else {\n        this.head_ = list.head_;\n        this.first_ = list.first_;\n        this.last_ = list.last_;\n        this.length_ = list.length_;\n      }\n      list.head_ = undefined;\n      list.first_ = undefined;\n      list.last_ = undefined;\n      list.length_ = 0;\n    }\n  }\n\n  /**\n   * Returns the current length of the list.\n   *\n   * @return {number} Length.\n   */\n  getLength() {\n    return this.length_;\n  }\n}\n\nexport default LinkedList;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Array<Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = [];\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    this.deferredZIndexContexts_.forEach((zIndexContexts) => {\n      zIndexContexts.forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    });\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const declutter = this.getLayer().getDeclutter();\n    if (!declutter) {\n      return;\n    }\n    this.setupCompositionContext_(); //FIXME Check if this works, or if we need to defer something.\n    this.renderWorlds(this.replayGroup_, frameState, true);\n    this.releaseCompositionContext_();\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    this.replayGroup_.renderDeferred();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport EventType from '../../events/EventType.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ImageState from '../../ImageState.js';\nimport RBush from 'rbush';\nimport ViewHint from '../../ViewHint.js';\nimport {apply, compose, create} from '../../transform.js';\nimport {fromResolutionLike} from '../../resolution.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasVectorImageLayerRenderer extends CanvasImageLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToVectorPixelTransform_ = create();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.vectorRenderer_.dispose();\n    super.disposeInternal();\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.vectorRenderer_) {\n      return Promise.resolve([]);\n    }\n    const vectorPixel = apply(\n      this.coordinateToVectorPixelTransform_,\n      apply(this.renderedPixelToCoordinateTransform_, pixel.slice()),\n    );\n    return this.vectorRenderer_.getFeatures(vectorPixel);\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    this.vectorRenderer_.handleFontsChanged();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const hints = frameState.viewHints;\n    const vectorRenderer = this.vectorRenderer_;\n    let renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n    const width = getWidth(renderedExtent) / viewResolution;\n    const height = getHeight(renderedExtent) / viewResolution;\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      vectorRenderer.useContainer(null, null);\n      const context = vectorRenderer.context;\n      const layerState = frameState.layerStatesArray[frameState.layerIndex];\n      const imageLayerState = Object.assign({}, layerState, {opacity: 1});\n      const imageFrameState = /** @type {import(\"../../Map.js\").FrameState} */ (\n        Object.assign({}, frameState, {\n          extent: renderedExtent,\n          size: [width, height],\n          viewState: /** @type {import(\"../../View.js\").State} */ (\n            Object.assign({}, frameState.viewState, {\n              rotation: 0,\n            })\n          ),\n          layerStatesArray: [imageLayerState],\n          layerIndex: 0,\n          declutter: null,\n        })\n      );\n      const declutter = this.getLayer().getDeclutter();\n      if (declutter) {\n        imageFrameState.declutter = {\n          [declutter]: new RBush(9),\n        };\n      }\n      let emptyImage = true;\n      const image = new ImageCanvas(\n        renderedExtent,\n        viewResolution,\n        pixelRatio,\n        context.canvas,\n        function (callback) {\n          if (\n            vectorRenderer.prepareFrame(imageFrameState) &&\n            vectorRenderer.replayGroupChanged\n          ) {\n            vectorRenderer.clipping = false;\n            if (vectorRenderer.renderFrame(imageFrameState, null)) {\n              vectorRenderer.renderDeclutter(imageFrameState);\n              vectorRenderer.renderDeferred(imageFrameState);\n              emptyImage = false;\n            }\n            callback();\n          }\n        },\n      );\n\n      image.addEventListener(EventType.CHANGE, () => {\n        if (image.getState() !== ImageState.LOADED) {\n          return;\n        }\n        this.image_ = emptyImage ? null : image;\n        const imagePixelRatio = image.getPixelRatio();\n        const renderedResolution =\n          (fromResolutionLike(image.getResolution()) * pixelRatio) /\n          imagePixelRatio;\n        this.renderedResolution = renderedResolution;\n        this.coordinateToVectorPixelTransform_ = compose(\n          this.coordinateToVectorPixelTransform_,\n          width / 2,\n          height / 2,\n          1 / renderedResolution,\n          -1 / renderedResolution,\n          0,\n          -viewState.center[0],\n          -viewState.center[1],\n        );\n      });\n      image.load();\n    }\n\n    if (this.image_) {\n      this.renderedPixelToCoordinateTransform_ =\n        frameState.pixelToCoordinateTransform.slice();\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   */\n  preRender() {}\n\n  /**\n   */\n  postRender() {}\n\n  /**\n   */\n  renderDeclutter() {}\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(\n        coordinate,\n        frameState,\n        hitTolerance,\n        callback,\n        matches,\n      );\n    }\n    return super.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      callback,\n      matches,\n    );\n  }\n}\n\nexport default CanvasVectorImageLayerRenderer;\n","/**\n * @module ol/proj/proj4\n */\nimport Projection from './Projection.js';\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n  get,\n} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return get(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return get(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {get as getProjection, getTransform} from '../../proj.js';\nimport {squaredSegmentDistance, toDegrees, toRadians} from '../../math.js';\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (\n      squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n      squaredTolerance\n    ) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(\n  lon1,\n  lat1,\n  lon2,\n  lat2,\n  projection,\n  squaredTolerance,\n) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon =\n        toRadians(lon1) +\n        Math.atan2(\n          Math.sin(theta) * sinD * cosLat1,\n          cosD - sinLat1 * Math.sin(lat),\n        );\n      return [toDegrees(lon), toDegrees(lat)];\n    },\n    getTransform(geoProjection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon, lat1 + (lat2 - lat1) * frac];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n      return [lon1 + (lon2 - lon1) * frac, lat];\n    },\n    getTransform(epsg4326Projection, projection),\n    squaredTolerance,\n  );\n}\n","/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  applyTransform,\n  approximatelyEquals,\n  containsCoordinate,\n  containsExtent,\n  equals,\n  getCenter,\n  getIntersection,\n  getWidth,\n  intersects,\n  isEmpty,\n  wrapX as wrapExtentX,\n} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {degreesToStringHDMS} from '../coordinate.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n} from '../proj.js';\nimport {getVectorContext} from '../render.js';\nimport {meridian, parallel} from '../geom/flat/geodesic.js';\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)',\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nconst INTERVALS = [\n  90,\n  45,\n  30,\n  20,\n  10,\n  5,\n  2,\n  1,\n  30 / 60,\n  20 / 60,\n  10 / 60,\n  5 / 60,\n  2 / 60,\n  1 / 60,\n  30 / 3600,\n  20 / 3600,\n  10 / 3600,\n  5 / 3600,\n  2 / 3600,\n  1 / 3600,\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle] The\n * stroke style to use for drawing the graticule. If not provided, the following stroke will be used:\n * ```js\n * new Stroke({\n *   color: 'rgba(0, 0, 0, 0.2)' // a not fully opaque black\n * });\n * ```\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 30/60, 20/60, 10/60, 5/60, 2/60, 1/60, 30/3600, 20/3600, 10/3600, 5/3600, 2/3600, 1/3600]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Graticule extends VectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign(\n      {\n        updateWhileAnimating: true,\n        updateWhileInteracting: true,\n        renderBuffer: 0,\n      },\n      options,\n    );\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    super(baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxX_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxY_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minX_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minY_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ =\n      options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ =\n      options.strokeStyle !== undefined\n        ? options.strokeStyle\n        : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.bottomRight_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topLeft_ = null;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.topRight_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ =\n        options.lonLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'EW')\n          : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ =\n        options.latLabelFormatter == undefined\n          ? degreesToStringHDMS.bind(this, 'NS')\n          : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ =\n        options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ =\n        options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.lonLabelStyleBase_ = new Style({\n        text:\n          options.lonLabelStyle !== undefined\n            ? options.lonLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.lonLabelStyleBase_.getText().setText(label);\n        return this.lonLabelStyleBase_;\n      };\n\n      /**\n       * @type {Style}\n       * @private\n       */\n      this.latLabelStyleBase_ = new Style({\n        text:\n          options.latLabelStyle !== undefined\n            ? options.latLabelStyle.clone()\n            : new Text({\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)',\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3,\n                }),\n              }),\n      });\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = (feature) => {\n        const label = feature.get('graticule_label');\n        this.latLabelStyleBase_.getText().setText(label);\n        return this.latLabelStyleBase_;\n      };\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n\n      this.addEventListener(EventType.POSTRENDER, this.drawLabels_.bind(this));\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ =\n      options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: this.strategyFunction.bind(this),\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX,\n      }),\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.loadedExtent_ = null;\n\n    /**\n     * @type {?import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.renderedResolution_ = null;\n\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Strategy function for loading features based on the view's extent and\n   * resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<import(\"../extent.js\").Extent>} Extents.\n   */\n  strategyFunction(extent, resolution) {\n    // extents may be passed in different worlds, to avoid endless loop we use only one\n    let realWorldExtent = extent.slice();\n    if (this.projection_ && this.getSource().getWrapX()) {\n      wrapExtentX(realWorldExtent, this.projection_);\n    }\n    if (this.loadedExtent_) {\n      if (\n        approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)\n      ) {\n        // make sure result is exactly equal to previous extent\n        realWorldExtent = this.loadedExtent_.slice();\n      } else {\n        // we should not keep track of loaded extents\n        this.getSource().removeLoadedExtent(this.loadedExtent_);\n      }\n    }\n    return [realWorldExtent];\n  }\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  loaderFunction(extent, resolution, projection) {\n    this.loadedExtent_ = extent;\n    const source = this.getSource();\n\n    // only consider the intersection between our own extent & the requested one\n    const layerExtent = this.getExtent() || [\n      -Infinity,\n      -Infinity,\n      Infinity,\n      Infinity,\n    ];\n    const renderExtent = getIntersection(layerExtent, extent);\n\n    if (\n      this.renderedExtent_ &&\n      equals(this.renderedExtent_, renderExtent) &&\n      this.renderedResolution_ === resolution\n    ) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n    this.renderedResolution_ = resolution;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    const center = getCenter(renderExtent);\n    const squaredTolerance = (resolution * resolution) / 4;\n\n    const updateProjectionInfo =\n      !this.projection_ || !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    let featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridians_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallels_.length;\n    }\n\n    let feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    const featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    let poolIndex = 0;\n\n    // add features for the lines & labels\n    let i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, index) {\n    const lineString = this.getMeridian_(\n      lon,\n      minLat,\n      maxLat,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        const text = this.lonLabelFormatter_(lon);\n        if (index in this.meridiansLabels_) {\n          this.meridiansLabels_[index].text = text;\n        } else {\n          this.meridiansLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  addParallel_(lat, minLon, maxLon, squaredTolerance, extent, index) {\n    const lineString = this.getParallel_(\n      lat,\n      minLon,\n      maxLon,\n      squaredTolerance,\n      index,\n    );\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        const text = this.latLabelFormatter_(lat);\n        if (index in this.parallelsLabels_) {\n          this.parallelsLabels_[index].text = text;\n        } else {\n          this.parallelsLabels_[index] = {\n            geom: new Point([]),\n            text: text,\n          };\n        }\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  }\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Render event.\n   * @private\n   */\n  drawLabels_(event) {\n    const rotation = event.frameState.viewState.rotation;\n    const resolution = event.frameState.viewState.resolution;\n    const size = event.frameState.size;\n    const extent = event.frameState.extent;\n    const rotationCenter = getCenter(extent);\n    let rotationExtent = extent;\n    if (rotation) {\n      const unrotatedWidth = size[0] * resolution;\n      const unrotatedHeight = size[1] * resolution;\n      rotationExtent = [\n        rotationCenter[0] - unrotatedWidth / 2,\n        rotationCenter[1] - unrotatedHeight / 2,\n        rotationCenter[0] + unrotatedWidth / 2,\n        rotationCenter[1] + unrotatedHeight / 2,\n      ];\n    }\n\n    let startWorld = 0;\n    let endWorld = 0;\n    let labelsAtStart = this.latLabelPosition_ < 0.5;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n      endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n      const inverted = Math.abs(rotation) > Math.PI / 2;\n      labelsAtStart = labelsAtStart !== inverted;\n    }\n    const vectorContext = getVectorContext(event);\n\n    for (let world = startWorld; world <= endWorld; ++world) {\n      let poolIndex = this.meridians_.length + this.parallels_.length;\n      let feature, index, l, textPoint;\n\n      if (this.meridiansLabels_) {\n        for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n          const lineString = this.meridians_[index];\n          if (!rotation && world === 0) {\n            textPoint = this.getMeridianPoint_(lineString, extent, index);\n          } else {\n            const clone = lineString.clone();\n            clone.translate(world * worldWidth, 0);\n            clone.rotate(-rotation, rotationCenter);\n            textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n            textPoint.rotate(rotation, rotationCenter);\n          }\n          feature = this.featurePool_[poolIndex++];\n          feature.setGeometry(textPoint);\n          feature.set('graticule_label', this.meridiansLabels_[index].text);\n          vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n        }\n      }\n      if (this.parallelsLabels_) {\n        if (\n          (world === startWorld && labelsAtStart) ||\n          (world === endWorld && !labelsAtStart)\n        ) {\n          for (index = 0, l = this.parallels_.length; index < l; ++index) {\n            const lineString = this.parallels_[index];\n            if (!rotation && world === 0) {\n              textPoint = this.getParallelPoint_(lineString, extent, index);\n            } else {\n              const clone = lineString.clone();\n              clone.translate(world * worldWidth, 0);\n              clone.rotate(-rotation, rotationCenter);\n              textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n              textPoint.rotate(rotation, rotationCenter);\n            }\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(textPoint);\n            feature.set('graticule_label', this.parallelsLabels_[index].text);\n            vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  createGraticule_(extent, center, resolution, squaredTolerance) {\n    const interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = 0;\n      this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    let wrapX = false;\n    const projectionExtent = this.projection_.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    if (\n      this.getSource().getWrapX() &&\n      this.projection_.canWrapX() &&\n      !containsExtent(projectionExtent, extent)\n    ) {\n      if (getWidth(extent) >= worldWidth) {\n        extent[0] = projectionExtent[0];\n        extent[2] = projectionExtent[2];\n      } else {\n        wrapX = true;\n      }\n    }\n\n    // Constrain the center to fit into the extent available to the graticule\n\n    const validCenterP = [\n      clamp(center[0], this.minX_, this.maxX_),\n      clamp(center[1], this.minY_, this.maxY_),\n    ];\n\n    // Transform the center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    const centerLonLat = this.toLonLatTransform_(validCenterP);\n    if (isNaN(centerLonLat[1])) {\n      centerLonLat[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n    let centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n    let centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n    const maxLines = this.maxLines_;\n    let cnt, idx, lat, lon;\n\n    // Limit the extent to fit into the extent available to the graticule\n\n    let validExtentP = extent;\n    if (!wrapX) {\n      validExtentP = [\n        clamp(extent[0], this.minX_, this.maxX_),\n        clamp(extent[1], this.minY_, this.maxY_),\n        clamp(extent[2], this.minX_, this.maxX_),\n        clamp(extent[3], this.minY_, this.maxY_),\n      ];\n    }\n\n    // Transform the extent to get the lon lat ranges for the edges of the extent\n\n    const validExtent = applyTransform(\n      validExtentP,\n      this.toLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    let maxLat = validExtent[3];\n    let maxLon = validExtent[2];\n    let minLat = validExtent[1];\n    let minLon = validExtent[0];\n\n    if (!wrapX) {\n      // Check if extremities of the world extent lie inside the extent\n      // (for example the pole in a polar projection)\n      // and extend the extent as appropriate\n\n      if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n        minLon = this.minLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.bottomRight_)) {\n        maxLon = this.maxLon_;\n        minLat = this.minLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topLeft_)) {\n        minLon = this.minLon_;\n        maxLat = this.maxLat_;\n      }\n      if (containsCoordinate(validExtentP, this.topRight_)) {\n        maxLon = this.maxLon_;\n        maxLat = this.maxLat_;\n      }\n\n      // The transformed center may also extend the lon lat ranges used for rendering\n\n      maxLat = clamp(maxLat, centerLat, this.maxLat_);\n      maxLon = clamp(maxLon, centerLon, this.maxLon_);\n      minLat = clamp(minLat, this.minLat_, centerLat);\n      minLon = clamp(minLon, this.minLon_, centerLon);\n    }\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.minLon_ && cnt++ < maxLines) {\n        lon = Math.max(lon - interval, this.minLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    if (wrapX) {\n      while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    } else {\n      while (lon != this.maxLon_ && cnt++ < maxLines) {\n        lon = Math.min(lon + interval, this.maxLon_);\n        idx = this.addMeridian_(\n          lon,\n          minLat,\n          maxLat,\n          squaredTolerance,\n          extent,\n          idx,\n        );\n      }\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(\n        lat,\n        minLon,\n        maxLon,\n        squaredTolerance,\n        extent,\n        idx,\n      );\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  getInterval_(resolution) {\n    const centerLon = this.projectionCenterLonLat_[0];\n    const centerLat = this.projectionCenterLonLat_[1];\n    let interval = -1;\n    const target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    const p1 = [];\n    /** @type {Array<number>} **/\n    const p2 = [];\n    for (let i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      const delta = clamp(this.intervals_[i] / 2, 0, 90);\n      // Don't attempt to transform latitudes beyond the poles!\n      const clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n      p1[0] = centerLon - delta;\n      p1[1] = clampedLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = clampedLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  }\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getMeridian_(lon, minLat, maxLat, squaredTolerance, index) {\n    const flatCoordinates = meridian(\n      lon,\n      minLat,\n      maxLat,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n      this.meridians_[index] = lineString;\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  getMeridianPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let bottom = 1;\n    let top = flatCoordinates.length - 1;\n    if (flatCoordinates[bottom] > flatCoordinates[top]) {\n      bottom = top;\n      top = 1;\n    }\n    const clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n    const clampedTop = Math.min(extent[3], flatCoordinates[top]);\n    const lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom,\n      clampedTop,\n    );\n    const coordinate0 =\n      flatCoordinates[bottom - 1] +\n      ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n        (lat - flatCoordinates[bottom])) /\n        (flatCoordinates[top] - flatCoordinates[bottom]);\n    const coordinate = [coordinate0, lat];\n    const point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  getMeridians() {\n    return this.meridians_;\n  }\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  getParallel_(lat, minLon, maxLon, squaredTolerance, index) {\n    const flatCoordinates = parallel(\n      lat,\n      minLon,\n      maxLon,\n      this.projection_,\n      squaredTolerance,\n    );\n    let lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, 'XY');\n    } else {\n      lineString.setFlatCoordinates('XY', flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  }\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  getParallelPoint_(lineString, extent, index) {\n    const flatCoordinates = lineString.getFlatCoordinates();\n    let left = 0;\n    let right = flatCoordinates.length - 2;\n    if (flatCoordinates[left] > flatCoordinates[right]) {\n      left = right;\n      right = 0;\n    }\n    const clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n    const clampedRight = Math.min(extent[2], flatCoordinates[right]);\n    const lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft,\n      clampedRight,\n    );\n    const coordinate1 =\n      flatCoordinates[left + 1] +\n      ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n        (lon - flatCoordinates[left])) /\n        (flatCoordinates[right] - flatCoordinates[left]);\n    const coordinate = [lon, coordinate1];\n    const point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n    return point;\n  }\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  getParallels() {\n    return this.parallels_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateProjectionInfo_(projection) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const worldExtent = projection.getWorldExtent();\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    // If the world extent crosses the dateline define a custom transform to\n    // return longitudes which wrap the dateline\n\n    const toLonLatTransform = getTransform(projection, epsg4326Projection);\n    if (this.minLon_ < this.maxLon_) {\n      this.toLonLatTransform_ = toLonLatTransform;\n    } else {\n      const split = this.minLon_ + this.maxLon_ / 2;\n      this.maxLon_ += 360;\n      this.toLonLatTransform_ = function (coordinates, output, dimension) {\n        dimension = dimension || 2;\n        const lonLatCoordinates = toLonLatTransform(\n          coordinates,\n          output,\n          dimension,\n        );\n        for (let i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n          if (lonLatCoordinates[i] < split) {\n            lonLatCoordinates[i] += 360;\n          }\n        }\n        return lonLatCoordinates;\n      };\n    }\n\n    // Transform the extent to get the limits of the view projection extent\n    // which should be available to the graticule\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n    const worldExtentP = applyTransform(\n      [this.minLon_, this.minLat_, this.maxLon_, this.maxLat_],\n      this.fromLonLatTransform_,\n      undefined,\n      8,\n    );\n\n    this.minX_ = worldExtentP[0];\n    this.maxX_ = worldExtentP[2];\n    this.minY_ = worldExtentP[1];\n    this.maxY_ = worldExtentP[3];\n\n    // Determine the view projection coordinates of the extremities of the world extent\n    // as these may lie inside a view extent (for example the pole in a polar projection)\n\n    this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n    this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n    this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n    this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n\n    // Transform the projection center to lon lat\n    // Some projections may have a void area at the poles\n    // so replace any NaN latitudes with the min or max value closest to a pole\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(\n      getCenter(projection.getExtent()),\n    );\n    if (isNaN(this.projectionCenterLonLat_[1])) {\n      this.projectionCenterLonLat_[1] =\n        Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n          ? this.maxLat_\n          : this.minLat_;\n    }\n\n    this.projection_ = projection;\n  }\n}\n\nexport default Graticule;\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext|null} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes,\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>|null}\n */\nlet supportedExtensions = null;\n\n/**\n * @return {Array<string>|null} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array|null}\n     */\n    this.array_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type_ = type;\n\n    assert(\n      type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER,\n      'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage_ = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array_ = new (getArrayClassForType(this.type_))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array_ = getArrayClassForType(this.type_).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array_ = new (getArrayClassForType(this.type_))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array|null} Array.\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage_;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array_ ? this.array_.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n    this.depthBuffer_ = gl.createRenderbuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER,\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER,\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW,\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position',\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize',\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity',\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image',\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.getDepthBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data,\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0,\n      );\n\n      gl.renderbufferStorage(\n        gl.RENDERBUFFER,\n        gl.DEPTH_COMPONENT16,\n        textureSize[0],\n        textureSize[1],\n      );\n      gl.framebufferRenderbuffer(\n        gl.FRAMEBUFFER,\n        gl.DEPTH_ATTACHMENT,\n        gl.RENDERBUFFER,\n        this.depthBuffer_,\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null,\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clearDepth(1.0);\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.disable(gl.DEPTH_TEST);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0,\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer\n   */\n  getDepthBuffer() {\n    return this.depthBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data),\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  ROTATION: 'u_rotation',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n  HIT_DETECTION: 'u_hitDetection',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|WebGLTexture|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {WebGLRenderingContext} context The context of this canvas.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {WebGLRenderingContext} The canvas.\n */\nfunction getOrCreateContext(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    const context = getContext(canvas);\n    cacheItem = {users: 0, context};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.context;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const gl = cacheItem.context;\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n  const canvas = gl.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getOrCreateContext(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type boolean\n     */\n    this.needsToBeRecreated_ = false;\n\n    const canvas = this.gl_.canvas;\n\n    canvas.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            }),\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    this.addUniforms(uniforms);\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  addUniforms(uniforms) {\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const canvas = this.gl_.canvas;\n    canvas.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_,\n    );\n    canvas.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_,\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDraw(frameState, disableAlphaBlend, enableDepth) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   * @param {boolean} [enableDepth] If true, enables depth testing.\n   */\n  prepareDrawToRenderTarget(\n    frameState,\n    renderTarget,\n    disableAlphaBlend,\n    enableDepth,\n  ) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderTarget.getDepthbuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.depthRange(0.0, 1.0);\n    gl.clearDepth(1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n    if (enableDepth) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthFunc(gl.LEQUAL);\n    } else {\n      gl.disable(gl.DEPTH_TEST);\n    }\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose,\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1],\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return /** @type {HTMLCanvasElement} */ (this.gl_.canvas);\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001,\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution,\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n    this.setUniformFloatValue(DefaultUniform.ROTATION, rotation);\n  }\n\n  /**\n   * Sets the `u_hitDetection` uniform.\n   * @param {boolean} enabled Whether to enable the hit detection code path\n   */\n  applyHitDetectionUniform(enabled) {\n    const loc = this.getUniformLocation(DefaultUniform.HIT_DETECTION);\n    this.getGL().uniform1i(loc, enabled ? 1 : 0);\n\n    // hit detection uses a fixed pixel ratio\n    if (enabled) {\n      this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, 0.5);\n    }\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData ||\n        value instanceof WebGLTexture\n      ) {\n        // create a texture & put data\n        if (value instanceof WebGLTexture && !uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = value;\n        } else if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        this.bindTexture(uniform.texture, textureSlot, uniform.name);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (\n          !(value instanceof WebGLTexture) &&\n          imageReady &&\n          uniform.prevValue !== value\n        ) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value,\n          );\n        }\n        textureSlot++;\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value),\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3],\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER,\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER,\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader,\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program,\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1],\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders or is not used; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset,\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @param {WebGLContextEvent} event The context loss event.\n   * @private\n   */\n  handleWebGLContextLost(event) {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n\n    event.preventDefault();\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {\n    this.needsToBeRecreated_ = true;\n  }\n\n  /**\n   * Returns whether this helper needs to be recreated, as the context was lost and then restored.\n   * @return {boolean} Whether this helper needs to be recreated.\n   */\n  needsToBeRecreated() {\n    return this.needsToBeRecreated_;\n  }\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null,\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerProperty from '../../layer/Property.js';\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(layer, options) {\n    super(layer);\n\n    options = options || {};\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform is only\n     * set before dispatching rendering events.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @private\n     */\n    this.postProcesses_ = options.postProcesses;\n\n    /**\n     * @private\n     */\n    this.uniforms_ = options.uniforms;\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper;\n\n    layer.addChangeListener(LayerProperty.MAP, this.removeHelper.bind(this));\n\n    this.dispatchPreComposeEvent = this.dispatchPreComposeEvent.bind(this);\n    this.dispatchPostComposeEvent = this.dispatchPostComposeEvent.bind(this);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPreComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.PRECOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.PRECOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The WebGL rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  dispatchPostComposeEvent(context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(RenderEventType.POSTCOMPOSE)) {\n      const event = new RenderEvent(\n        RenderEventType.POSTCOMPOSE,\n        undefined,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * Reset options (only handles uniforms).\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    this.uniforms_ = options.uniforms;\n    if (this.helper) {\n      this.helper.setUniforms(this.uniforms_);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  removeHelper() {\n    if (this.helper) {\n      this.helper.dispose();\n      delete this.helper;\n    }\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    if (this.getLayer().getRenderSource()) {\n      let incrementGroup = true;\n      let groupNumber = -1;\n      let className;\n      for (let i = 0, ii = frameState.layerStatesArray.length; i < ii; i++) {\n        const layer = frameState.layerStatesArray[i].layer;\n        const renderer = layer.getRenderer();\n        if (!(renderer instanceof WebGLLayerRenderer)) {\n          incrementGroup = true;\n          continue;\n        }\n        const layerClassName = layer.getClassName();\n        if (incrementGroup || layerClassName !== className) {\n          groupNumber += 1;\n          incrementGroup = false;\n        }\n        className = layerClassName;\n        if (renderer === this) {\n          break;\n        }\n      }\n\n      const canvasCacheKey =\n        'map/' + frameState.mapId + '/group/' + groupNumber;\n\n      if (\n        !this.helper ||\n        !this.helper.canvasCacheKeyMatches(canvasCacheKey) ||\n        this.helper.needsToBeRecreated()\n      ) {\n        this.removeHelper();\n\n        this.helper = new WebGLHelper({\n          postProcesses: this.postProcesses_,\n          uniforms: this.uniforms_,\n          canvasCacheKey: canvasCacheKey,\n        });\n\n        if (className) {\n          this.helper.getCanvas().className = className;\n        }\n\n        this.afterHelperCreated();\n      }\n    }\n\n    return this.prepareFrameInternal(frameState);\n  }\n\n  /**\n   * @protected\n   */\n  afterHelperCreated() {}\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @protected\n   */\n  prepareFrameInternal(frameState) {\n    return true;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.removeHelper();\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      composeTransform(\n        this.inversePixelTransform_,\n        0,\n        0,\n        frameState.pixelRatio,\n        -frameState.pixelRatio,\n        0,\n        0,\n        -frameState.size[1],\n      );\n\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform_,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {WebGLRenderingContext} context The rendering context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.depthbuffer_ = gl.createRenderbuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_,\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @return {WebGLRenderbuffer} Depth buffer of the render target\n   */\n  getDepthbuffer() {\n    return this.depthbuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0,\n    );\n\n    gl.bindRenderbuffer(gl.RENDERBUFFER, this.depthbuffer_);\n    gl.renderbufferStorage(\n      gl.RENDERBUFFER,\n      gl.DEPTH_COMPONENT16,\n      size[0],\n      size[1],\n    );\n    gl.framebufferRenderbuffer(\n      gl.FRAMEBUFFER,\n      gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER,\n      this.depthbuffer_,\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {WebGLWorkerMessageType} from '../../render/webgl/constants.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {colorDecodeId, colorEncodeId} from '../../render/webgl/utils.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {fromUserCoordinate, getUserProjection} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {getWorldParameters} from './worldUtil.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {boolean} [hitDetectionEnabled] Whether shader is hit detection aware.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot and `u_opacity` is reserved for the layer opacity.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder~ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n * The following uniform is used for the layer opacity: `u_opacity`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW,\n    );\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ = options.hitDetectionEnabled ?? true;\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_prop_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ];\n\n    if (this.hitDetectionEnabled_) {\n      this.attributes.push({\n        name: 'a_prop_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      });\n      this.attributes.push({\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      });\n    }\n    this.attributes.push(...customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_;\n\n    /**\n     * Keep track of latest message sent to worker\n     * @type {number}\n     * @private\n     */\n    this.lastSentId = 0;\n\n    /**\n     * @private\n     */\n    this.worker_ = createWebGLWorker();\n\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       */\n      (event) => {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_POINT_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n          this.helper.flushBufferData(this.verticesBuffer_);\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_,\n          );\n          this.renderInstructions_ = new Float32Array(\n            event.data.renderInstructions,\n          );\n          if (received.id === this.lastSentId) {\n            this.ready = true;\n          }\n          this.getLayer().changed();\n        }\n      },\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this,\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this,\n      ),\n    ];\n    source.forEachFeature((feature) => {\n      this.featureCache_[getUid(feature)] = {\n        feature: feature,\n        properties: feature.getProperties(),\n        geometry: feature.getGeometry(),\n      };\n      this.featureCount_++;\n    });\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      this.hitRenderTarget_ = new WebGLRenderTarget(this.helper);\n    }\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n    const [startWorld, endWorld, worldWidth] = getWorldParameters(\n      frameState,\n      this.getLayer(),\n    );\n\n    // draw the normal canvas\n    this.renderWorlds(frameState, false, startWorld, endWorld, worldWidth);\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    if (this.hitDetectionEnabled_) {\n      // draw the hit buffer\n      this.renderWorlds(frameState, true, startWorld, endWorld, worldWidth);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(gl, frameState);\n\n    const canvas = this.helper.getCanvas();\n    return canvas;\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    this.helper.useProgram(this.program_, frameState);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    const userProjection = getUserProjection();\n\n    const baseInstructionLength = this.hitDetectionEnabled_ ? 7 : 2; // see below\n    const singleInstructionLength =\n      baseInstructionLength + this.customAttributes.length;\n    const totalSize = singleInstructionLength * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalSize\n    ) {\n      this.renderInstructions_ = new Float32Array(totalSize);\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let idx = -1;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== 'Point') {\n        continue;\n      }\n      if (userProjection) {\n        const userCoords = fromUserCoordinate(\n          geometry.getFlatCoordinates(),\n          frameState.viewState.projection,\n        );\n        tmpCoords[0] = userCoords[0];\n        tmpCoords[1] = userCoords[1];\n      } else {\n        tmpCoords[0] = geometry.getFlatCoordinates()[0];\n        tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      }\n      applyTransform(projectionTransform, tmpCoords);\n\n      this.renderInstructions_[++idx] = tmpCoords[0];\n      this.renderInstructions_[++idx] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        const hitColor = colorEncodeId(idx + 5, tmpColor);\n        this.renderInstructions_[++idx] = hitColor[0];\n        this.renderInstructions_[++idx] = hitColor[1];\n        this.renderInstructions_[++idx] = hitColor[2];\n        this.renderInstructions_[++idx] = hitColor[3];\n        this.renderInstructions_[++idx] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        const value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties,\n        );\n        this.renderInstructions_[++idx] = value;\n      }\n    }\n\n    /** @type {import('../../render/webgl/constants.js').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      id: ++this.lastSentId,\n      type: WebGLWorkerMessageType.GENERATE_POINT_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesSize: singleInstructionLength - 2,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.ready = false;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    assert(\n      this.hitDetectionEnabled_,\n      '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has been disabled using the `disableHitDetection: true` option.',\n    );\n    if (!this.renderInstructions_ || !this.hitDetectionEnabled_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(),\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.renderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the world, either to the main framebuffer or to the hit framebuffer\n   * @param {import(\"../../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} forHitDetection whether the rendering is for hit detection\n   * @param {number} startWorld the world to render in the first iteration\n   * @param {number} endWorld the last world to render\n   * @param {number} worldWidth the width of the worlds being rendered\n   */\n  renderWorlds(frameState, forHitDetection, startWorld, endWorld, worldWidth) {\n    let world = startWorld;\n\n    this.helper.useProgram(this.program_, frameState);\n\n    if (forHitDetection) {\n      this.hitRenderTarget_.setSize([\n        Math.floor(frameState.size[0] / 2),\n        Math.floor(frameState.size[1] / 2),\n      ]);\n      this.helper.prepareDrawToRenderTarget(\n        frameState,\n        this.hitRenderTarget_,\n        true,\n      );\n    }\n\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n    this.helper.enableAttributes(this.attributes);\n\n    do {\n      this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n      translateTransform(this.currentTransform_, world * worldWidth, 0);\n      multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n      this.helper.applyUniforms(frameState);\n      this.helper.applyHitDetectionUniform(forHitDetection);\n      const renderCount = this.indicesBuffer_.getSize();\n      this.helper.drawElements(0, renderCount);\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n\n  renderDeclutter() {}\n}\n\nexport default WebGLPointsLayerRenderer;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\";function r(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function x(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new Error(t)}(0!==n,\\\"Transformation matrix cannot be inverted\\\");const x=t[0],i=t[1],u=t[2],o=t[3],f=t[4],s=t[5];return e[0]=o/n,e[1]=-i/n,e[2]=-u/n,e[3]=x/n,e[4]=(u*s-o*f)/n,e[5]=-(x*s-i*f)/n,e}function i(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var u={exports:{}};function o(e,t,n){n=n||2;var r,x,i,u,o,s,l,v=t&&t.length,h=v?t[0]*n:e.length,c=f(e,0,h,n,!0),g=[];if(!c||c.next===c.prev)return g;if(v&&(c=function(e,t,n,r){var x,i,u,o=[];for(x=0,i=t.length;x<i;x++)(u=f(e,t[x]*r,x<i-1?t[x+1]*r:e.length,r,!1))===u.next&&(u.steiner=!0),o.push(d(u));for(o.sort(p),x=0;x<o.length;x++)n=y(o[x],n);return n}(e,t,c,n)),e.length>80*n){r=i=e[0],x=u=e[1];for(var b=n;b<h;b+=n)(o=e[b])<r&&(r=o),(s=e[b+1])<x&&(x=s),o>i&&(i=o),s>u&&(u=s);l=0!==(l=Math.max(i-r,u-x))?32767/l:0}return a(c,g,n,r,x,l,0),g}function f(e,t,n,r,x){var i,u;if(x===O(e,t,n,r)>0)for(i=t;i<n;i+=r)u=P(i,e[i],e[i+1],u);else for(i=n-r;i>=t;i-=r)u=P(i,e[i],e[i+1],u);return u&&m(u,u.next)&&(B(u),u=u.next),u}function s(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!m(r,r.next)&&0!==w(r.prev,r,r.next))r=r.next;else{if(B(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function a(e,t,n,r,x,i,u){if(e){!u&&i&&function(e,t,n,r){var x=e;do{0===x.z&&(x.z=b(x.x,x.y,t,n,r)),x.prevZ=x.prev,x.nextZ=x.next,x=x.next}while(x!==e);x.prevZ.nextZ=null,x.prevZ=null,function(e){var t,n,r,x,i,u,o,f,s=1;do{for(n=e,e=null,i=null,u=0;n;){for(u++,r=n,o=0,t=0;t<s&&(o++,r=r.nextZ);t++);for(f=s;o>0||f>0&&r;)0!==o&&(0===f||!r||n.z<=r.z)?(x=n,n=n.nextZ,o--):(x=r,r=r.nextZ,f--),i?i.nextZ=x:e=x,x.prevZ=i,i=x;n=r}i.nextZ=null,s*=2}while(u>1)}(x)}(e,r,x,i);for(var o,f,p=e;e.prev!==e.next;)if(o=e.prev,f=e.next,i?v(e,r,x,i):l(e))t.push(o.i/n|0),t.push(e.i/n|0),t.push(f.i/n|0),B(e),e=f.next,p=f.next;else if((e=f)===p){u?1===u?a(e=h(s(e),t,n),t,n,r,x,i,2):2===u&&c(e,t,n,r,x,i):a(s(e),t,n,r,x,i,1);break}}}function l(e){var t=e.prev,n=e,r=e.next;if(w(t,n,r)>=0)return!1;for(var x=t.x,i=n.x,u=r.x,o=t.y,f=n.y,s=r.y,a=x<i?x<u?x:u:i<u?i:u,l=o<f?o<s?o:s:f<s?f:s,v=x>i?x>u?x:u:i>u?i:u,h=o>f?o>s?o:s:f>s?f:s,c=r.next;c!==t;){if(c.x>=a&&c.x<=v&&c.y>=l&&c.y<=h&&M(x,o,i,f,u,s,c.x,c.y)&&w(c.prev,c,c.next)>=0)return!1;c=c.next}return!0}function v(e,t,n,r){var x=e.prev,i=e,u=e.next;if(w(x,i,u)>=0)return!1;for(var o=x.x,f=i.x,s=u.x,a=x.y,l=i.y,v=u.y,h=o<f?o<s?o:s:f<s?f:s,c=a<l?a<v?a:v:l<v?l:v,p=o>f?o>s?o:s:f>s?f:s,y=a>l?a>v?a:v:l>v?l:v,g=b(h,c,t,n,r),d=b(p,y,t,n,r),Z=e.prevZ,m=e.nextZ;Z&&Z.z>=g&&m&&m.z<=d;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;if(Z=Z.prevZ,m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;Z&&Z.z>=g;){if(Z.x>=h&&Z.x<=p&&Z.y>=c&&Z.y<=y&&Z!==x&&Z!==u&&M(o,a,f,l,s,v,Z.x,Z.y)&&w(Z.prev,Z,Z.next)>=0)return!1;Z=Z.prevZ}for(;m&&m.z<=d;){if(m.x>=h&&m.x<=p&&m.y>=c&&m.y<=y&&m!==x&&m!==u&&M(o,a,f,l,s,v,m.x,m.y)&&w(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function h(e,t,n){var r=e;do{var x=r.prev,i=r.next.next;!m(x,i)&&A(x,r,r.next,i)&&z(x,i)&&z(i,x)&&(t.push(x.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),B(r),B(r.next),r=e=i),r=r.next}while(r!==e);return s(r)}function c(e,t,n,r,x,i){var u=e;do{for(var o=u.next.next;o!==u.prev;){if(u.i!==o.i&&Z(u,o)){var f=F(u,o);return u=s(u,u.next),f=s(f,f.next),a(u,t,n,r,x,i,0),void a(f,t,n,r,x,i,0)}o=o.next}u=u.next}while(u!==e)}function p(e,t){return e.x-t.x}function y(e,t){var n=function(e,t){var n,r=t,x=e.x,i=e.y,u=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var o=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(o<=x&&o>u&&(u=o,n=r.x<r.next.x?r:r.next,o===x))return n}r=r.next}while(r!==t);if(!n)return null;var f,s=n,a=n.x,l=n.y,v=1/0;r=n;do{x>=r.x&&r.x>=a&&x!==r.x&&M(i<l?x:u,i,a,l,i<l?u:x,i,r.x,r.y)&&(f=Math.abs(i-r.y)/(x-r.x),z(r,e)&&(f<v||f===v&&(r.x>n.x||r.x===n.x&&g(n,r)))&&(n=r,v=f)),r=r.next}while(r!==s);return n}(e,t);if(!n)return t;var r=F(n,e);return s(r,r.next),s(n,n.next)}function g(e,t){return w(e.prev,e,t.prev)<0&&w(t.next,e,e.next)<0}function b(e,t,n,r,x){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*x|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*x|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function d(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function M(e,t,n,r,x,i,u,o){return(x-u)*(t-o)>=(e-u)*(i-o)&&(e-u)*(r-o)>=(n-u)*(t-o)&&(n-u)*(i-o)>=(x-u)*(r-o)}function Z(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&A(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,x=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&x<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(w(e.prev,e,t.prev)||w(e,t.prev,t))||m(e,t)&&w(e.prev,e,e.next)>0&&w(t.prev,t,t.next)>0)}function w(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function m(e,t){return e.x===t.x&&e.y===t.y}function A(e,t,n,r){var x=I(w(e,t,n)),i=I(w(e,t,r)),u=I(w(n,r,e)),o=I(w(n,r,t));return x!==i&&u!==o||(!(0!==x||!E(e,n,t))||(!(0!==i||!E(e,r,t))||(!(0!==u||!E(n,e,r))||!(0!==o||!E(n,t,r)))))}function E(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function I(e){return e>0?1:e<0?-1:0}function z(e,t){return w(e.prev,e,e.next)<0?w(e,t,e.next)>=0&&w(e,e.prev,t)>=0:w(e,t,e.prev)<0||w(e,e.next,t)<0}function F(e,t){var n=new _(e.i,e.x,e.y),r=new _(t.i,t.x,t.y),x=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=x,x.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function P(e,t,n,r){var x=new _(e,t,n);return r?(x.next=r.next,x.prev=r,r.next.prev=x,r.next=x):(x.prev=x,x.next=x),x}function B(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function _(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function O(e,t,n,r){for(var x=0,i=t,u=n-r;i<n;i+=r)x+=(e[u]-e[i])*(e[i+1]+e[u+1]),u=i;return x}u.exports=o,u.exports.default=o,o.deviation=function(e,t,n,r){var x=t&&t.length,i=x?t[0]*n:e.length,u=Math.abs(O(e,0,i,n));if(x)for(var o=0,f=t.length;o<f;o++){var s=t[o]*n,a=o<f-1?t[o+1]*n:e.length;u-=Math.abs(O(e,s,a,n))}var l=0;for(o=0;o<r.length;o+=3){var v=r[o]*n,h=r[o+1]*n,c=r[o+2]*n;l+=Math.abs((e[v]-e[c])*(e[h+1]-e[v+1])-(e[v]-e[h])*(e[c+1]-e[v+1]))}return 0===u&&0===l?0:Math.abs((l-u)/u)},o.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,x=0;x<e.length;x++){for(var i=0;i<e[x].length;i++)for(var u=0;u<t;u++)n.vertices.push(e[x][i][u]);x>0&&(r+=e[x-1].length,n.holes.push(r))}return n};var N=i(u.exports);const R=[],S={vertexPosition:0,indexPosition:0};function T(e,t,n,r,x){e[t+0]=n,e[t+1]=r,e[t+2]=x}function U(e,t,n,r,x,i){const u=3+x,o=e[t+0],f=e[t+1],s=R;s.length=x;for(let n=0;n<s.length;n++)s[n]=e[t+2+n];let a=i?i.vertexPosition:0,l=i?i.indexPosition:0;const v=a/u;return T(n,a,o,f,0),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,1),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,2),s.length&&n.set(s,a+3),a+=u,T(n,a,o,f,3),s.length&&n.set(s,a+3),a+=u,r[l++]=v,r[l++]=v+1,r[l++]=v+3,r[l++]=v+1,r[l++]=v+2,r[l++]=v+3,S.vertexPosition=a,S.indexPosition=l,S}function k(e,t,n,x,i,u,o,f,s,a,l){const v=8+f.length,h=u.length/v,c=[e[t+0],e[t+1]],p=[e[n],e[n+1]],y=r(s,[...c]),g=r(s,[...p]);function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),x=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-x[1],x[0]],u=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),o=[(n[0]-e[0])/u,(n[1]-e[1])/u],f=0===r||0===u?0:Math.acos((s=o[0]*x[0]+o[1]*x[1],a=-1,l=1,Math.min(Math.max(s,a),l)));var s,a,l;return o[0]*i[0]+o[1]*i[1]>0?f:2*Math.PI-f}let d=-1,M=-1,Z=l;const w=null!==i;if(null!==x){d=b(y,g,r(s,[...[e[x],e[x+1]]])),Math.cos(d)<=.985&&(Z+=Math.tan((d-Math.PI)/2))}if(w){M=b(g,y,r(s,[...[e[i],e[i+1]]])),Math.cos(M)<=.985&&(Z+=Math.tan((Math.PI-M)/2))}function m(e,t){return 0===t?1e4*e:Math.sign(t)*(1e4*e+Math.abs(t))}return u.push(c[0],c[1],p[0],p[1],d,M,a,m(0,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(1,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(2,l)),u.push(...f),u.push(c[0],c[1],p[0],p[1],d,M,a,m(3,l)),u.push(...f),o.push(h,h+1,h+2,h+1,h+3,h+2),{length:a+Math.sqrt((g[0]-y[0])*(g[0]-y[0])+(g[1]-y[1])*(g[1]-y[1])),angle:Z}}function G(e,t,n,r,x){const i=2+x;let u=t;const o=e.slice(u,u+x);u+=x;const f=e[u++];let s=0;const a=new Array(f-1);for(let t=0;t<f;t++)s+=e[u++],t<f-1&&(a[t]=s);const l=e.slice(u,u+2*s),v=N(l,a,2);for(let e=0;e<v.length;e++)r.push(v[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...o);return u+2*s}const j=self;j.onmessage=r=>{const i=r.data;switch(i.type){case t:{const e=3,t=2,n=i.customAttributesSize,r=t+n,x=new Float32Array(i.renderInstructions),u=x.length/r,o=4*u*(n+e),f=new Uint32Array(6*u),s=new Float32Array(o);let a;for(let e=0;e<x.length;e+=r)a=U(x,e,s,f,n,a);const l=Object.assign({vertexBuffer:s.buffer,indexBuffer:f.buffer,renderInstructions:x.buffer},i);j.postMessage(l,[s.buffer,f.buffer,x.buffer]);break}case n:{const e=[],t=[],n=i.customAttributesSize,r=2,u=new Float32Array(i.renderInstructions);let o=0;const f=[1,0,0,1,0,0];let s,a;for(x(f,i.renderInstructionsTransform);o<u.length;){a=Array.from(u.slice(o,o+n)),o+=n,s=u[o++];const x=o,i=o+(s-1)*r,l=u[x]===u[i]&&u[x+1]===u[i+1];let v=0,h=0;for(let n=0;n<s-1;n++){let c=null;n>0?c=o+(n-1)*r:l&&(c=i-r);let p=null;n<s-2?p=o+(n+2)*r:l&&(p=x+r);const y=k(u,o+n*r,o+(n+1)*r,c,p,e,t,a,f,v,h);v=y.length,h=y.angle}o+=s*r}const l=Uint32Array.from(t),v=Float32Array.from(e),h=Object.assign({vertexBuffer:v.buffer,indexBuffer:l.buffer,renderInstructions:u.buffer},i);j.postMessage(h,[v.buffer,l.buffer,u.buffer]);break}case e:{const e=[],t=[],n=i.customAttributesSize,r=new Float32Array(i.renderInstructions);let x=0;for(;x<r.length;)x=G(r,x,e,t,n);const u=Uint32Array.from(t),o=Float32Array.from(e),f=Object.assign({vertexBuffer:o.buffer,indexBuffer:u.buffer,renderInstructions:r.buffer},i);j.postMessage(f,[o.buffer,u.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n","import {getWidth} from '../../extent.js';\n\n/**\n * Compute world params\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {any} layer The layer\n * @return {Array<number>} The world start, end and width.\n */\nexport function getWorldParameters(frameState, layer) {\n  const projection = frameState.viewState.projection;\n\n  const vectorSource = layer.getSource();\n  const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n  const projectionExtent = projection.getExtent();\n\n  const extent = frameState.extent;\n  const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n  const endWorld = multiWorld\n    ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n    : 1;\n\n  const startWorld = multiWorld\n    ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n    : 0;\n\n  return [startWorld, endWorld, worldWidth];\n}\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture|null}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data,\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n    this.paletteTextures_ = options.paletteTextures || [];\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_,\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_,\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName,\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform),\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution,\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution,\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate,\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution,\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  PATTERN_ORIGIN: 'u_patternOrigin',\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value; zoom level zero has a depth value of 0.5, and increasing values\n * have a depth trending towards 0\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z,\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload,\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection,\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z,\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} If returns false, tile mask rendering will be skipped\n   * @protected\n   */\n  beforeTilesMaskRender(frameState) {\n    return false;\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha,\n  ) {}\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {number} tileZ Tile Z\n   * @param {import(\"../../extent.js\").Extent} extent Render extent\n   * @param {number} depth Depth\n   * @protected\n   */\n  renderTileMask(tileRepresentation, tileZ, extent, depth) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid,\n  ) {\n    if (!tileRepresentation.ready) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter),\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter,\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha,\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload,\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.ready) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n\n    const renderTileMask = this.beforeTilesMaskRender(frameState);\n\n    if (renderTileMask) {\n      for (let j = 0, jj = zs.length; j < jj; ++j) {\n        const tileZ = zs[j];\n        for (const tileRepresentation of representationsByZ[tileZ]) {\n          const tileCoord = tileRepresentation.tile.tileCoord;\n          const tileCoordKey = getTileCoordKey(tileCoord);\n          // do not render the tile mask if alpha < 1\n          if (tileCoordKey in alphaLookup) {\n            continue;\n          }\n          const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n          this.renderTileMask(\n            /** @type {TileRepresentation} */ (tileRepresentation),\n            tileZ,\n            tileExtent,\n            depthForZ(tileZ),\n          );\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid,\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent,\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.ready &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ,\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose(),\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  StringType,\n  computeGeometryType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `(${compiledArgs[1]} * vec4(vec3(${compiledArgs[0]} / 255.0), 1.0))`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * Class for generating shaders from literal style objects\n * @module ol/webgl/ShaderBuilder\n */\nimport {LINESTRING_ANGLE_COSINE_CUTOFF} from '../render/webgl/utils.js';\nimport {colorToGlsl, numberToGlsl, stringToGlsl} from '../expr/gpu.js';\nimport {createDefaultStyle} from '../style/flat.js';\n\nexport const COMMON_HEADER = `#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 u_projectionMatrix;\nuniform mat4 u_screenToWorldMatrix;\nuniform vec2 u_viewportSizePx;\nuniform float u_pixelRatio;\nuniform float u_globalAlpha;\nuniform float u_time;\nuniform float u_zoom;\nuniform float u_resolution;\nuniform float u_rotation;\nuniform vec4 u_renderExtent;\nuniform vec2 u_patternOrigin;\nuniform float u_depth;\nuniform mediump int u_hitDetection;\n\nconst float PI = 3.141592653589793238;\nconst float TWO_PI = 2.0 * PI;\n\n// this used to produce an alpha-premultiplied color from a texture\nvec4 samplePremultiplied(sampler2D sampler, vec2 texCoord) {\n  vec4 color = texture2D(sampler, texCoord);\n  return vec4(color.rgb * color.a, color.a);\n}\n`;\n\nconst DEFAULT_STYLE = createDefaultStyle();\n\n/**\n * @typedef {Object} VaryingDescription\n * @property {string} name Varying name, as will be declared in the header.\n * @property {string} type Varying type, either `float`, `vec2`, `vec4`...\n * @property {string} expression Expression which will be assigned to the varying in the vertex shader, and\n * passed on to the fragment shader.\n */\n\n/**\n * @classdesc\n * This class implements a classic builder pattern for generating many different types of shaders.\n * Methods can be chained, e. g.:\n *\n * ```js\n * const shader = new ShaderBuilder()\n *   .addVarying('v_width', 'float', 'a_width')\n *   .addUniform('u_time')\n *   .setColorExpression('...')\n *   .setSymbolSizeExpression('...')\n *   .getSymbolFragmentShader();\n * ```\n */\nexport class ShaderBuilder {\n  constructor() {\n    /**\n     * Uniforms; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.uniforms_ = [];\n\n    /**\n     * Attributes; these will be declared in the header (should include the type).\n     * @type {Array<string>}\n     * @private\n     */\n    this.attributes_ = [];\n\n    /**\n     * Varyings with a name, a type and an expression.\n     * @type {Array<VaryingDescription>}\n     * @private\n     */\n    this.varyings_ = [];\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasSymbol_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolSizeExpression_ = `vec2(${numberToGlsl(\n      DEFAULT_STYLE['circle-radius'],\n    )} + ${numberToGlsl(DEFAULT_STYLE['circle-stroke-width'] * 0.5)})`;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolRotationExpression_ = '0.0';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolOffsetExpression_ = 'vec2(0.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.symbolColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['circle-fill-color']),\n    );\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.texCoordExpression_ = 'vec4(0.0, 0.0, 1.0, 1.0)';\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.discardExpression_ = 'false';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.symbolRotateWithView_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasStroke_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeWidthExpression_ = numberToGlsl(DEFAULT_STYLE['stroke-width']);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.strokeColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['stroke-color']),\n    );\n\n    /**\n     * @private\n     */\n    this.strokeOffsetExpression_ = '0.';\n\n    /**\n     * @private\n     */\n    this.strokeCapExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeJoinExpression_ = stringToGlsl('round');\n\n    /**\n     * @private\n     */\n    this.strokeMiterLimitExpression_ = '10.';\n\n    /**\n     * @private\n     */\n    this.strokeDistanceFieldExpression_ = '-1000.';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hasFill_ = false;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.fillColorExpression_ = colorToGlsl(\n      /** @type {string} */ (DEFAULT_STYLE['fill-color']),\n    );\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.vertexShaderFunctions_ = [];\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.fragmentShaderFunctions_ = [];\n  }\n\n  /**\n   * Adds a uniform accessible in both fragment and vertex shaders.\n   * The given name should include a type, such as `sampler2D u_texture`.\n   * @param {string} name Uniform name\n   * @return {ShaderBuilder} the builder object\n   */\n  addUniform(name) {\n    this.uniforms_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds an attribute accessible in the vertex shader, read from the geometry buffer.\n   * The given name should include a type, such as `vec2 a_position`.\n   * @param {string} name Attribute name\n   * @return {ShaderBuilder} the builder object\n   */\n  addAttribute(name) {\n    this.attributes_.push(name);\n    return this;\n  }\n\n  /**\n   * Adds a varying defined in the vertex shader and accessible from the fragment shader.\n   * The type and expression of the varying have to be specified separately.\n   * @param {string} name Varying name\n   * @param {'float'|'vec2'|'vec3'|'vec4'} type Type\n   * @param {string} expression Expression used to assign a value to the varying.\n   * @return {ShaderBuilder} the builder object\n   */\n  addVarying(name, type, expression) {\n    this.varyings_.push({\n      name: name,\n      type: type,\n      expression: expression,\n    });\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the size of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolSizeExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolSizeExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol size expression\n   */\n  getSymbolSizeExpression() {\n    return this.symbolSizeExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the rotation of the shape.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `float` value in radians.\n   * @param {string} expression Size expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotationExpression(expression) {\n    this.symbolRotationExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to compute the offset of the symbol from the point center.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec2` value.\n   * @param {string} expression Offset expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolOffsetExpression(expression) {\n    this.symbolOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol offset expression\n   */\n  getSymbolOffsetExpression() {\n    return this.symbolOffsetExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the color of the shape.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Color expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolColorExpression(expression) {\n    this.hasSymbol_ = true;\n    this.symbolColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current symbol color expression\n   */\n  getSymbolColorExpression() {\n    return this.symbolColorExpression_;\n  }\n\n  /**\n   * Sets an expression to compute the texture coordinates of the vertices.\n   * This expression can use all the uniforms and attributes available\n   * in the vertex shader, and should evaluate to a `vec4` value.\n   * @param {string} expression Texture coordinate expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setTextureCoordinateExpression(expression) {\n    this.texCoordExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * Sets an expression to determine whether a fragment (pixel) should be discarded,\n   * i.e. not drawn at all.\n   * This expression can use all the uniforms, varyings and attributes available\n   * in the fragment shader, and should evaluate to a `bool` value (it will be\n   * used in an `if` statement)\n   * @param {string} expression Fragment discard expression\n   * @return {ShaderBuilder} the builder object\n   */\n  setFragmentDiscardExpression(expression) {\n    this.discardExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fragment discard expression\n   */\n  getFragmentDiscardExpression() {\n    return this.discardExpression_;\n  }\n\n  /**\n   * Sets whether the symbols should rotate with the view or stay aligned with the map.\n   * Note: will only be used for point geometry shaders.\n   * @param {boolean} rotateWithView Rotate with view\n   * @return {ShaderBuilder} the builder object\n   */\n  setSymbolRotateWithView(rotateWithView) {\n    this.symbolRotateWithView_ = rotateWithView;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke width expression, returning value in pixels\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeWidthExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeWidthExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `vec4`: can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeColorExpression(expression) {\n    this.hasStroke_ = true;\n    this.strokeColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current stroke color expression\n   */\n  getStrokeColorExpression() {\n    return this.strokeColorExpression_;\n  }\n\n  /**\n   * @param {string} expression Stroke color expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeOffsetExpression(expression) {\n    this.strokeOffsetExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line cap expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeCapExpression(expression) {\n    this.strokeCapExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke line join expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeJoinExpression(expression) {\n    this.strokeJoinExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke miter limit expression, evaluate to `float`\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeMiterLimitExpression(expression) {\n    this.strokeMiterLimitExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Stroke distance field expression, evaluate to `float`\n   * This can override the default distance field; can rely on currentLengthPx and currentRadiusPx\n   * @return {ShaderBuilder} the builder object\n   */\n  setStrokeDistanceFieldExpression(expression) {\n    this.strokeDistanceFieldExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @param {string} expression Fill color expression, evaluate to `vec4`\n   * @return {ShaderBuilder} the builder object\n   */\n  setFillColorExpression(expression) {\n    this.hasFill_ = true;\n    this.fillColorExpression_ = expression;\n    return this;\n  }\n\n  /**\n   * @return {string} The current fill color expression\n   */\n  getFillColorExpression() {\n    return this.fillColorExpression_;\n  }\n\n  addVertexShaderFunction(code) {\n    if (this.vertexShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.vertexShaderFunctions_.push(code);\n  }\n  addFragmentShaderFunction(code) {\n    if (this.fragmentShaderFunctions_.includes(code)) {\n      return;\n    }\n    this.fragmentShaderFunctions_.push(code);\n  }\n\n  /**\n   * Generates a symbol vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolVertexShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec2 v_quadCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 pxToScreen(vec2 coordPx) {\n  vec2 scaled = coordPx / u_viewportSizePx / 0.5;\n  return scaled;\n}\n\nvec2 screenToPx(vec2 coordScreen) {\n  return (coordScreen * 0.5 + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  v_quadSizePx = ${this.symbolSizeExpression_};\n  vec2 halfSizePx = v_quadSizePx * 0.5;\n  vec2 centerOffsetPx = ${this.symbolOffsetExpression_};\n  vec2 offsetPx = centerOffsetPx;\n  if (a_index == 0.0) {\n    offsetPx -= halfSizePx;\n  } else if (a_index == 1.0) {\n    offsetPx += halfSizePx * vec2(1., -1.);\n  } else if (a_index == 2.0) {\n    offsetPx += halfSizePx;\n  } else {\n    offsetPx += halfSizePx * vec2(-1., 1.);\n  }\n  float angle = ${this.symbolRotationExpression_};\n  ${this.symbolRotateWithView_ ? 'angle += u_rotation;' : ''}\n  float c = cos(-angle);\n  float s = sin(-angle);\n  offsetPx = vec2(c * offsetPx.x - s * offsetPx.y, s * offsetPx.x + c * offsetPx.y);\n  vec4 center = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\n  gl_Position = center + vec4(pxToScreen(offsetPx), u_depth, 0.);\n  vec4 texCoord = ${this.texCoordExpression_};\n  float u = a_index == 0.0 || a_index == 3.0 ? texCoord.s : texCoord.p;\n  float v = a_index == 2.0 || a_index == 3.0 ? texCoord.t : texCoord.q;\n  v_texCoord = vec2(u, v);\n  v_prop_hitColor = a_prop_hitColor;\n  v_angle = angle;\n  c = cos(-v_angle);\n  s = sin(-v_angle);\n  centerOffsetPx = vec2(c * centerOffsetPx.x - s * centerOffsetPx.y, s * centerOffsetPx.x + c * centerOffsetPx.y); \n  v_centerPx = screenToPx(center.xy) + centerOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a symbol fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getSymbolFragmentShader() {\n    if (!this.hasSymbol_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_texCoord;\nvarying vec4 v_prop_hitColor;\nvarying vec2 v_centerPx;\nvarying float v_angle;\nvarying vec2 v_quadSizePx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvoid main(void) {\n  if (${this.discardExpression_}) { discard; }\n  vec2 coordsPx = gl_FragCoord.xy / u_pixelRatio - v_centerPx; // relative to center\n  float c = cos(v_angle);\n  float s = sin(v_angle);\n  coordsPx = vec2(c * coordsPx.x - s * coordsPx.y, s * coordsPx.x + c * coordsPx.y);\n  gl_FragColor = ${this.symbolColorExpression_};\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.05) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a stroke vertex shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeVertexShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute float a_index;\nattribute vec2 a_segmentStart;\nattribute vec2 a_segmentEnd;\nattribute float a_parameters;\nattribute float a_distance;\nattribute vec2 a_joinAngles;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvec4 pxToScreen(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return vec4(screenPos, u_depth, 1.0);\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nvec2 getJoinOffsetDirection(vec2 normalPx, float joinAngle) {\n  float halfAngle = joinAngle / 2.0;\n  float c = cos(halfAngle);\n  float s = sin(halfAngle);\n  vec2 angleBisectorNormal = vec2(s * normalPx.x + c * normalPx.y, -c * normalPx.x + s * normalPx.y);\n  float length = 1.0 / s;\n  return angleBisectorNormal * length;\n}\n\nvec2 getOffsetPoint(vec2 point, vec2 normal, float joinAngle, float offsetPx) {\n  // if on a cap or the join angle is too high, offset the line along the segment normal\n  if (cos(joinAngle) > 0.998 || isCap(joinAngle)) {\n    return point - normal * offsetPx;\n  }\n  // offset is applied along the inverted normal (positive offset goes \"right\" relative to line direction)\n  return point - getJoinOffsetDirection(normal, joinAngle) * offsetPx;\n}\n\nvoid main(void) {\n  v_angleStart = a_joinAngles.x;\n  v_angleEnd = a_joinAngles.y;\n  float vertexNumber = floor(abs(a_parameters) / 10000. + 0.5);\n  // we're reading the fractional part while keeping the sign (so -4.12 gives -0.12, 3.45 gives 0.45)\n  float angleTangentSum = fract(abs(a_parameters) / 10000.) * 10000. * sign(a_parameters);\n\n  float lineWidth = ${this.strokeWidthExpression_};\n  float lineOffsetPx = ${this.strokeOffsetExpression_};\n\n  // compute segment start/end in px with offset\n  vec2 segmentStartPx = worldToPx(a_segmentStart);\n  vec2 segmentEndPx = worldToPx(a_segmentEnd);\n  vec2 tangentPx = normalize(segmentEndPx - segmentStartPx);\n  vec2 normalPx = vec2(-tangentPx.y, tangentPx.x);\n  segmentStartPx = getOffsetPoint(segmentStartPx, normalPx, v_angleStart, lineOffsetPx),\n  segmentEndPx = getOffsetPoint(segmentEndPx, normalPx, v_angleEnd, lineOffsetPx);\n  \n  // compute current vertex position\n  float normalDir = vertexNumber < 0.5 || (vertexNumber > 1.5 && vertexNumber < 2.5) ? 1.0 : -1.0;\n  float tangentDir = vertexNumber < 1.5 ? 1.0 : -1.0;\n  float angle = vertexNumber < 1.5 ? v_angleStart : v_angleEnd;\n  vec2 joinDirection;\n  vec2 positionPx = vertexNumber < 1.5 ? segmentStartPx : segmentEndPx;\n  // if angle is too high, do not make a proper join\n  if (cos(angle) > ${LINESTRING_ANGLE_COSINE_CUTOFF} || isCap(angle)) {\n    joinDirection = normalPx * normalDir - tangentPx * tangentDir;\n  } else {\n    joinDirection = getJoinOffsetDirection(normalPx * normalDir, angle);\n  }\n  positionPx = positionPx + joinDirection * (lineWidth * 0.5 + 1.); // adding 1 pixel for antialiasing\n  gl_Position = pxToScreen(positionPx);\n\n  v_segmentStart = segmentStartPx;\n  v_segmentEnd = segmentEndPx;\n  v_width = lineWidth;\n  v_prop_hitColor = a_prop_hitColor;\n  v_distanceOffsetPx = a_distance / u_resolution - (lineOffsetPx * angleTangentSum);\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a stroke fragment shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no size or color specified\n   */\n  getStrokeFragmentShader() {\n    if (!this.hasStroke_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec2 v_segmentStart;\nvarying vec2 v_segmentEnd;\nvarying float v_angleStart;\nvarying float v_angleEnd;\nvarying float v_width;\nvarying vec4 v_prop_hitColor;\nvarying float v_distanceOffsetPx;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\n\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nbool isCap(float joinAngle) {\n  return joinAngle < -0.1;\n}\n\nfloat segmentDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  vec2 tangent = normalize(end - start);\n  vec2 normal = vec2(-tangent.y, tangent.x);\n  vec2 startToPoint = point - start;\n  return abs(dot(startToPoint, normal)) - width * 0.5;\n}\n\nfloat buttCapDistanceField(vec2 point, vec2 start, vec2 end) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  return dot(startToPoint, -tangent);\n}\n\nfloat squareCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return buttCapDistanceField(point, start, end) - width * 0.5;\n}\n\nfloat roundCapDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  float onSegment = max(0., 1000. * dot(point - start, end - start)); // this is very high when inside the segment\n  return length(point - start) - width * 0.5 - onSegment;\n}\n\nfloat roundJoinDistanceField(vec2 point, vec2 start, vec2 end, float width) {\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat bevelJoinField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  vec2 startToPoint = point - start;\n  vec2 tangent = normalize(end - start);\n  float c = cos(joinAngle * 0.5);\n  float s = sin(joinAngle * 0.5);\n  float direction = -sign(sin(joinAngle));\n  vec2 bisector = vec2(c * tangent.x - s * tangent.y, s * tangent.x + c * tangent.y);\n  float radius = width * 0.5 * s;\n  return dot(startToPoint, bisector * direction) - radius;\n}\n\nfloat miterJoinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle) {\n  if (cos(joinAngle) > ${LINESTRING_ANGLE_COSINE_CUTOFF}) { // avoid risking a division by zero\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  float miterLength = 1. / sin(joinAngle * 0.5);\n  float miterLimit = ${this.strokeMiterLimitExpression_};\n  if (miterLength > miterLimit) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  }\n  return -1000.;\n}\n\nfloat capDistanceField(vec2 point, vec2 start, vec2 end, float width, float capType) {\n   if (capType == ${stringToGlsl('butt')}) {\n    return buttCapDistanceField(point, start, end);\n  } else if (capType == ${stringToGlsl('square')}) {\n    return squareCapDistanceField(point, start, end, width);\n  }\n  return roundCapDistanceField(point, start, end, width);\n}\n\nfloat joinDistanceField(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float joinType) {\n  if (joinType == ${stringToGlsl('bevel')}) {\n    return bevelJoinField(point, start, end, width, joinAngle);\n  } else if (joinType == ${stringToGlsl('miter')}) {\n    return miterJoinDistanceField(point, start, end, width, joinAngle);\n  }\n  return roundJoinDistanceField(point, start, end, width);\n}\n\nfloat computeSegmentPointDistance(vec2 point, vec2 start, vec2 end, float width, float joinAngle, float capType, float joinType) {\n  if (isCap(joinAngle)) {\n    return capDistanceField(point, start, end, width, capType);\n  }\n  return joinDistanceField(point, start, end, width, joinAngle, joinType);\n}\n\nvoid main(void) {\n  vec2 currentPoint = gl_FragCoord.xy / u_pixelRatio;\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(currentPoint);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n\n  float segmentLength = length(v_segmentEnd - v_segmentStart);\n  vec2 segmentTangent = (v_segmentEnd - v_segmentStart) / segmentLength;\n  vec2 segmentNormal = vec2(-segmentTangent.y, segmentTangent.x);\n  vec2 startToPoint = currentPoint - v_segmentStart;\n  float currentLengthPx = max(0., min(dot(segmentTangent, startToPoint), segmentLength)) + v_distanceOffsetPx; \n  float currentRadiusPx = abs(dot(segmentNormal, startToPoint));\n  float currentRadiusRatio = dot(segmentNormal, startToPoint) * 2. / v_width;\n  vec4 color = ${this.strokeColorExpression_} * u_globalAlpha;\n  float capType = ${this.strokeCapExpression_};\n  float joinType = ${this.strokeJoinExpression_};\n  float segmentStartDistance = computeSegmentPointDistance(currentPoint, v_segmentStart, v_segmentEnd, v_width, v_angleStart, capType, joinType);\n  float segmentEndDistance = computeSegmentPointDistance(currentPoint, v_segmentEnd, v_segmentStart, v_width, v_angleEnd, capType, joinType);\n  float distance = max(\n    segmentDistanceField(currentPoint, v_segmentStart, v_segmentEnd, v_width),\n    max(segmentStartDistance, segmentEndDistance)\n  );\n  distance = max(distance, ${this.strokeDistanceFieldExpression_});\n  gl_FragColor = color * smoothstep(0.5, -0.5, distance);\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n\n  /**\n   * Generates a fill vertex shader from the builder parameters\n   *\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillVertexShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nattribute vec2 a_position;\nattribute vec4 a_prop_hitColor;\n${this.attributes_\n  .map(function (attribute) {\n    return 'attribute ' + attribute + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.vertexShaderFunctions_.join('\\n')}\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, u_depth, 1.0);\n  v_prop_hitColor = a_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return '  ' + varying.name + ' = ' + varying.expression + ';';\n  })\n  .join('\\n')}\n}`;\n  }\n\n  /**\n   * Generates a fill fragment shader from the builder parameters\n   * @return {string|null} The full shader as a string; null if no color specified\n   */\n  getFillFragmentShader() {\n    if (!this.hasFill_) {\n      return null;\n    }\n\n    return `${COMMON_HEADER}\n${this.uniforms_\n  .map(function (uniform) {\n    return 'uniform ' + uniform + ';';\n  })\n  .join('\\n')}\nvarying vec4 v_prop_hitColor;\n${this.varyings_\n  .map(function (varying) {\n    return 'varying ' + varying.type + ' ' + varying.name + ';';\n  })\n  .join('\\n')}\n${this.fragmentShaderFunctions_.join('\\n')}\nvec2 pxToWorld(vec2 pxPos) {\n  vec2 screenPos = 2.0 * pxPos / u_viewportSizePx - 1.0;\n  return (u_screenToWorldMatrix * vec4(screenPos, 0.0, 1.0)).xy;\n}\n\nvec2 worldToPx(vec2 worldPos) {\n  vec4 screenPos = u_projectionMatrix * vec4(worldPos, 0.0, 1.0);\n  return (0.5 * screenPos.xy + 0.5) * u_viewportSizePx;\n}\n\nvoid main(void) {\n  vec2 pxPos = gl_FragCoord.xy / u_pixelRatio;\n  vec2 pxOrigin = worldToPx(u_patternOrigin);\n  #ifdef GL_FRAGMENT_PRECISION_HIGH\n  vec2 worldPos = pxToWorld(pxPos);\n  if (\n    abs(u_renderExtent[0] - u_renderExtent[2]) > 0.0 && (\n      worldPos[0] < u_renderExtent[0] ||\n      worldPos[1] < u_renderExtent[1] ||\n      worldPos[0] > u_renderExtent[2] ||\n      worldPos[1] > u_renderExtent[3]\n    )\n  ) {\n    discard;\n  }\n  #endif\n  if (${this.discardExpression_}) { discard; }\n  gl_FragColor = ${this.fillColorExpression_} * u_globalAlpha;\n  if (u_hitDetection > 0) {\n    if (gl_FragColor.a < 0.1) { discard; };\n    gl_FragColor = v_prop_hitColor;\n  }\n}`;\n  }\n}\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {BaseVector<import(\"../source/Vector.js\").default, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority\n * is defined by the `zIndex` of the style and the render order of features. Higher z-index means higher\n * priority. Within the same z-index, a feature rendered before another has higher priority. Items will\n * not be decluttered against or together with items on other layers with the same `declutter` value. If\n * that is needed, use {@link import(\"../layer/Vector.js\").default} instead.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, to an image. This layer type provides great performance\n * during panning and zooming, but point symbols and texts are always rotated with the view and\n * pixels are scaled during zoom animations. For more accurate rendering of vector data, use\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorImageLayerRenderer>}\n * @api\n */\nclass VectorImageLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.imageRatio;\n    super(baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ =\n      options.imageRatio !== undefined ? options.imageRatio : 1;\n  }\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  getImageRatio() {\n    return this.imageRatio_;\n  }\n\n  createRenderer() {\n    return new CanvasVectorImageLayerRenderer(this);\n  }\n}\n\nexport default VectorImageLayer;\n","/**\n * @module ol/interaction/DblClickDragZoom\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds. *\n * @property {number} [delta=1] The zoom delta applied on move of one pixel. *\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by double tap/click then drag up/down\n * with one finger/left mouse.\n * @api\n */\nclass DblClickDragZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleDeltaByPixel_ = options.delta ? options.delta : 0.01;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDownUpSequence_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.handlingDoubleDownSequence_ = false;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.doubleTapTimeoutId_ = undefined;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent  map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence_) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence_ = handledUp;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        if (this.handlingDoubleDownSequence_) {\n          this.handlingDoubleDownSequence_ = false;\n          const handled = this.handleDownEvent(mapBrowserEvent);\n          this.handlingDownUpSequence_ = handled;\n          stopEvent = this.stopDown(handled);\n        } else {\n          stopEvent = this.stopDown(false);\n          this.waitForDblTap_();\n        }\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.down_.originalEvent;\n    const distance = touch0.clientY - touch1.clientY;\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta =\n        1 - (this.lastDistance_ - distance) * this.scaleDeltaByPixel_;\n    }\n    this.lastDistance_ = distance;\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale, bypass the resolution constraint\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    map.render();\n    view.adjustResolutionInternal(scaleDelta);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 1) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      this.down_ = mapBrowserEvent;\n      if (!this.handlingDownUpSequence_) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events zooming out.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length == 0) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      this.handlingDownUpSequence_ = false;\n      this.handlingDoubleDownSequence_ = false;\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = Object.values(this.trackedPointers_);\n    }\n  }\n\n  /**\n   * Wait the second double finger tap.\n   * @private\n   */\n  waitForDblTap_() {\n    if (this.doubleTapTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.doubleTapTimeoutId_);\n      this.doubleTapTimeoutId_ = undefined;\n    } else {\n      this.handlingDoubleDownSequence_ = true;\n      this.doubleTapTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        250,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.handlingDoubleDownSequence_ = false;\n    this.doubleTapTimeoutId_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default DblClickDragZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection,\n          ),\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file),\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {\n  always,\n  never,\n  noModifierKeys,\n  shiftKeyOnly,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../extent.js';\nimport {clamp, squaredDistance, toFixed} from '../math.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {\n  distance,\n  squaredDistance as squaredCoordinateDistance,\n} from '../coordinate.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style for sketch features. The draw interaction can have up to three sketch features, depending on the mode.\n * It will always contain a feature with a `Point` geometry that corresponds to the current cursor position.\n * If the mode is `LineString` or `Polygon`, and there is at least one drawn point, it will also contain a feature with\n * a `LineString` geometry that corresponds to the line between the already drawn points and the current cursor position.\n * If the mode is `Polygon`, and there is at least one drawn point, it will also contain a feature with a `Polygon`\n * geometry that corresponds to the polygon between the already drawn points and the current cursor position\n * (note that this polygon has only two points if only one point is drawn).\n * If the mode is `Circle`, and there is one point drawn, it will also contain a feature with a `Circle` geometry whose\n * center is the drawn point and the radius is determined by the distance between the drawn point and the cursor.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean|import(\"../events/condition.js\").Condition} [trace=false] Trace a portion of another geometry.\n * Ignored when in freehand mode.\n * @property {VectorSource} [traceSource] Source for features to trace.  If tracing is active and a `traceSource` is\n * not provided, the interaction's `source` will be used.  Tracing requires that the interaction is configured with\n * either a `traceSource` or a `source`.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n/**\n * @typedef {Object} TraceState\n * @property {boolean} active Tracing active.\n * @property {import(\"../pixel.js\").Pixel} [startPx] The initially clicked pixel location.\n * @property {Array<TraceTarget>} [targets] Targets available for tracing.\n * @property {number} [targetIndex] The index of the currently traced target.  A value of -1 indicates\n * that no trace target is active.\n */\n\n/**\n * @typedef {Object} TraceTarget\n * @property {Array<import(\"../coordinate.js\").Coordinate>} coordinates Target coordinates.\n * @property {boolean} ring The target coordinates are a linear ring.\n * @property {number} startIndex The index of first traced coordinate.  A fractional index represents an\n * edge intersection.  Index values for rings will wrap (may be negative or larger than coordinates length).\n * @property {number} endIndex The index of last traced coordinate.  Details from startIndex also apply here.\n */\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'Polygon' | 'Circle'} Mode\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n */\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend',\n  /**\n   * Triggered upon feature draw abortion\n   * @event DrawEvent#drawabort\n   * @api\n   */\n  DRAWABORT: 'drawabort',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nexport class DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n  }\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {Array<Feature>} features The candidate features.\n * @return {Array<TraceTarget>} The trace targets.\n */\nfunction getTraceTargets(coordinate, features) {\n  /**\n   * @type {Array<TraceTarget>}\n   */\n  const targets = [];\n\n  for (let i = 0; i < features.length; ++i) {\n    const feature = features[i];\n    const geometry = feature.getGeometry();\n    appendGeometryTraceTargets(coordinate, geometry, targets);\n  }\n\n  return targets;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} a One coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b Another coordinate.\n * @return {number} The squared distance between the two coordinates.\n */\nfunction getSquaredDistance(a, b) {\n  return squaredDistance(a[0], a[1], b[0], b[1]);\n}\n\n/**\n * @param {LineCoordType} coordinates The ring coordinates.\n * @param {number} index The index.  May be wrapped.\n * @return {import(\"../coordinate.js\").Coordinate} The coordinate.\n */\nfunction getCoordinate(coordinates, index) {\n  const count = coordinates.length;\n  if (index < 0) {\n    return coordinates[index + count];\n  }\n  if (index >= count) {\n    return coordinates[index - count];\n  }\n  return coordinates[index];\n}\n\n/**\n * Get the cumulative squared distance along a ring path.  The end index index may be \"wrapped\" and it may\n * be less than the start index to indicate the direction of travel.  The start and end index may have\n * a fractional part to indicate a point between two coordinates.\n * @param {LineCoordType} coordinates Ring coordinates.\n * @param {number} startIndex The start index.\n * @param {number} endIndex The end index.\n * @return {number} The cumulative squared distance along the ring path.\n */\nfunction getCumulativeSquaredDistance(coordinates, startIndex, endIndex) {\n  let lowIndex, highIndex;\n  if (startIndex < endIndex) {\n    lowIndex = startIndex;\n    highIndex = endIndex;\n  } else {\n    lowIndex = endIndex;\n    highIndex = startIndex;\n  }\n  const lowWholeIndex = Math.ceil(lowIndex);\n  const highWholeIndex = Math.floor(highIndex);\n\n  if (lowWholeIndex > highWholeIndex) {\n    // both start and end are on the same segment\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    return getSquaredDistance(start, end);\n  }\n\n  let sd = 0;\n\n  if (lowIndex < lowWholeIndex) {\n    const start = interpolateCoordinate(coordinates, lowIndex);\n    const end = getCoordinate(coordinates, lowWholeIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  if (highWholeIndex < highIndex) {\n    const start = getCoordinate(coordinates, highWholeIndex);\n    const end = interpolateCoordinate(coordinates, highIndex);\n    sd += getSquaredDistance(start, end);\n  }\n\n  for (let i = lowWholeIndex; i < highWholeIndex - 1; ++i) {\n    const start = getCoordinate(coordinates, i);\n    const end = getCoordinate(coordinates, i + 1);\n    sd += getSquaredDistance(start, end);\n  }\n\n  return sd;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {import(\"../geom/Geometry.js\").default} geometry The candidate geometry.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendGeometryTraceTargets(coordinate, geometry, targets) {\n  if (geometry instanceof LineString) {\n    appendTraceTarget(coordinate, geometry.getCoordinates(), false, targets);\n    return;\n  }\n  if (geometry instanceof MultiLineString) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], false, targets);\n    }\n    return;\n  }\n  if (geometry instanceof Polygon) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      appendTraceTarget(coordinate, coordinates[i], true, targets);\n    }\n    return;\n  }\n  if (geometry instanceof MultiPolygon) {\n    const polys = geometry.getCoordinates();\n    for (let i = 0, ii = polys.length; i < ii; ++i) {\n      const coordinates = polys[i];\n      for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n        appendTraceTarget(coordinate, coordinates[j], true, targets);\n      }\n    }\n    return;\n  }\n  if (geometry instanceof GeometryCollection) {\n    const geometries = geometry.getGeometries();\n    for (let i = 0; i < geometries.length; ++i) {\n      appendGeometryTraceTargets(coordinate, geometries[i], targets);\n    }\n    return;\n  }\n  // other types cannot be traced\n}\n\n/**\n * @typedef {Object} TraceTargetUpdateInfo\n * @property {number} index The new target index.\n * @property {number} endIndex The new segment end index.\n */\n\n/**\n * @type {TraceTargetUpdateInfo}\n */\nconst sharedUpdateInfo = {index: -1, endIndex: NaN};\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The coordinate.\n * @param {TraceState} traceState The trace state.\n * @param {import(\"../Map.js\").default} map The map.\n * @param {number} snapTolerance The snap tolerance.\n * @return {TraceTargetUpdateInfo} Information about the new trace target.  The returned\n * object is reused between calls and must not be modified by the caller.\n */\nfunction getTraceTargetUpdate(coordinate, traceState, map, snapTolerance) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n\n  let closestTargetDistance = Infinity;\n\n  let newTargetIndex = -1;\n  let newEndIndex = NaN;\n\n  for (\n    let targetIndex = 0;\n    targetIndex < traceState.targets.length;\n    ++targetIndex\n  ) {\n    const target = traceState.targets[targetIndex];\n    const coordinates = target.coordinates;\n\n    let minSegmentDistance = Infinity;\n    let endIndex;\n    for (\n      let coordinateIndex = 0;\n      coordinateIndex < coordinates.length - 1;\n      ++coordinateIndex\n    ) {\n      const start = coordinates[coordinateIndex];\n      const end = coordinates[coordinateIndex + 1];\n      const rel = getPointSegmentRelationship(x, y, start, end);\n      if (rel.squaredDistance < minSegmentDistance) {\n        minSegmentDistance = rel.squaredDistance;\n        endIndex = coordinateIndex + rel.along;\n      }\n    }\n\n    if (minSegmentDistance < closestTargetDistance) {\n      closestTargetDistance = minSegmentDistance;\n      if (target.ring && traceState.targetIndex === targetIndex) {\n        // same target, maintain the same trace direction\n        if (target.endIndex > target.startIndex) {\n          // forward trace\n          if (endIndex < target.startIndex) {\n            endIndex += coordinates.length;\n          }\n        } else if (target.endIndex < target.startIndex) {\n          // reverse trace\n          if (endIndex > target.startIndex) {\n            endIndex -= coordinates.length;\n          }\n        }\n      }\n      newEndIndex = endIndex;\n      newTargetIndex = targetIndex;\n    }\n  }\n\n  const newTarget = traceState.targets[newTargetIndex];\n  let considerBothDirections = newTarget.ring;\n  if (traceState.targetIndex === newTargetIndex && considerBothDirections) {\n    // only consider switching trace direction if close to the start\n    const newCoordinate = interpolateCoordinate(\n      newTarget.coordinates,\n      newEndIndex,\n    );\n    const pixel = map.getPixelFromCoordinate(newCoordinate);\n    if (distance(pixel, traceState.startPx) > snapTolerance) {\n      considerBothDirections = false;\n    }\n  }\n\n  if (considerBothDirections) {\n    const coordinates = newTarget.coordinates;\n    const count = coordinates.length;\n    const startIndex = newTarget.startIndex;\n    const endIndex = newEndIndex;\n    if (startIndex < endIndex) {\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex - count,\n      );\n      if (reverseDistance < forwardDistance) {\n        newEndIndex -= count;\n      }\n    } else {\n      const reverseDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex,\n      );\n      const forwardDistance = getCumulativeSquaredDistance(\n        coordinates,\n        startIndex,\n        endIndex + count,\n      );\n      if (forwardDistance < reverseDistance) {\n        newEndIndex += count;\n      }\n    }\n  }\n\n  sharedUpdateInfo.index = newTargetIndex;\n  sharedUpdateInfo.endIndex = newEndIndex;\n  return sharedUpdateInfo;\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} coordinate The clicked coordinate.\n * @param {Array<import(\"../coordinate.js\").Coordinate>} coordinates The geometry component coordinates.\n * @param {boolean} ring The coordinates represent a linear ring.\n * @param {Array<TraceTarget>} targets The trace targets.\n */\nfunction appendTraceTarget(coordinate, coordinates, ring, targets) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const start = coordinates[i];\n    const end = coordinates[i + 1];\n    const rel = getPointSegmentRelationship(x, y, start, end);\n    if (rel.squaredDistance === 0) {\n      const index = i + rel.along;\n      targets.push({\n        coordinates: coordinates,\n        ring: ring,\n        startIndex: index,\n        endIndex: index,\n      });\n      return;\n    }\n  }\n}\n\n/**\n * @typedef {Object} PointSegmentRelationship\n * @property {number} along The closest point expressed as a fraction along the segment length.\n * @property {number} squaredDistance The squared distance of the point to the segment.\n */\n\n/**\n * @type {PointSegmentRelationship}\n */\nconst sharedRel = {along: 0, squaredDistance: 0};\n\n/**\n * @param {number} x The point x.\n * @param {number} y The point y.\n * @param {import(\"../coordinate.js\").Coordinate} start The segment start.\n * @param {import(\"../coordinate.js\").Coordinate} end The segment end.\n * @return {PointSegmentRelationship} The point segment relationship.  The returned object is\n * shared between calls and must not be modified by the caller.\n */\nfunction getPointSegmentRelationship(x, y, start, end) {\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  let along = 0;\n  let px = x1;\n  let py = y1;\n  if (dx !== 0 || dy !== 0) {\n    along = clamp(((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy), 0, 1);\n    px += dx * along;\n    py += dy * along;\n  }\n\n  sharedRel.along = along;\n  sharedRel.squaredDistance = toFixed(squaredDistance(x, y, px, py), 10);\n  return sharedRel;\n}\n\n/**\n * @param {LineCoordType} coordinates The coordinates.\n * @param {number} index The index.  May be fractional and may wrap.\n * @return {import(\"../coordinate.js\").Coordinate} The interpolated coordinate.\n */\nfunction interpolateCoordinate(coordinates, index) {\n  const count = coordinates.length;\n\n  let startIndex = Math.floor(index);\n  const along = index - startIndex;\n  if (startIndex >= count) {\n    startIndex -= count;\n  } else if (startIndex < 0) {\n    startIndex += count;\n  }\n\n  let endIndex = startIndex + 1;\n  if (endIndex >= count) {\n    endIndex -= count;\n  }\n\n  const start = coordinates[startIndex];\n  const x0 = start[0];\n  const y0 = start[1];\n  const end = coordinates[endIndex];\n  const dx = end[0] - x0;\n  const dy = end[1] - y0;\n\n  return [x0 + dx * along, y0 + dy * along];\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DrawOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * Pointer type of the last pointermove event\n     * @type {string}\n     * @private\n     */\n    this.pointerType_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {import(\"../geom/Geometry.js\").Type}\n     * @private\n     */\n    this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (\n      options.type\n    );\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints\n      ? options.minPoints\n      : this.mode_ === 'Polygon'\n        ? 3\n        : 2;\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ =\n      this.mode_ === 'Circle'\n        ? 2\n        : options.maxPoints\n          ? options.maxPoints\n          : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition\n      ? options.finishCondition\n      : TRUE;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      const mode = this.mode_;\n      if (mode === 'Circle') {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          const circle = geometry\n            ? /** @type {Circle} */ (geometry)\n            : new Circle([NaN, NaN]);\n          const center = fromUserCoordinate(coordinates[0], projection);\n          const squaredLength = squaredCoordinateDistance(\n            center,\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection),\n          );\n          circle.setCenterAndRadius(\n            center,\n            Math.sqrt(squaredLength),\n            this.geometryLayout_,\n          );\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circle.transform(projection, userProjection);\n          }\n          return circle;\n        };\n      } else {\n        let Constructor;\n        if (mode === 'Point') {\n          Constructor = Point;\n        } else if (mode === 'LineString') {\n          Constructor = LineString;\n        } else if (mode === 'Polygon') {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function (coordinates, geometry, projection) {\n          if (geometry) {\n            if (mode === 'Polygon') {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates(\n                  [coordinates[0].concat([coordinates[0][0]])],\n                  this.geometryLayout_,\n                );\n              } else {\n                geometry.setCoordinates([], this.geometryLayout_);\n              }\n            } else {\n              geometry.setCoordinates(coordinates, this.geometryLayout_);\n            }\n          } else {\n            geometry = new Constructor(coordinates, this.geometryLayout_);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ =\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance\n      ? options.clickTolerance * options.clickTolerance\n      : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition\n        ? options.freehandCondition\n        : shiftKeyOnly;\n    }\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.traceCondition_;\n    this.setTrace(options.trace || false);\n\n    /**\n     * @type {TraceState}\n     * @private\n     */\n    this.traceState_ = {active: false};\n\n    /**\n     * @type {VectorSource|null}\n     * @private\n     */\n    this.traceSource_ = options.traceSource || options.source || null;\n\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\n  }\n\n  /**\n   * Toggle tracing mode or set a tracing condition.\n   *\n   * @param {boolean|import(\"../events/condition.js\").Condition} trace A boolean to toggle tracing mode or an event\n   *     condition that will be checked when a feature is clicked to determine if tracing should be active.\n   */\n  setTrace(trace) {\n    let condition;\n    if (!trace) {\n      condition = never;\n    } else if (trace === true) {\n      condition = always;\n    } else {\n      condition = trace;\n    }\n    this.traceCondition_ = condition;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.originalEvent.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== 'Point' && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (\n      !this.freehand_ &&\n      this.lastDragTime_ &&\n      event.type === MapBrowserEventType.POINTERDRAG\n    ) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null\n    ) {\n      this.addToDrawing_(event.coordinate);\n      pass = false;\n    } else if (\n      this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN\n    ) {\n      pass = false;\n    } else if (move && this.getPointerCount() < 2) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        this.handlePointerMove_(event);\n        if (this.shouldHandle_) {\n          // Avoid page scrolling when freehand drawing on mobile\n          event.originalEvent.preventDefault();\n        }\n      } else if (\n        event.originalEvent.pointerType === 'mouse' ||\n        (event.type === MapBrowserEventType.POINTERDRAG &&\n          this.downTimeout_ === undefined)\n      ) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event.coordinate);\n      }\n      return true;\n    }\n\n    if (!this.condition_(event)) {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(() => {\n      this.handlePointerMove_(\n        new MapBrowserEvent(\n          MapBrowserEventType.POINTERMOVE,\n          event.map,\n          event.originalEvent,\n          false,\n          event.frameState,\n        ),\n      );\n    }, this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  deactivateTrace_() {\n    this.traceState_ = {active: false};\n  }\n\n  /**\n   * Activate or deactivate trace state based on a browser event.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  toggleTraceState_(event) {\n    if (!this.traceSource_ || !this.traceCondition_(event)) {\n      return;\n    }\n\n    if (this.traceState_.active) {\n      this.deactivateTrace_();\n      return;\n    }\n\n    const map = this.getMap();\n    const lowerLeft = map.getCoordinateFromPixel([\n      event.pixel[0] - this.snapTolerance_,\n      event.pixel[1] + this.snapTolerance_,\n    ]);\n    const upperRight = map.getCoordinateFromPixel([\n      event.pixel[0] + this.snapTolerance_,\n      event.pixel[1] - this.snapTolerance_,\n    ]);\n    const extent = boundingExtent([lowerLeft, upperRight]);\n    const features = this.traceSource_.getFeaturesInExtent(extent);\n    if (features.length === 0) {\n      return;\n    }\n\n    const targets = getTraceTargets(event.coordinate, features);\n    if (targets.length) {\n      this.traceState_ = {\n        active: true,\n        startPx: event.pixel.slice(),\n        targets: targets,\n        targetIndex: -1,\n      };\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} endIndex The new end index of the trace.\n   * @private\n   */\n  addOrRemoveTracedCoordinates_(target, endIndex) {\n    // three cases to handle:\n    //  1. traced in the same direction and points need adding\n    //  2. traced in the same direction and points need removing\n    //  3. traced in a new direction\n    const previouslyForward = target.startIndex <= target.endIndex;\n    const currentlyForward = target.startIndex <= endIndex;\n    if (previouslyForward === currentlyForward) {\n      // same direction\n      if (\n        (previouslyForward && endIndex > target.endIndex) ||\n        (!previouslyForward && endIndex < target.endIndex)\n      ) {\n        // case 1 - add new points\n        this.addTracedCoordinates_(target, target.endIndex, endIndex);\n      } else if (\n        (previouslyForward && endIndex < target.endIndex) ||\n        (!previouslyForward && endIndex > target.endIndex)\n      ) {\n        // case 2 - remove old points\n        this.removeTracedCoordinates_(endIndex, target.endIndex);\n      }\n    } else {\n      // case 3 - remove old points, add new points\n      this.removeTracedCoordinates_(target.startIndex, target.endIndex);\n      this.addTracedCoordinates_(target, target.startIndex, endIndex);\n    }\n  }\n\n  /**\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  removeTracedCoordinates_(fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    let remove = 0;\n    if (fromIndex < toIndex) {\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        end -= 1;\n      }\n      remove = end - start + 1;\n    } else {\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      remove = start - end + 1;\n    }\n\n    if (remove > 0) {\n      this.removeLastPoints_(remove);\n    }\n  }\n\n  /**\n   * @param {TraceTarget} target The trace target.\n   * @param {number} fromIndex The start index.\n   * @param {number} toIndex The end index.\n   * @private\n   */\n  addTracedCoordinates_(target, fromIndex, toIndex) {\n    if (fromIndex === toIndex) {\n      return;\n    }\n\n    const coordinates = [];\n    if (fromIndex < toIndex) {\n      // forward trace\n      const start = Math.ceil(fromIndex);\n      let end = Math.floor(toIndex);\n      if (end === toIndex) {\n        // if end is snapped to a vertex, it will be added later\n        end -= 1;\n      }\n      for (let i = start; i <= end; ++i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    } else {\n      // reverse trace\n      const start = Math.floor(fromIndex);\n      let end = Math.ceil(toIndex);\n      if (end === toIndex) {\n        end += 1;\n      }\n      for (let i = start; i >= end; --i) {\n        coordinates.push(getCoordinate(target.coordinates, i));\n      }\n    }\n    if (coordinates.length) {\n      this.appendCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Update the trace.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  updateTrace_(event) {\n    const traceState = this.traceState_;\n    if (!traceState.active) {\n      return;\n    }\n\n    if (traceState.targetIndex === -1) {\n      // check if we are ready to pick a target\n      if (distance(traceState.startPx, event.pixel) < this.snapTolerance_) {\n        return;\n      }\n    }\n\n    const updatedTraceTarget = getTraceTargetUpdate(\n      event.coordinate,\n      traceState,\n      this.getMap(),\n      this.snapTolerance_,\n    );\n\n    if (traceState.targetIndex !== updatedTraceTarget.index) {\n      // target changed\n      if (traceState.targetIndex !== -1) {\n        // remove points added during previous trace\n        const oldTarget = traceState.targets[traceState.targetIndex];\n        this.removeTracedCoordinates_(oldTarget.startIndex, oldTarget.endIndex);\n      }\n      // add points for the new target\n      const newTarget = traceState.targets[updatedTraceTarget.index];\n      this.addTracedCoordinates_(\n        newTarget,\n        newTarget.startIndex,\n        updatedTraceTarget.endIndex,\n      );\n    } else {\n      // target stayed the same\n      const target = traceState.targets[traceState.targetIndex];\n      this.addOrRemoveTracedCoordinates_(target, updatedTraceTarget.endIndex);\n    }\n\n    // modify the state with updated info\n    traceState.targetIndex = updatedTraceTarget.index;\n    const target = traceState.targets[traceState.targetIndex];\n    target.endIndex = updatedTraceTarget.endIndex;\n\n    // update event coordinate and pixel to match end point of final segment\n    const coordinate = interpolateCoordinate(\n      target.coordinates,\n      target.endIndex,\n    );\n    const pixel = this.getMap().getPixelFromCoordinate(coordinate);\n    event.coordinate = coordinate;\n    event.pixel = [Math.round(pixel[0]), Math.round(pixel[1])];\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.getPointerCount() === 0) {\n      if (this.downTimeout_) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n\n      this.handlePointerMove_(event);\n      const tracing = this.traceState_.active;\n      this.toggleTraceState_(event);\n\n      if (this.shouldHandle_) {\n        const startingToDraw = !this.finishCoordinate_;\n        if (startingToDraw) {\n          this.startDrawing_(event.coordinate);\n        }\n        if (!startingToDraw && this.freehand_) {\n          this.finishDrawing();\n        } else if (\n          !this.freehand_ &&\n          (!startingToDraw || this.mode_ === 'Point')\n        ) {\n          if (this.atFinish_(event.pixel, tracing)) {\n            if (this.finishCondition_(event)) {\n              this.finishDrawing();\n            }\n          } else {\n            this.addToDrawing_(event.coordinate);\n          }\n        }\n        pass = false;\n      } else if (this.freehand_) {\n        this.abortDrawing();\n      }\n    }\n\n    if (!pass && this.stopClick_) {\n      event.preventDefault();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @private\n   */\n  handlePointerMove_(event) {\n    this.pointerType_ = event.originalEvent.pointerType;\n    if (\n      this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))\n    ) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_\n        ? squaredDistance > this.squaredClickTolerance_\n        : squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return;\n      }\n    }\n\n    if (!this.finishCoordinate_) {\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\n      return;\n    }\n\n    this.updateTrace_(event);\n    this.modifyDrawing_(event.coordinate);\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {boolean} [tracing] Drawing in trace mode (only stop if at the starting point).\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(pixel, tracing) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      const mode = this.mode_;\n      if (mode === 'Point') {\n        at = true;\n      } else if (mode === 'Circle') {\n        at = this.sketchCoords_.length === 2;\n      } else if (mode === 'LineString') {\n        potentiallyDone =\n          !tracing && this.sketchCoords_.length > this.minPoints_;\n      } else if (mode === 'Polygon') {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [\n          sketchCoords[0][0],\n          sketchCoords[0][sketchCoords[0].length - 2],\n        ];\n        if (tracing) {\n          potentiallyFinishCoordinates = [sketchCoords[0][0]];\n        } else {\n          potentiallyFinishCoordinates = [\n            sketchCoords[0][0],\n            sketchCoords[0][sketchCoords[0].length - 2],\n          ];\n        }\n      }\n      if (potentiallyDone) {\n        const map = this.getMap();\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n   * @private\n   */\n  createOrUpdateSketchPoint_(coordinates) {\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @private\n   */\n  createOrUpdateCustomSketchLine_(geometry) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature();\n    }\n    const ring = geometry.getLinearRing(0);\n    let sketchLineGeom = this.sketchLine_.getGeometry();\n    if (!sketchLineGeom) {\n      sketchLineGeom = new LineString(\n        ring.getFlatCoordinates(),\n        ring.getLayout(),\n      );\n      this.sketchLine_.setGeometry(sketchLineGeom);\n    } else {\n      sketchLineGeom.setFlatCoordinates(\n        ring.getLayout(),\n        ring.getFlatCoordinates(),\n      );\n      sketchLineGeom.changed();\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n   * @private\n   */\n  startDrawing_(start) {\n    const projection = this.getMap().getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    while (start.length < stride) {\n      start.push(0);\n    }\n    this.finishCoordinate_ = start;\n    if (this.mode_ === 'Point') {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === 'Polygon') {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(\n      this.sketchCoords_,\n      undefined,\n      projection,\n    );\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @private\n   */\n  modifyDrawing_(coordinate) {\n    const map = this.getMap();\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = map.getView().getProjection();\n    const stride = getStrideForLayout(this.geometryLayout_);\n    let coordinates, last;\n    while (coordinate.length < stride) {\n      coordinate.push(0);\n    }\n    if (this.mode_ === 'Point') {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\n      geometry,\n      projection,\n    );\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    if (geometry.getType() === 'Polygon' && this.mode_ !== 'Polygon') {\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n    } else if (this.sketchLineCoords_) {\n      const sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {!PointCoordType} coordinate Coordinate\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>} The sketch feature.\n   * @private\n   */\n  addToDrawing_(coordinate) {\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    let done;\n    let coordinates;\n    const mode = this.mode_;\n    if (mode === 'LineString' || mode === 'Circle') {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (mode === 'Polygon') {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\n    }\n    this.createOrUpdateSketchPoint_(coordinate.slice());\n    this.updateSketchFeatures_();\n    if (done) {\n      return this.finishDrawing();\n    }\n    return this.sketchFeature_;\n  }\n\n  /**\n   * @param {number} n The number of points to remove.\n   */\n  removeLastPoints_(n) {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    const mode = this.mode_;\n    for (let i = 0; i < n; ++i) {\n      let coordinates;\n      if (mode === 'LineString' || mode === 'Circle') {\n        coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n        coordinates.splice(-2, 1);\n        if (coordinates.length >= 2) {\n          this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n          const finishCoordinate = this.finishCoordinate_.slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        this.geometryFunction_(coordinates, geometry, projection);\n        if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n          this.createOrUpdateCustomSketchLine_(\n            /** @type {Polygon} */ (geometry),\n          );\n        }\n      } else if (mode === 'Polygon') {\n        coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n        coordinates.splice(-2, 1);\n        const sketchLineGeom = this.sketchLine_.getGeometry();\n        if (coordinates.length >= 2) {\n          const finishCoordinate = coordinates[coordinates.length - 2].slice();\n          coordinates[coordinates.length - 1] = finishCoordinate;\n          this.createOrUpdateSketchPoint_(finishCoordinate);\n        }\n        sketchLineGeom.setCoordinates(coordinates);\n        this.geometryFunction_(this.sketchCoords_, geometry, projection);\n      }\n\n      if (coordinates.length === 1) {\n        this.abortDrawing();\n        break;\n      }\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn. Does not do anything when\n   * drawing POINT or MULTI_POINT geometries.\n   * @api\n   */\n  removeLastPoint() {\n    this.removeLastPoints_(1);\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The drawn feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return null;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    const projection = this.getMap().getView().getProjection();\n    if (this.mode_ === 'LineString') {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n    } else if (this.mode_ === 'Polygon') {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry, projection);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === 'MultiPoint') {\n      sketchFeature.setGeometry(\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiLineString') {\n      sketchFeature.setGeometry(\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)]),\n      );\n    } else if (this.type_ === 'MultiPolygon') {\n      sketchFeature.setGeometry(\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]),\n      );\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n    this.deactivateTrace_();\n    return sketchFeature;\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @api\n   */\n  abortDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (sketchFeature) {\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n    }\n  }\n\n  /**\n   * Append coordinates to the end of the geometry that is currently being drawn.\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\n   * either be appended to the current LineString or the outer ring of the current\n   * Polygon. If no geometry is being drawn, a new one will be created.\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n   * the coordinate array.\n   * @api\n   */\n  appendCoordinates(coordinates) {\n    const mode = this.mode_;\n    const newDrawing = !this.sketchFeature_;\n    if (newDrawing) {\n      this.startDrawing_(coordinates[0]);\n    }\n    /** @type {LineCoordType} */\n    let sketchCoords;\n    if (mode === 'LineString' || mode === 'Circle') {\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n    } else if (mode === 'Polygon') {\n      sketchCoords =\n        this.sketchCoords_ && this.sketchCoords_.length\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n          : [];\n    } else {\n      return;\n    }\n\n    if (newDrawing) {\n      sketchCoords.shift();\n    }\n\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n    sketchCoords.pop();\n\n    // Append coordinate list\n    for (let i = 0; i < coordinates.length; i++) {\n      this.addToDrawing_(coordinates[i]);\n    }\n\n    const ending = coordinates[coordinates.length - 1];\n    // Duplicate last coordinate for sketch drawing (cursor position)\n    this.sketchFeature_ = this.addToDrawing_(ending);\n    this.modifyDrawing_(ending);\n  }\n\n  /**\n   * Initiate draw mode by starting from an existing geometry which will\n   * receive new additional points. This only works on features with\n   * `LineString` geometries, where the interaction will extend lines by adding\n   * points to the end of the coordinates array.\n   * This will change the original feature, instead of drawing a copy.\n   *\n   * The function will dispatch a `drawstart` event.\n   *\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.sketchPoint_ = new Feature(new Point(last));\n    this.updateSketchFeatures_();\n    this.dispatchEvent(\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_),\n    );\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function (feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(sides, angle) {\n  return function (coordinates, geometry, projection) {\n    const center = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[0],\n      projection,\n    );\n    const end = fromUserCoordinate(\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\n      projection,\n    );\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\n    geometry = geometry || fromCircle(new Circle(center), sides);\n\n    let internalAngle = angle;\n    if (!angle && angle !== 0) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      internalAngle = Math.atan2(y, x);\n    }\n    makeRegular(\n      /** @type {Polygon} */ (geometry),\n      center,\n      radius,\n      internalAngle,\n    );\n\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return function (coordinates, geometry, projection) {\n    const extent = boundingExtent(\n      /** @type {LineCoordType} */ ([\n        coordinates[0],\n        coordinates[coordinates.length - 1],\n      ]).map(function (coordinate) {\n        return fromUserCoordinate(coordinate, projection);\n      }),\n    );\n    const boxCoordinates = [\n      [\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent),\n      ],\n    ];\n    if (geometry) {\n      geometry.setCoordinates(boxCoordinates);\n    } else {\n      geometry = new Polygon(boxCoordinates);\n    }\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      geometry.transform(projection, userProjection);\n    }\n    return geometry;\n  };\n}\n\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n      return 'Point';\n    case 'LineString':\n    case 'MultiLineString':\n      return 'LineString';\n    case 'Polygon':\n    case 'MultiPolygon':\n      return 'Polygon';\n    case 'Circle':\n      return 'Circle';\n    default:\n      throw new Error('Invalid type: ' + type);\n  }\n}\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nexport class ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ExtentOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!options) {\n      options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.boxStyle\n        ? options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.pointerStyle\n        ? options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (options.extent) {\n      this.setExtent(options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../Map.js\").default} map map\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @return {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @return {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]]),\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y]),\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection(),\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Polygon'];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  }\n  if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  }\n  return null;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n","/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/** @typedef {'x'|'y'|'z'|'r'|'l'} Params */\n\n/**\n * @typedef {function(string):void} Callback\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {Array<Params>} [params=['x', 'y', 'z', 'r', 'l']] Properties to track. Default is to track\n * `x` (center x), `y` (center y), `z` (zoom), `r` (rotation) and `l` (layers).\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [options] Link options.\n   */\n  constructor(options) {\n    super();\n\n    options = Object.assign(\n      {\n        animate: true,\n        params: ['x', 'y', 'z', 'r', 'l'],\n        replace: false,\n        prefix: '',\n      },\n      options || {},\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @type {Object<Params, boolean>}\n     * @private\n     */\n    this.params_ = options.params.reduce((acc, value) => {\n      acc[value] = true;\n      return acc;\n    }, {});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n\n    /**\n     * The tracked parameter callbacks.\n     * @private\n     * @type {Object<string, Callback>}\n     */\n    this.trackedCallbacks_ = {};\n\n    /**\n     * The tracked parameter values.\n     * @private\n     * @type {Object<string, string|null>}\n     */\n    this.trackedValues_ = {};\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    if (!(name in this.params_)) {\n      return;\n    }\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this),\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    for (const key in this.trackedCallbacks_) {\n      const value = params.get(key);\n      if (key in this.trackedCallbacks_ && value !== this.trackedValues_[key]) {\n        this.trackedValues_[key] = value;\n        this.trackedCallbacks_[key](value);\n      }\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if ('z' in this.params_ && differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if ('r' in this.params_ && differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (\n      ('x' in this.params_ || 'y' in this.params_) &&\n      differentArray(center, view.getCenter())\n    ) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(Object.assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (\n      'l' in this.params_ &&\n      layersParam &&\n      layersParam.length === layers.length\n    ) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Register a listener for a URL search parameter.  The callback will be called with a new value\n   * when the corresponding search parameter changes due to history events (e.g. browser navigation).\n   *\n   * @param {string} key The URL search parameter.\n   * @param {Callback} callback The function to call when the search parameter changes.\n   * @return {string|null} The initial value of the search parameter (or null if absent from the URL).\n   * @api\n   */\n  track(key, callback) {\n    this.trackedCallbacks_[key] = callback;\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    const value = params.get(key);\n    this.trackedValues_[key] = value;\n    return value;\n  }\n\n  /**\n   * Update the URL with a new search parameter value.  If the value is null, it will be\n   * deleted from the search parameters.\n   *\n   * @param {string} key The URL search parameter.\n   * @param {string|null} value The updated value (or null to remove it from the URL).\n   * @api\n   */\n  update(key, value) {\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    if (value === null) {\n      params.delete(key);\n    } else {\n      params.set(key, value);\n    }\n    if (key in this.trackedValues_) {\n      this.trackedValues_[key] = value;\n    }\n    this.updateHistory_(url);\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    this.updateHistory_(url);\n    this.initial_ = false;\n  }\n\n  /**\n   * @private\n   * @param {URL} url The URL.\n   */\n  updateHistory_(url) {\n    if (url.href !== window.location.href) {\n      if (this.initial_ || this.replace_) {\n        window.history.replaceState(history.state, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","/**\n * @module ol/interaction/Modify\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {\n  altKeyOnly,\n  always,\n  primaryAction,\n  singleClick,\n} from '../events/condition.js';\nimport {\n  boundingExtent,\n  buffer as bufferExtent,\n  createOrUpdateFromCoordinate as createExtent,\n} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  equals as coordinatesEqual,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {equals} from '../array.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend',\n};\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth] Depth.\n * @property {Feature} feature Feature.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} [index] Index.\n * @property {Array<Array<number>>} segment Segment.\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition.primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition.singleClick} with\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition.always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike} [style]\n * Style used for the modification point or vertex. For linestrings and polygons, this will\n * be the affected vertex, for circles a point along the circle, and for points the actual\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\n * When using a style function, the point feature passed to the function will have a `features`\n * property - an array whose entries are the features that are being modified, and a `geometries`\n * property - an array whose entries are the geometries that are being modified. Both arrays are\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\n * the geometry will be the particular geometry from the collection that is being modified.\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the `features` option.\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\n * features will be considered for modification based on their visual appearance, instead of being within\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\n * provided, only the rendered representation of the features on that layer will be considered.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the `source` option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\n * pointer coordinate when clicked within the `pixelTolerance`.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, features, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * Cartesian distance from the pointer is used to determine the features that\n * will be modified. This means that geometries will only be considered for\n * modification when they are within the configured `pixelTolerance`. For point\n * geometries, the `hitDetection` option can be used to match their visual\n * appearance.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ModifyOnSignature<void>}\n     */\n    this.un;\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition\n      ? options.deleteCondition\n      : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition\n      ? options.insertVertexCondition\n      : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.featuresBeingModified_ = null;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX,\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n    };\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    /**\n     * @type {boolean|import(\"../layer/BaseVector\").default}\n     */\n    this.hitDetection_ = null;\n\n    /** @type {Collection<Feature>} */\n    let features;\n    if (options.features) {\n      features = options.features;\n    } else if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(\n        VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_.bind(this),\n      );\n      this.source_.addEventListener(\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_.bind(this),\n      );\n    }\n    if (!features) {\n      throw new Error(\n        'The modify interaction requires features, a source or a layer',\n      );\n    }\n    if (options.hitDetection) {\n      this.hitDetection_ = options.hitDetection;\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(\n      CollectionEventType.ADD,\n      this.handleFeatureAdd_.bind(this),\n    );\n    this.features_.addEventListener(\n      CollectionEventType.REMOVE,\n      this.handleFeatureRemove_.bind(this),\n    );\n\n    /**\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n    /**\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\n     * @type {Array<number>}\n     */\n    this.delta_ = [0, 0];\n\n    /**\n     * @private\n     */\n    this.snapToPointer_ =\n      options.snapToPointer === undefined\n        ? !this.hitDetection_\n        : options.snapToPointer;\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\n   * @private\n   */\n  willModifyFeatures_(evt, segments) {\n    if (!this.featuresBeingModified_) {\n      this.featuresBeingModified_ = new Collection();\n      const features = this.featuresBeingModified_.getArray();\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\n        const segment = segments[i];\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\n          const feature = segment[s].feature;\n          if (feature && !features.includes(feature)) {\n            this.featuresBeingModified_.push(feature);\n          }\n        }\n      }\n      if (this.featuresBeingModified_.getLength() === 0) {\n        this.featuresBeingModified_ = null;\n      } else {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYSTART,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of candidate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(\n      EventType.CHANGE,\n      this.boundHandleFeatureChange_,\n    );\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      },\n    );\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(evt.element);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    this.removeFeature_(evt.element);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates],\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates],\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment,\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment,\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment,\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates],\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection && this.getMap()) {\n      const projection = this.getMap().getView().getProjection();\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n      circleGeometry = fromCircle(\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n      ).transform(projection, userProjection);\n    }\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {Array<Feature>} features The features being modified.\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    vertexFeature.set('features', features);\n    vertexFeature.set('geometries', geometries);\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (\n      !mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\n        !this.ignoreNextSingleClick_\n      ) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt, this.dragSegments_);\n\n    const vertex = [\n      evt.coordinate[0] + this.delta_[0],\n      evt.coordinate[1] + this.delta_[1],\n    ];\n    const features = [];\n    const geometries = [];\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const feature = segmentData.feature;\n      if (!features.includes(feature)) {\n        features.push(feature);\n      }\n      const geometry = segmentData.geometry;\n      if (!geometries.includes(geometry)) {\n        geometries.push(geometry);\n      }\n      const depth = segmentData.depth;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case 'Point':\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'MultiPoint':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case 'LineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiLineString':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Polygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'MultiPolygon':\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case 'Circle':\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else {\n            // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            const projection = evt.map.getView().getProjection();\n            let radius = coordinateDistance(\n              fromUserCoordinate(geometry.getCenter(), projection),\n              fromUserCoordinate(vertex, projection),\n            );\n            const userProjection = getUserProjection();\n            if (userProjection) {\n              const circleGeometry = geometry\n                .clone()\n                .transform(userProjection, projection);\n              circleGeometry.setRadius(radius);\n              radius = circleGeometry\n                .transform(projection, userProjection)\n                .getRadius();\n            }\n            geometry.setRadius(radius);\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    const pixelCoordinate = evt.coordinate;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\n    this.dragSegments_.length = 0;\n    this.featuresBeingModified_ = null;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.geometry);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (\n          segmentDataMatch.geometry.getType() === 'Circle' &&\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          const closestVertex = closestOnSegmentData(\n            pixelCoordinate,\n            segmentDataMatch,\n            projection,\n          );\n          if (\n            coordinatesEqual(closestVertex, vertex) &&\n            !componentSegments[uid][0]\n          ) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]\n        ) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]\n        ) {\n          if (\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0\n          ) {\n            let coordinates = segmentDataMatch.geometry.getCoordinates();\n            switch (segmentDataMatch.geometry.getType()) {\n              // prevent dragging closed linestrings by the connecting node\n              case 'LineString':\n              case 'MultiLineString':\n                continue;\n              // if dragging the first vertex of a polygon, ensure the other segment\n              // belongs to the closing vertex of the linear ring\n              case 'MultiPolygon':\n                coordinates = coordinates[depth[1]];\n              /* falls through */\n              case 'Polygon':\n                if (\n                  segmentDataMatch.index !==\n                  coordinates[depth[0]].length - 2\n                ) {\n                  continue;\n                }\n                break;\n              default:\n              // pass\n            }\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (\n          getUid(segment) in this.vertexSegments_ &&\n          !componentSegments[uid][0] &&\n          !componentSegments[uid][1] &&\n          this.insertVertexCondition_(evt)\n        ) {\n          insertVertices.push(segmentDataMatch);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt, [insertVertices]);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_(insertVertices[j], vertex);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === 'Circle') {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        let circleGeometry = geometry;\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          const projection = evt.map.getView().getProjection();\n          circleGeometry = circleGeometry\n            .clone()\n            .transform(userProjection, projection);\n          circleGeometry = fromCircle(circleGeometry).transform(\n            projection,\n            userProjection,\n          );\n        }\n        this.rBush_.update(\n          circleGeometry.getExtent(),\n          circumferenceSegmentData,\n        );\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.featuresBeingModified_) {\n      this.dispatchEvent(\n        new ModifyEvent(\n          ModifyEventType.MODIFYEND,\n          this.featuresBeingModified_,\n          evt,\n        ),\n      );\n      this.featuresBeingModified_ = null;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../Map.js\").default} map Map.\n   * @param {import(\"../coordinate.js\").Coordinate} [coordinate] The pixel Coordinate.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map, coordinate) {\n    const pixelCoordinate = coordinate || map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function (a, b) {\n      return (\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\n      );\n    };\n\n    /** @type {Array<SegmentData>|undefined} */\n    let nodes;\n    /** @type {Point|undefined} */\n    let hitPointGeometry;\n    if (this.hitDetection_) {\n      const layerFilter =\n        typeof this.hitDetection_ === 'object'\n          ? (layer) => layer === this.hitDetection_\n          : undefined;\n      map.forEachFeatureAtPixel(\n        pixel,\n        (feature, layer, geometry) => {\n          if (geometry && geometry.getType() === 'Point') {\n            geometry = new Point(\n              toUserCoordinate(geometry.getCoordinates(), projection),\n            );\n          }\n          const geom = geometry || feature.getGeometry();\n          if (\n            feature instanceof Feature &&\n            this.features_.getArray().includes(feature)\n          ) {\n            hitPointGeometry = /** @type {Point} */ (geom);\n            const coordinate = /** @type {Point} */ (feature.getGeometry())\n              .getFlatCoordinates()\n              .slice(0, 2);\n            nodes = [\n              {\n                feature,\n                geometry: hitPointGeometry,\n                segment: [coordinate, coordinate],\n              },\n            ];\n          }\n          return true;\n        },\n        {layerFilter},\n      );\n    }\n    if (!nodes) {\n      const viewExtent = fromUserExtent(\n        createExtent(pixelCoordinate, tempExtent),\n        projection,\n      );\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\n      const box = toUserExtent(\n        bufferExtent(viewExtent, buffer, tempExtent),\n        projection,\n      );\n      nodes = this.rBush_.getInExtent(box);\n    }\n\n    if (nodes && nodes.length > 0) {\n      const node = nodes.sort(sortByDistance)[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n        vertexSegments[getUid(closestSegment)] = true;\n\n        if (!this.snapToPointer_) {\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\n        }\n        if (\n          node.geometry.getType() === 'Circle' &&\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\n        ) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex =\n              squaredDist1 > squaredDist2\n                ? closestSegment[1]\n                : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(\n            vertex,\n            [node.feature],\n            [node.geometry],\n          );\n          const geometries = {};\n          geometries[getUid(node.geometry)] = true;\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if (\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1])) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0]))\n            ) {\n              const geometryUid = getUid(nodes[i].geometry);\n              if (!(geometryUid in geometries)) {\n                geometries[geometryUid] = true;\n                vertexSegments[getUid(segment)] = true;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case 'MultiLineString':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'Polygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'MultiPolygon':\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case 'LineString':\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1,\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (\n      this.lastPointerEvent_ &&\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\n    ) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt, this.dragSegments_);\n      const removed = this.removeVertex_();\n      if (this.featuresBeingModified_) {\n        this.dispatchEvent(\n          new ModifyEvent(\n            ModifyEventType.MODIFYEND,\n            this.featuresBeingModified_,\n            evt,\n          ),\n        );\n      }\n\n      this.featuresBeingModified_ = null;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case 'MultiLineString':\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'LineString':\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case 'MultiPolygon':\n          component = component[segmentData.depth[1]];\n        /* falls through */\n        case 'Polygon':\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n        // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments,\n          };\n\n          this.rBush_.insert(\n            boundingExtent(newSegmentData.segment),\n            newSegmentData,\n          );\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(\n      geometry.getExtent(),\n      function (segmentDataMatch) {\n        if (\n          segmentDataMatch.geometry === geometry &&\n          (depth === undefined ||\n            segmentDataMatch.depth === undefined ||\n            equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index\n        ) {\n          segmentDataMatch.index += delta;\n        }\n      },\n    );\n  }\n}\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(\n  pointCoordinates,\n  segmentData,\n  projection,\n) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === 'Circle') {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        circleGeometry = circleGeometry\n          .clone()\n          .transform(userProjection, projection);\n      }\n      const distanceToCenterSquared = squaredCoordinateDistance(\n        circleGeometry.getCenter(),\n        fromUserCoordinate(pointCoordinates, projection),\n      );\n      const distanceToCircumference =\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (\n    geometry.getType() === 'Circle' &&\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\n  ) {\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\n      geometry\n    );\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    return toUserCoordinate(\n      circleGeometry.getClosestPoint(\n        fromUserCoordinate(pointCoordinates, projection),\n      ),\n      projection,\n    );\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(\n    closestOnSegment(coordinate, tempSegment),\n    projection,\n  );\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style['Point'];\n  };\n}\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/events/SnapEvent\n */\nimport Event from './Event.js';\n\n/**\n * @enum {string}\n */\nexport const SnapEventType = {\n  /**\n   * Triggered upon snapping to vertex or edge\n   * @event SnapEvent#snap\n   * @api\n   */\n  SNAP: 'snap',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Snap~Snap} instances are instances of this\n */\nexport class SnapEvent extends Event {\n  /**\n   * @param {SnapEventType} type Type.\n   * @param {Object} options Options.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertex The snapped vertex.\n   * @param {import(\"../coordinate.js\").Coordinate} options.vertexPixel The pixel of the snapped vertex.\n   * @param {import(\"../Feature.js\").default} options.feature The feature being snapped.\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|null} options.segment Segment, or `null` if snapped to a vertex.\n   */\n  constructor(type, options) {\n    super(type);\n    /**\n     * The Map coordinate of the snapped point.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.vertex = options.vertex;\n    /**\n     * The Map pixel of the snapped point.\n     * @type {Array<number>&Array<number>}\n     * @api\n     */\n    this.vertexPixel = options.vertexPixel;\n    /**\n     * The feature closest to the snapped point.\n     * @type {import(\"../Feature.js\").default<import(\"../geom/Geometry.js\").default>}\n     * @api\n     */\n    this.feature = options.feature;\n    /**\n     * The segment closest to the snapped point, if snapped to a segment.\n     * @type {Array<import(\"../coordinate.js\").Coordinate>|null}\n     * @api\n     */\n    this.segment = options.segment;\n  }\n}\n","/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {SnapEvent, SnapEventType} from '../events/SnapEvent.js';\nimport {boundingExtent, buffer, createEmpty} from '../extent.js';\nimport {\n  closestOnCircle,\n  closestOnSegment,\n  squaredDistance,\n} from '../coordinate.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport {\n  fromUserCoordinate,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n * @property {import(\"../Feature.js\").default|null} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>|null} segment Segment, or `null` if snapped to a vertex.\n */\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n * @return {import(\"../Feature.js\").default|null} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\n  ) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n      .feature;\n  }\n  if (\n    /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element\n  ) {\n    return /** @type {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} */ (\n      evt\n    ).element;\n  }\n  return null;\n}\n\nconst tempSegment = [];\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'snap', SnapEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'snap', Return>} SnapOnSignature\n */\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap.js';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @fires SnapEvent\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SnapOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SnapOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {import(\"../source/Vector.js\").default|null}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Segment RTree for each layer\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @const\n     * @private\n     * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.GEOMETRY_SEGMENTERS_ = {\n      'Point': this.segmentPointGeometry_.bind(this),\n      'LineString': this.segmentLineStringGeometry_.bind(this),\n      'LinearRing': this.segmentLineStringGeometry_.bind(this),\n      'Polygon': this.segmentPolygonGeometry_.bind(this),\n      'MultiPoint': this.segmentMultiPointGeometry_.bind(this),\n      'MultiLineString': this.segmentMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.segmentMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.segmentGeometryCollectionGeometry_.bind(this),\n      'Circle': this.segmentCircleGeometry_.bind(this),\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean} [register] Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, register) {\n    register = register !== undefined ? register : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n      if (segmenter) {\n        this.indexedFeaturesExtents_[feature_uid] =\n          geometry.getExtent(createEmpty());\n        const segments =\n          /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n        segmenter(segments, geometry);\n        if (segments.length === 1) {\n          this.rBush_.insert(boundingExtent(segments[0]), {\n            feature: feature,\n            segment: segments[0],\n          });\n        } else if (segments.length > 1) {\n          const extents = segments.map((s) => boundingExtent(s));\n          const segmentsData = segments.map((segment) => ({\n            feature: feature,\n            segment: segment,\n          }));\n          this.rBush_.load(extents, segmentsData);\n        }\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_,\n        this,\n      );\n    }\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    /** @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} */\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n      this.dispatchEvent(\n        new SnapEvent(SnapEventType.SNAP, {\n          vertex: evt.coordinate,\n          vertexPixel: evt.pixel,\n          feature: result.feature,\n          segment: result.segment,\n        }),\n      );\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.addFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default>} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    if (feature) {\n      this.removeFeature(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = Object.values(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean} [unlisten] Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, unlisten) {\n    const unregister = unlisten !== undefined ? unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function (node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\n      this.getFeatures_()\n    );\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      this.rBush_.clear();\n      Object.values(this.featureChangeListenerKeys_).forEach(unlistenByKey);\n      this.featureChangeListenerKeys_ = {};\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(\n            this.features_,\n            CollectionEventType.ADD,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.features_,\n            CollectionEventType.REMOVE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(\n            this.source_,\n            VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_,\n            this,\n          ),\n          listen(\n            this.source_,\n            VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_,\n            this,\n          ),\n        );\n      }\n      features.forEach((feature) => this.addFeature(feature));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../Map.js\").default} map Map.\n   * @return {Result|null} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    const box = toUserExtent(\n      buffer(\n        boundingExtent([projectedCoordinate]),\n        map.getView().getResolution() * this.pixelTolerance_,\n      ),\n      projection,\n    );\n\n    const segments = this.rBush_.getInExtent(box);\n    const segmentsLength = segments.length;\n    if (segmentsLength === 0) {\n      return null;\n    }\n\n    let closestVertex;\n    let minSquaredDistance = Infinity;\n    let closestFeature;\n    let closestSegment = null;\n\n    const squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n    const getResult = () => {\n      if (closestVertex) {\n        const vertexPixel = map.getPixelFromCoordinate(closestVertex);\n        const squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n        if (squaredPixelDistance <= squaredPixelTolerance) {\n          return {\n            vertex: closestVertex,\n            vertexPixel: [\n              Math.round(vertexPixel[0]),\n              Math.round(vertexPixel[1]),\n            ],\n            feature: closestFeature,\n            segment: closestSegment,\n          };\n        }\n      }\n      return null;\n    };\n\n    if (this.vertex_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n          segmentData.segment.forEach((vertex) => {\n            const tempVertexCoord = fromUserCoordinate(vertex, projection);\n            const delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n            if (delta < minSquaredDistance) {\n              closestVertex = vertex;\n              minSquaredDistance = delta;\n              closestFeature = segmentData.feature;\n            }\n          });\n        }\n      }\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    if (this.edge_) {\n      for (let i = 0; i < segmentsLength; ++i) {\n        let vertex = null;\n        const segmentData = segments[i];\n        if (segmentData.feature.getGeometry().getType() === 'Circle') {\n          let circleGeometry = segmentData.feature.getGeometry();\n          const userProjection = getUserProjection();\n          if (userProjection) {\n            circleGeometry = circleGeometry\n              .clone()\n              .transform(userProjection, projection);\n          }\n          vertex = closestOnCircle(\n            projectedCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry),\n          );\n        } else {\n          const [segmentStart, segmentEnd] = segmentData.segment;\n          // points have only one coordinate\n          if (segmentEnd) {\n            tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n            tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n            vertex = closestOnSegment(projectedCoordinate, tempSegment);\n          }\n        }\n        if (vertex) {\n          const delta = squaredDistance(projectedCoordinate, vertex);\n          if (delta < minSquaredDistance) {\n            closestVertex = toUserCoordinate(vertex, projection);\n            closestSegment =\n              segmentData.feature.getGeometry().getType() === 'Circle'\n                ? null\n                : segmentData.segment;\n            minSquaredDistance = delta;\n          }\n        }\n      }\n\n      const result = getResult();\n      if (result) {\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentCircleGeometry_(segments, geometry) {\n    const projection = this.getMap().getView().getProjection();\n    let circleGeometry = geometry;\n    const userProjection = getUserProjection();\n    if (userProjection) {\n      circleGeometry = circleGeometry\n        .clone()\n        .transform(userProjection, projection);\n    }\n    const polygon = fromCircle(circleGeometry);\n    if (userProjection) {\n      polygon.transform(projection, userProjection);\n    }\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentGeometryCollectionGeometry_(segments, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n      if (segmenter) {\n        segmenter(segments, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentLineStringGeometry_(segments, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segments.push(coordinates.slice(i, i + 2));\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiLineStringGeometry_(segments, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPointGeometry_(segments, geometry) {\n    geometry.getCoordinates().forEach((point) => {\n      segments.push([point]);\n    });\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentMultiPolygonGeometry_(segments, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          segments.push(coordinates.slice(i, i + 2));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPointGeometry_(segments, geometry) {\n    segments.push([geometry.getCoordinates()]);\n  }\n\n  /**\n   * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  segmentPolygonGeometry_(segments, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        segments.push(coordinates.slice(i, i + 2));\n      }\n    }\n  }\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport InteractionProperty from './Property.js';\nimport PointerInteraction from './Pointer.js';\nimport {TRUE} from '../functions.js';\nimport {always} from '../events/condition.js';\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(Feature, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {Collection<Feature>} [features] Features contained in this collection will be able to be translated together.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * Not used if `features` is provided.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * translated or `false` otherwise. Not used if `features` is provided.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<Feature>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'translateend'|'translatestart'|'translating', TranslateEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'translateend'|'translatestart'|'translating', Return>} TranslateOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n * If you want to translate multiple features in a single action (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TranslateOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TranslateOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n    /**\n     * @type {Collection<Feature>|null}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers && !this.features_) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter && !this.features_ ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addChangeListener(\n      InteractionProperty.ACTIVE,\n      this.handleActiveChanged_,\n    );\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(event) {\n    if (!event.originalEvent || !this.condition_(event)) {\n      return false;\n    }\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND,\n          features,\n          event.coordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const projection = event.map.getView().getProjection();\n\n      const newViewCoordinate = fromUserCoordinate(newCoordinate, projection);\n      const lastViewCoordinate = fromUserCoordinate(\n        this.lastCoordinate_,\n        projection,\n      );\n      const deltaX = newViewCoordinate[0] - lastViewCoordinate[0];\n      const deltaY = newViewCoordinate[1] - lastViewCoordinate[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n      const userProjection = getUserProjection();\n\n      features.forEach(function (feature) {\n        const geom = feature.getGeometry();\n        if (userProjection) {\n          geom.transform(userProjection, projection);\n          geom.translate(deltaX, deltaY);\n          geom.transform(projection, userProjection);\n        } else {\n          geom.translate(deltaX, deltaY);\n        }\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING,\n          features,\n          newCoordinate,\n          this.startCoordinate_,\n          event,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../Map.js\").default} map Map to test the intersection on.\n   * @return {Feature} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(\n      pixel,\n      (feature, layer) => {\n        if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n          return undefined;\n        }\n        if (this.features_ && !this.features_.getArray().includes(feature)) {\n          return undefined;\n        }\n        return feature;\n      },\n      {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_,\n      },\n    );\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","/**\n * @module ol/geom/flat/flip\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, dest, destOffset) {\n  if (dest !== undefined) {\n    dest = dest;\n    destOffset = destOffset !== undefined ? destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} T\n * @typedef {T extends import(\"../render/Feature.js\").default ? typeof import(\"../render/Feature.js\").default : typeof import(\"../Feature.js\").default} FeatureToFeatureClass<T>\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends import(\"../render/Feature.js\").default ? import(\"../render/Feature.js\").default : import(\"../Feature.js\").default} FeatureClassToFeature<T>\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport {getXMLSerializer, isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nclass XMLFeature extends FeatureFormat {\n  constructor() {\n    super();\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = getXMLSerializer();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'xml';\n  }\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeatureFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromDocument(doc, options) {\n    const features = this.readFeaturesFromDocument(doc, options);\n    if (features.length > 0) {\n      return features[0];\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    if (!source) {\n      return [];\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeaturesFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readFeaturesFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromDocument(doc, options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    const features = [];\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          features,\n          this.readFeaturesFromNode(/** @type {Element} */ (n), options),\n        );\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readGeometryFromDocument(doc, options);\n    }\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source),\n        options,\n      );\n    }\n    return this.readGeometryFromNode(/** @type {Element} */ (source), options);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromDocument(doc, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readProjectionFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    return this.dataProjection;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   */\n  writeFeature(feature, options) {\n    const node = this.writeFeatureNode(feature, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  writeFeatureNode(feature, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Result.\n   * @api\n   */\n  writeFeatures(features, options) {\n    const node = this.writeFeaturesNode(features, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeFeaturesNode(features, options) {\n    return null; // not implemented\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   */\n  writeGeometry(geometry, options) {\n    const node = this.writeGeometryNode(geometry, options);\n    return this.xmlSerializer_.serializeToString(node);\n  }\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   */\n  writeGeometryNode(geometry, options) {\n    return null; // not implemented\n  }\n}\n\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeArraySerializer,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readDateTime,\n  readDecimal,\n  readPositiveInteger,\n  readString,\n  writeDateTimeTextNode,\n  writeDecimalTextNode,\n  writeNonNegativeIntegerTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.topografix.com/GPX/1/1 ' +\n  'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt,\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeArrayPusher(readRte),\n  'trk': makeArrayPusher(readTrk),\n  'wpt': makeArrayPusher(readWpt),\n});\n\n/**\n * @typedef {Object} GPXLink\n * @property {string} [text] text\n * @property {string} [type] type\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeObjectPropertySetter(readString, 'linkText'),\n  'type': makeObjectPropertySetter(readString, 'linkType'),\n});\n\n/**\n * @typedef {Object} GPXAuthor\n * @property {string} [name] name\n * @property {string} [email] email\n * @property {GPXLink} [link] link\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst AUTHOR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'email': parseEmail,\n  'link': parseLink,\n});\n\n/**\n * @typedef {Object} GPXMetadata\n * @property {string} [name] name\n * @property {string} [desc] desc\n * @property {GPXAuthor} [author] author\n * @property {GPXLink} [link] link\n * @property {number} [time] time\n * @property {string} [keywords] keywords\n * @property {Array<number>} [bounds] bounds\n * @property {Object} [extensions] extensions\n *\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'author': makeObjectPropertySetter(readAuthor),\n  'copyright': makeObjectPropertySetter(readCopyright),\n  'link': parseLink,\n  'time': makeObjectPropertySetter(readDateTime),\n  'keywords': makeObjectPropertySetter(readString),\n  'bounds': parseBounds,\n  'extensions': parseExtensions,\n});\n\n/**\n * @typedef {Object} GPXCopyright\n * @property {string} [author] author\n * @property {number} [year] year\n * @property {string} [license] license\n */\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst COPYRIGHT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'year': makeObjectPropertySetter(readPositiveInteger),\n  'license': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'rte': makeChildAppender(writeRte),\n  'trk': makeChildAppender(writeTrk),\n  'wpt': makeChildAppender(writeWpt),\n});\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node):void} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ] HasZ.\n * @property {boolean} [hasM] HasM.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nclass GPX extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  handleReadExtensions_(features) {\n    if (!features) {\n      features = [];\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (this.readExtensions_) {\n        const extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  }\n\n  /**\n   * Reads a GPX file's metadata tag, reading among other things:\n   *   - the name and description of this GPX\n   *   - its author\n   *   - the copyright associated with this GPX file\n   *\n   * Will return null if no metadata tag is present (or no valid source is given).\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {GPXMetadata | null} Metadata\n   * @api\n   */\n  readMetadata(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      return this.readMetadataFromDocument(parse(source));\n    }\n    if (isDocument(source)) {\n      return this.readMetadataFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readMetadataFromNode(source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {GPXMetadata | null} Metadata\n   */\n  readMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        const metadata = this.readMetadataFromNode(/** @type {Element} */ (n));\n        if (metadata) {\n          return metadata;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Metadata\n   */\n  readMetadataFromNode(node) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName === 'metadata'\n      ) {\n        return pushParseAndPop({}, METADATA_PARSERS, n, []);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    const feature = featureReader(node, [this.getReadOptions(node, options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      const features = pushParseAndPop([], GPX_PARSERS, node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      }\n      return [];\n    }\n    return [];\n  }\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    //FIXME Serialize metadata\n    const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}),\n      GPX_SERIALIZERS,\n      GPX_NODE_FACTORY,\n      features,\n      [options],\n    );\n    return gpx;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n  'type': makeObjectPropertySetter(readString),\n  'rtept': parseRtePt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'number': makeObjectPropertySetter(readPositiveInteger),\n  'type': makeObjectPropertySetter(readString),\n  'extensions': parseExtensions,\n  'trkseg': parseTrkSeg,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': parseTrkPt,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeObjectPropertySetter(readDecimal),\n  'time': makeObjectPropertySetter(readDateTime),\n  'magvar': makeObjectPropertySetter(readDecimal),\n  'geoidheight': makeObjectPropertySetter(readDecimal),\n  'name': makeObjectPropertySetter(readString),\n  'cmt': makeObjectPropertySetter(readString),\n  'desc': makeObjectPropertySetter(readString),\n  'src': makeObjectPropertySetter(readString),\n  'link': parseLink,\n  'sym': makeObjectPropertySetter(readString),\n  'type': makeObjectPropertySetter(readString),\n  'fix': makeObjectPropertySetter(readString),\n  'sat': makeObjectPropertySetter(readPositiveInteger),\n  'hdop': makeObjectPropertySetter(readDecimal),\n  'vdop': makeObjectPropertySetter(readDecimal),\n  'pdop': makeObjectPropertySetter(readDecimal),\n  'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n  'dgpsid': makeObjectPropertySetter(readPositiveInteger),\n  'extensions': parseExtensions,\n});\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'text': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'rtept',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'rtept': makeArraySerializer(makeChildAppender(writeWptType)),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['ele', 'time']);\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'number',\n  'type',\n  'trkseg',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg)),\n});\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'trkpt': makeChildAppender(writeWptType),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'ele',\n  'time',\n  'magvar',\n  'geoidheight',\n  'name',\n  'cmt',\n  'desc',\n  'src',\n  'link',\n  'sym',\n  'type',\n  'fix',\n  'sat',\n  'hdop',\n  'vdop',\n  'pdop',\n  'ageofdgpsdata',\n  'dgpsid',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ele': makeChildAppender(writeDecimalTextNode),\n  'time': makeChildAppender(writeDateTimeTextNode),\n  'magvar': makeChildAppender(writeDecimalTextNode),\n  'geoidheight': makeChildAppender(writeDecimalTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'cmt': makeChildAppender(writeStringTextNode),\n  'desc': makeChildAppender(writeStringTextNode),\n  'src': makeChildAppender(writeStringTextNode),\n  'link': makeChildAppender(writeLink),\n  'sym': makeChildAppender(writeStringTextNode),\n  'type': makeChildAppender(writeStringTextNode),\n  'fix': makeChildAppender(writeStringTextNode),\n  'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n  'hdop': makeChildAppender(writeDecimalTextNode),\n  'vdop': makeChildAppender(writeDecimalTextNode),\n  'pdop': makeChildAppender(writeDecimalTextNode),\n  'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n  'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk',\n};\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, nodeName) {\n  const geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  );\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>} [ends] Ends.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = 'XYZM';\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = 'XYZ';\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = 'XYM';\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = (flatCoordinates.length / 4) * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = (ends[i] / 4) * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXAuthor | undefined} Person object.\n */\nfunction readAuthor(node, objectStack) {\n  const values = pushParseAndPop({}, AUTHOR_PARSERS, node, objectStack);\n  if (values) {\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<any>} objectStack Object stack.\n * @return {GPXCopyright | undefined} Person object.\n */\nfunction readCopyright(node, objectStack) {\n  const values = pushParseAndPop({}, COPYRIGHT_PARSERS, node, objectStack);\n  if (values) {\n    const author = node.getAttribute('author');\n    if (author !== null) {\n      values['author'] = author;\n    }\n    return values;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseBounds(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const minlat = node.getAttribute('minlat');\n  const minlon = node.getAttribute('minlon');\n  const maxlat = node.getAttribute('maxlat');\n  const maxlon = node.getAttribute('maxlon');\n  if (\n    minlon !== null &&\n    minlat !== null &&\n    maxlon !== null &&\n    maxlat !== null\n  ) {\n    values['bounds'] = [\n      [parseFloat(minlon), parseFloat(minlat)],\n      [parseFloat(maxlon), parseFloat(maxlat)],\n    ];\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseEmail(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  const domain = node.getAttribute('domain');\n  if (id !== null && domain !== null) {\n    values['email'] = `${id}@${domain}`;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      rteValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      rteValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const flatCoordinates = /** @type {Array<number>} */ (\n      trkValues['flatCoordinates']\n    );\n    const layoutOptions = /** @type {LayoutOptions} */ (\n      trkValues['layoutOptions']\n    );\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'layoutOptions': {},\n    },\n    RTE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop(\n    {\n      'flatCoordinates': [],\n      'ends': [],\n      'layoutOptions': {},\n    },\n    TRK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates =\n    /** @type {Array<number>} */\n    (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [properties['linkText'], properties['linkType']];\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    link,\n    objectStack,\n    LINK_SEQUENCE,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case 'XYZM':\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n    // fall through\n    case 'XYZ':\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case 'XYM':\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n    // pass\n  }\n  const orderedKeys =\n    node.nodeName == 'rtept'\n      ? RTEPT_TYPE_SEQUENCE[namespaceURI]\n      : WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'LineString') {\n    const lineString = /** @type {LineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    RTE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['properties'] = properties;\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'MultiLineString') {\n    const multiLineString = /** @type {MultiLineString} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    TRK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(\n    context,\n    TRKSEG_SERIALIZERS,\n    TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(),\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  const geometry = feature.getGeometry();\n  if (geometry.getType() == 'Point') {\n    const point = /** @type {Point} */ (\n      transformGeometryWithOptions(geometry, true, options)\n    );\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\nexport default GPX;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nclass TextFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'text';\n  }\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromText(\n      getText(source),\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromText(getText(source));\n  }\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjectionFromText(text) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return this.writeFeatureText(feature, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return this.writeFeaturesText(features, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  }\n  return '';\n}\n\nexport default TextFeature;\n","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {'barometric' | 'gps' | 'none'} IGCZ\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n */\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n  /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nclass IGC extends TextFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : 'none';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const altitudeMode = this.altitudeMode_;\n    const lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    const properties = {};\n    const flatCoordinates = [];\n    let year = 2000;\n    let month = 0;\n    let day = 1;\n    let lastDateTime = -1;\n    let i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      let m;\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          const hour = parseInt(m[1], 10);\n          const minute = parseInt(m[2], 10);\n          const second = parseInt(m[3], 10);\n          let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != 'none') {\n            let z;\n            if (altitudeMode == 'gps') {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == 'barometric') {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          let dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    const layout = altitudeMode == 'none' ? 'XYM' : 'XYZM';\n    const lineString = new LineString(flatCoordinates, layout);\n    const feature = new Feature(\n      transformGeometryWithOptions(lineString, false, options),\n    );\n    feature.setProperties(properties, true);\n    return feature;\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    if (feature) {\n      return [feature];\n    }\n    return [];\n  }\n}\n\nexport default IGC;\n","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport Icon from '../style/Icon.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  isDocument,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeReplacer,\n  makeSequence,\n  makeSimpleNodeFactory,\n  makeStructureNS,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {asArray} from '../color.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readBoolean,\n  readDecimal,\n  readString,\n  writeBooleanTextNode,\n  writeCDATASection,\n  writeDecimalTextNode,\n  writeStringTextNode,\n} from './xsd.js';\nimport {toRadians} from '../math.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/Icon.js\").IconAnchorUnits} yunits Units of Y.\n * @property {import(\"../style/Icon.js\").IconOrigin} [origin] Origin.\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2',\n];\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION =\n  'http://www.opengis.net/kml/2.2 ' +\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n/**\n * @type {Object<string, import(\"../style/Icon.js\").IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': 'fraction',\n  'pixels': 'pixels',\n  'insetPixels': 'pixels',\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': extendedDataParser,\n  'Region': regionParser,\n  'Link': linkParser,\n  'address': makeObjectPropertySetter(readString),\n  'description': makeObjectPropertySetter(readString),\n  'name': makeObjectPropertySetter(readString),\n  'open': makeObjectPropertySetter(readBoolean),\n  'phoneNumber': makeObjectPropertySetter(readString),\n  'visibility': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'href': makeObjectPropertySetter(readURI),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CAMERA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  Altitude: makeObjectPropertySetter(readDecimal),\n  Longitude: makeObjectPropertySetter(readDecimal),\n  Latitude: makeObjectPropertySetter(readDecimal),\n  Tilt: makeObjectPropertySetter(readDecimal),\n  AltitudeMode: makeObjectPropertySetter(readString),\n  Heading: makeObjectPropertySetter(readDecimal),\n  Roll: makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LatLonAltBox': latLonAltBoxParser,\n  'Lod': lodParser,\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Document': makeChildAppender(writeDocument),\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {Fill|null}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {import(\"../style/Icon.js\").IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke|null}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text|null}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style|null}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n  return 32 / Math.min(size[0], size[1]);\n}\n\nfunction createStyleDefaults() {\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR,\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = 'pixels';\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: 'bottom-left',\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC,\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1,\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2,\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8,\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0,\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n\n/**\n * @type {HTMLTextAreaElement}\n */\nlet TEXTAREA;\n\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n  return href;\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * @api\n */\nclass KML extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle\n      ? options.defaultStyle\n      : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ =\n      options.extractStyles !== undefined ? options.extractStyles : true;\n\n    /**\n     * @type {boolean}\n     */\n    this.writeStyles_ =\n      options.writeStyles !== undefined ? options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ =\n      options.showPointNames !== undefined ? options.showPointNames : true;\n\n    /**\n     * @type {null|string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    /**\n     * @type {IconUrlFunction}\n     */\n    this.iconUrlFunction_ = options.iconUrlFunction\n      ? options.iconUrlFunction\n      : defaultIconUrlFunction;\n\n    this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  readDocumentOrFolder_(node, objectStack) {\n    // FIXME use scope somehow\n    const parsersNS = makeStructureNS(NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this),\n    });\n    /** @type {Array<Feature>} */\n    // @ts-ignore\n    const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  readPlacemark_(node, objectStack) {\n    const object = pushParseAndPop(\n      {'geometry': null},\n      PLACEMARK_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (!object) {\n      return undefined;\n    }\n    const feature = new Feature();\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n      objectStack[0]\n    );\n\n    const geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      const style = object['Style'];\n      const styleUrl = object['styleUrl'];\n      const styleFunction = createFeatureStyleFunction(\n        style,\n        styleUrl,\n        this.defaultStyle_,\n        this.sharedStyles_,\n        this.showPointNames_,\n      );\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyle_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id !== null) {\n      const style = readStyle.call(this, node, objectStack);\n      if (style) {\n        let styleUri;\n        let baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          const url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  readSharedStyleMap_(node, objectStack) {\n    const id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    let styleUri;\n    let baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      const url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return null;\n    }\n    const feature = this.readPlacemark_(node, [\n      this.getReadOptions(node, options),\n    ]);\n    if (feature) {\n      return feature;\n    }\n    return null;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    if (!NAMESPACE_URIS.includes(node.namespaceURI)) {\n      return [];\n    }\n    let features;\n    const localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (features) {\n        return features;\n      }\n      return [];\n    }\n    if (localName == 'Placemark') {\n      const feature = this.readPlacemark_(node, [\n        this.getReadOptions(node, options),\n      ]);\n      if (feature) {\n        return [feature];\n      }\n      return [];\n    }\n    if (localName == 'kml') {\n      features = [];\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        const fs = this.readFeaturesFromNode(n, options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  readName(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readNameFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readNameFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  readNameFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        const name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  readNameFromNode(node) {\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' ||\n          localName == 'Folder' ||\n          localName == 'Placemark' ||\n          localName == 'kml')\n      ) {\n        const name = this.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  readNetworkLinks(source) {\n    const networkLinks = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(\n        networkLinks,\n        this.readNetworkLinksFromNode(/** @type {Element} */ (source)),\n      );\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromDocument(doc) {\n    const networkLinks = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(\n          networkLinks,\n          this.readNetworkLinksFromNode(/** @type {Element} */ (n)),\n        );\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  readNetworkLinksFromNode(node) {\n    const networkLinks = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        n.localName == 'NetworkLink'\n      ) {\n        const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  }\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  readRegion(source) {\n    const regions = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        regions,\n        this.readRegionFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  readRegionFromDocument(doc) {\n    const regions = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  readRegionFromNode(node) {\n    const regions = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName == 'Region') {\n        const obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n        regions.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName == 'Document' || localName == 'Folder' || localName == 'kml')\n      ) {\n        extend(regions, this.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  }\n\n  /**\n   * @typedef {Object} KMLCamera Specifies the observer's viewpoint and associated view parameters.\n   * @property {number} [Latitude] Latitude of the camera.\n   * @property {number} [Longitude] Longitude of the camera.\n   * @property {number} [Altitude] Altitude of the camera.\n   * @property {string} [AltitudeMode] Floor-related altitude mode.\n   * @property {number} [Heading] Horizontal camera rotation.\n   * @property {number} [Tilt] Lateral camera rotation.\n   * @property {number} [Roll] Vertical camera rotation.\n   */\n\n  /**\n   * Read the cameras of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCamera(source) {\n    const cameras = [];\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      extend(cameras, this.readCameraFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(\n        cameras,\n        this.readCameraFromDocument(/** @type {Document} */ (source)),\n      );\n    } else {\n      extend(cameras, this.readCameraFromNode(/** @type {Element} */ (source)));\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<KMLCamera>} Cameras.\n   */\n  readCameraFromDocument(doc) {\n    const cameras = [];\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType === Node.ELEMENT_NODE) {\n        extend(cameras, this.readCameraFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<KMLCamera>} Cameras.\n   * @api\n   */\n  readCameraFromNode(node) {\n    const cameras = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (NAMESPACE_URIS.includes(n.namespaceURI) && n.localName === 'Camera') {\n        const obj = pushParseAndPop({}, CAMERA_PARSERS, n, []);\n        cameras.push(obj);\n      }\n    }\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const localName = n.localName;\n      if (\n        NAMESPACE_URIS.includes(n.namespaceURI) &&\n        (localName === 'Document' ||\n          localName === 'Folder' ||\n          localName === 'Placemark' ||\n          localName === 'kml')\n      ) {\n        extend(cameras, this.readCameraFromNode(n));\n      }\n    }\n    return cameras;\n  }\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATION,\n    );\n\n    const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n        node: kml,\n      };\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    const properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    const values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(\n      context,\n      KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      [options],\n      orderedKeys,\n      this,\n    );\n    return kml;\n  }\n}\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  const textOffset = [0, 0];\n  /** @type {CanvasTextAlign} */\n  let textAlign = 'start';\n  const imageStyle = foundStyle.getImage();\n  if (imageStyle) {\n    const imageSize = imageStyle.getSize();\n    if (imageSize && imageSize.length == 2) {\n      const imageScale = imageStyle.getScaleArray();\n      const anchor = imageStyle.getAnchor();\n      // Offset the label to be centered to the right of the icon,\n      // if there is one.\n      textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n      textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n      textAlign = 'left';\n    }\n  }\n  let textStyle = foundStyle.getText();\n  if (textStyle) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    textStyle = textStyle.clone();\n    textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    image: imageStyle,\n    text: textStyle,\n  });\n  return nameStyle;\n}\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(\n  style,\n  styleUrl,\n  defaultStyle,\n  sharedStyles,\n  showPointNames,\n) {\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n      let drawName = showPointNames;\n      let name = '';\n      let multiGeometryPoints = [];\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          if (geometry instanceof GeometryCollection) {\n            multiGeometryPoints = geometry\n              .getGeometriesArrayRecursive()\n              .filter(function (geometry) {\n                const type = geometry.getType();\n                return type === 'Point' || type === 'MultiPoint';\n              });\n            drawName = multiGeometryPoints.length > 0;\n          } else {\n            const type = geometry.getType();\n            drawName = type === 'Point' || type === 'MultiPoint';\n          }\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n        // convert any html character codes\n        if (drawName && /&[^&]+;/.test(name)) {\n          if (!TEXTAREA) {\n            TEXTAREA = document.createElement('textarea');\n          }\n          TEXTAREA.innerHTML = name;\n          name = TEXTAREA.value;\n        }\n      }\n\n      let featureStyle = defaultStyle;\n      if (style) {\n        featureStyle = style;\n      } else if (styleUrl) {\n        featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n      }\n      if (drawName) {\n        const nameStyle = createNameStyleFunction(featureStyle[0], name);\n        if (multiGeometryPoints.length > 0) {\n          // in multigeometries restrict the name style to points and create a\n          // style without image or text for geometries requiring fill or stroke\n          // including any polygon specific style if there is one\n          nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n          const baseStyle = new Style({\n            geometry: featureStyle[0].getGeometry(),\n            image: null,\n            fill: featureStyle[0].getFill(),\n            stroke: featureStyle[0].getStroke(),\n            text: null,\n          });\n          return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n        }\n        return nameStyle;\n      }\n      return featureStyle;\n    }\n  );\n}\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  }\n  if (typeof styleValue === 'string') {\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  }\n  return defaultStyle;\n}\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255,\n    ];\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  s = s.replace(/\\s*,\\s*/g, ',');\n  const re =\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n  // KML files in the wild occasionally forget the leading\n  // `#` on styleUrlsdefined in the same document.\n  const s = getAllTextContent(node, false)\n    .trim()\n    .replace(/^(?!.*#)/, '#');\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  }\n  return s;\n}\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  /** @type {import('../style/Icon.js').IconOrigin} */\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-left';\n    } else {\n      origin = 'top-left';\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = 'bottom-right';\n    } else {\n      origin = 'top-right';\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin,\n  };\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Pair': pairDataParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeObjectPropertySetter(readIcon),\n  'color': makeObjectPropertySetter(readColor),\n  'heading': makeObjectPropertySetter(readDecimal),\n  'hotSpot': makeObjectPropertySetter(readVec2),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n  let src;\n  const href = /** @type {string|undefined} */ (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  /** @type {import('../style/Icon.js').IconOrigin|undefined} */\n  let anchorOrigin = 'bottom-left';\n  const hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (/^https?:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n    if (src.includes('pushpin')) {\n      anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('arrow-reverse')) {\n      anchor = [54, 42];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    } else if (src.includes('paddle')) {\n      anchor = [32, 1];\n      anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n      anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */ (IconObject['x']);\n  const y = /** @type {number|undefined} */ (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */ (IconObject['w']);\n  const h = /** @type {number|undefined} */ (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */ (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  const scale = /** @type {number|undefined} */ (object['scale']);\n\n  const color = /** @type {Array<number>|undefined} */ (object['color']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: this.crossOrigin_,\n      offset: offset,\n      offsetOrigin: 'bottom-left',\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: this.iconUrlFunction_(src),\n      color: color,\n    });\n\n    const imageScale = imageStyle.getScaleArray()[0];\n    const imageSize = imageStyle.getSize();\n    if (imageSize === null) {\n      const imageState = imageStyle.getImageState();\n      if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n        const listener = function () {\n          const imageState = imageStyle.getImageState();\n          if (\n            !(\n              imageState === ImageState.IDLE ||\n              imageState === ImageState.LOADING\n            )\n          ) {\n            const imageSize = imageStyle.getSize();\n            if (imageSize && imageSize.length == 2) {\n              const resizeScale = scaleForSize(imageSize);\n              imageStyle.setScale(imageScale * resizeScale);\n            }\n            imageStyle.unlistenImageChange(listener);\n          }\n        };\n        imageStyle.listenImageChange(listener);\n        if (imageState === ImageState.IDLE) {\n          imageStyle.load();\n        }\n      }\n    } else if (imageSize.length == 2) {\n      const resizeScale = scaleForSize(imageSize);\n      imageStyle.setScale(imageScale * resizeScale);\n    }\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'scale': makeObjectPropertySetter(readScale),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color:\n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    }),\n    scale: /** @type {number|undefined} */ (object['scale']),\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'width': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeObjectPropertySetter(readColor),\n  'fill': makeObjectPropertySetter(readBoolean),\n  'outline': makeObjectPropertySetter(readBoolean),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color:\n      /** @type {import(\"../color.js\").Color} */\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const coordinates = gxTrackObject.coordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    coordinates.push([x, y, z]);\n  } else {\n    coordinates.push([]);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n  'Track': makeArrayPusher(readGxTrack),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop(\n    [],\n    GX_MULTITRACK_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'when': whenParser,\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      coordinates: [],\n      whens: [],\n    }),\n    GX_TRACK_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = [];\n  const coordinates = gxTrackObject.coordinates;\n  const whens = gxTrackObject.whens;\n  for (\n    let i = 0, ii = Math.min(coordinates.length, whens.length);\n    i < ii;\n    ++i\n  ) {\n    if (coordinates[i].length == 3) {\n      flatCoordinates.push(\n        coordinates[i][0],\n        coordinates[i][1],\n        coordinates[i][2],\n        whens[i],\n      );\n    }\n  }\n  return new LineString(flatCoordinates, 'XYZM');\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeObjectPropertySetter(readURI),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  }\n  return null;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'coordinates': makeReplacer(readFlatCoordinates),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(\n    null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeObjectPropertySetter(readBoolean),\n  'tessellate': makeObjectPropertySetter(readBoolean),\n  'altitudeMode': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(flatCoordinates, 'XYZ');\n    lineString.setProperties(properties, true);\n    return lineString;\n  }\n  return undefined;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(flatCoordinates, 'XYZ', [\n      flatCoordinates.length,\n    ]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeArrayPusher(readLineString),\n  'LinearRing': makeArrayPusher(readLinearRing),\n  'MultiGeometry': makeArrayPusher(readMultiGeometry),\n  'Point': makeArrayPusher(readPoint),\n  'Polygon': makeArrayPusher(readPolygon),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop(\n    [],\n    MULTI_GEOMETRY_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == 'Point') {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'LineString') {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'Polygon') {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == 'GeometryCollection') {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      throw new Error('Unknown geometry type found');\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop(\n    {},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(flatCoordinates, 'XYZ');\n    point.setProperties(properties, true);\n    return point;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'innerBoundaryIs': innerBoundaryIsParser,\n  'outerBoundaryIs': outerBoundaryIsParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS,\n    node,\n    objectStack,\n  );\n  const flatLinearRings = pushParseAndPop(\n    [null],\n    FLAT_LINEAR_RINGS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRings && flatLinearRings[0]) {\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    const polygon = new Polygon(flatCoordinates, 'XYZ', ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  }\n  return undefined;\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': iconStyleParser,\n  'LabelStyle': labelStyleParser,\n  'LineStyle': lineStyleParser,\n  'PolyStyle': polyStyleParser,\n});\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {},\n    STYLE_PARSERS,\n    node,\n    objectStack,\n    this,\n  );\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle =\n    /** @type {Fill} */\n    (\n      'fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE\n    );\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = /** @type {import(\"../style/Image.js\").default} */ (\n        styleObject['imageStyle']\n      );\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  const textStyle =\n    /** @type {Text} */\n    (\n      'textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE\n    );\n  const strokeStyle =\n    /** @type {Stroke} */\n    (\n      'strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE\n    );\n  const outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    // if the polystyle specifies no outline two styles are needed,\n    // one for non-polygon geometries where linestrings require a stroke\n    // and one for polygons where there should be no stroke\n    return [\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type !== 'Polygon' && type !== 'MultiPolygon';\n                }),\n            );\n          }\n          if (type !== 'Polygon' && type !== 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        image: imageStyle,\n        stroke: strokeStyle,\n        text: textStyle,\n        zIndex: undefined, // FIXME\n      }),\n      new Style({\n        geometry: function (feature) {\n          const geometry = feature.getGeometry();\n          const type = geometry.getType();\n          if (type === 'GeometryCollection') {\n            const collection =\n              /** @type {import(\"../geom/GeometryCollection\").default} */ (\n                geometry\n              );\n            return new GeometryCollection(\n              collection\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Polygon' || type === 'MultiPolygon';\n                }),\n            );\n          }\n          if (type === 'Polygon' || type === 'MultiPolygon') {\n            return geometry;\n          }\n        },\n        fill: fillStyle,\n        stroke: null,\n        zIndex: undefined, // FIXME\n      }),\n    ];\n  }\n  return [\n    new Style({\n      fill: fillStyle,\n      image: imageStyle,\n      stroke: strokeStyle,\n      text: textStyle,\n      zIndex: undefined, // FIXME\n    }),\n  ];\n}\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = false;\n  hasTessellate = false;\n  hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'displayName': makeObjectPropertySetter(readString),\n  'value': makeObjectPropertySetter(readString),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  if (name && featureObject.displayName) {\n    featureObject[name] = {\n      value: featureObject.value,\n      displayName: featureObject.displayName,\n      toString: function () {\n        return featureObject.value;\n      },\n    };\n  } else if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': dataParser,\n  'SchemaData': schemaDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertySetter(readStyle),\n  'key': makeObjectPropertySetter(readString),\n  'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */ (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const style = /** @type {Style} */ (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue.call(this, node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    throw new Error('`styleMapValue` has an unknown type');\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'SimpleData': simpleDataParser,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (\n      objectStack[objectStack.length - 1]\n    );\n    featureObject[name] = data;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'altitudeMode': makeObjectPropertySetter(readString),\n  'minAltitude': makeObjectPropertySetter(readDecimal),\n  'maxAltitude': makeObjectPropertySetter(readDecimal),\n  'north': makeObjectPropertySetter(readDecimal),\n  'south': makeObjectPropertySetter(readDecimal),\n  'east': makeObjectPropertySetter(readDecimal),\n  'west': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop(\n    {},\n    LAT_LON_ALT_BOX_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (\n    objectStack[objectStack.length - 1]\n  );\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north']),\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'minLodPixels': makeObjectPropertySetter(readDecimal),\n  'maxLodPixels': makeObjectPropertySetter(readDecimal),\n  'minFadeExtent': makeObjectPropertySetter(readDecimal),\n  'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n  // allows multiple, so we parse multiple here too.\n  'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  const innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]),\n    INNER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (innerBoundaryFlatLinearRings.length > 0) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(...innerBoundaryFlatLinearRings);\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeReplacer(readFlatLinearRing),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(\n    undefined,\n    OUTER_BOUNDARY_IS_PARSERS,\n    node,\n    objectStack,\n  );\n  if (flatLinearRing) {\n    const flatLinearRings =\n      /** @type {Array<Array<number>>} */\n      (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject =\n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = rgba.length == 4 ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = hex.length == 1 ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == 'XY' || layout == 'XYM') {\n    dimension = 2;\n  } else if (layout == 'XYZ' || layout == 'XYZM') {\n    dimension = 3;\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Data': makeChildAppender(writeDataNode),\n  'value': makeChildAppender(writeDataNodeValue),\n  'displayName': makeChildAppender(writeDataNodeName),\n});\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.displayName],\n        objectStack,\n        ['displayName'],\n      );\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(\n        context,\n        EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY,\n        [value.value],\n        objectStack,\n        ['value'],\n      );\n    }\n  } else {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      [value],\n      objectStack,\n      ['value'],\n    );\n  }\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Placemark': makeChildAppender(writePlacemark),\n});\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function (value, objectStack, nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY,\n    features,\n    objectStack,\n    undefined,\n    this,\n  );\n}\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(\n      context,\n      EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY,\n      [{name: names[i], value: values[i]}],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS,\n  ['href'],\n  makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'href': makeChildAppender(writeStringTextNode),\n  },\n  makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n  }),\n);\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function (value, objectStack, nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + nodeName);\n};\n\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n  orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_SERIALIZERS,\n    GX_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'scale',\n  'heading',\n  'Icon',\n  'color',\n  'hotSpot',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'Icon': makeChildAppender(writeIcon),\n  'color': makeChildAppender(writeColorTextNode),\n  'heading': makeChildAppender(writeDecimalTextNode),\n  'hotSpot': makeChildAppender(writeVec2),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const /** @type {Object<string, any>} */ properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src,\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {Vec2} */ hotSpot = {\n          x: anchor[0],\n          xunits: 'pixels',\n          y: size[1] - anchor[1],\n          yunits: 'pixels',\n        };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  let scale = style.getScaleArray()[0];\n  let imageSize = size;\n  if (imageSize === null) {\n    imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n  }\n  if (imageSize.length == 2) {\n    const resizeScale = scaleForSize(imageSize);\n    scale = scale / resizeScale;\n  }\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const color = style.getColor();\n  if (color) {\n    properties['color'] = color;\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'scale',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'scale': makeChildAppender(writeScaleTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'width': makeChildAppender(writeDecimalTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': Number(style.getWidth()) || 1,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry',\n};\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function (value, objectStack, nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()\n      ],\n    );\n  }\n};\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  let geometries = [];\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type === 'GeometryCollection') {\n    /** @type {GeometryCollection} */ (geometry)\n      .getGeometriesArrayRecursive()\n      .forEach(function (geometry) {\n        const type = geometry.getType();\n        if (type === 'MultiPoint') {\n          geometries = geometries.concat(\n            /** @type {MultiPoint} */ (geometry).getPoints(),\n          );\n        } else if (type === 'MultiLineString') {\n          geometries = geometries.concat(\n            /** @type {MultiLineString} */ (geometry).getLineStrings(),\n          );\n        } else if (type === 'MultiPolygon') {\n          geometries = geometries.concat(\n            /** @type {MultiPolygon} */ (geometry).getPolygons(),\n          );\n        } else if (\n          type === 'Point' ||\n          type === 'LineString' ||\n          type === 'Polygon'\n        ) {\n          geometries.push(geometry);\n        } else {\n          throw new Error('Unknown geometry type');\n        }\n      });\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type === 'MultiPoint') {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type === 'MultiLineString') {\n    geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type === 'MultiPolygon') {\n    geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    throw new Error('Unknown geometry type');\n  }\n  pushSerializeAndPop(\n    context,\n    MULTI_GEOMETRY_SERIALIZERS,\n    factory,\n    geometries,\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(\n    context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY,\n    [linearRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'ExtendedData': makeChildAppender(writeExtendedData),\n  'MultiGeometry': makeChildAppender(writeMultiGeometry),\n  'LineString': makeChildAppender(writePrimitiveGeometry),\n  'LinearRing': makeChildAppender(writePrimitiveGeometry),\n  'Point': makeChildAppender(writePrimitiveGeometry),\n  'Polygon': makeChildAppender(writePolygon),\n  'Style': makeChildAppender(writeStyle),\n  'address': makeChildAppender(writeStringTextNode),\n  'description': makeChildAppender(writeStringTextNode),\n  'name': makeChildAppender(writeStringTextNode),\n  'open': makeChildAppender(writeBooleanTextNode),\n  'phoneNumber': makeChildAppender(writeStringTextNode),\n  'styleUrl': makeChildAppender(writeStringTextNode),\n  'visibility': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'name',\n  'open',\n  'visibility',\n  'address',\n  'phoneNumber',\n  'description',\n  'styleUrl',\n  'Style',\n]);\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {\n    'address': 1,\n    'description': 1,\n    'name': 1,\n    'open': 1,\n    'phoneNumber': 1,\n    'styleUrl': 1,\n    'visibility': 1,\n  };\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {})\n    .sort()\n    .filter(function (v) {\n      return !filter[v];\n    });\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const styleArray = Array.isArray(styles) ? styles : [styles];\n      let pointStyles = styleArray;\n      if (feature.getGeometry()) {\n        pointStyles = styleArray.filter(function (style) {\n          const geometry = style.getGeometryFunction()(feature);\n          if (geometry) {\n            const type = geometry.getType();\n            if (type === 'GeometryCollection') {\n              return /** @type {GeometryCollection} */ (geometry)\n                .getGeometriesArrayRecursive()\n                .filter(function (geometry) {\n                  const type = geometry.getType();\n                  return type === 'Point' || type === 'MultiPoint';\n                }).length;\n            }\n            return type === 'Point' || type === 'MultiPoint';\n          }\n        });\n        ('Point');\n      }\n      if (this.writeStyles_) {\n        let lineStyles = styleArray;\n        let polyStyles = styleArray;\n        if (feature.getGeometry()) {\n          lineStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'LineString' || type === 'MultiLineString';\n                  }).length;\n              }\n              return type === 'LineString' || type === 'MultiLineString';\n            }\n          });\n          polyStyles = styleArray.filter(function (style) {\n            const geometry = style.getGeometryFunction()(feature);\n            if (geometry) {\n              const type = geometry.getType();\n              if (type === 'GeometryCollection') {\n                return /** @type {GeometryCollection} */ (geometry)\n                  .getGeometriesArrayRecursive()\n                  .filter(function (geometry) {\n                    const type = geometry.getType();\n                    return type === 'Polygon' || type === 'MultiPolygon';\n                  }).length;\n              }\n              return type === 'Polygon' || type === 'MultiPolygon';\n            }\n          });\n        }\n        properties['Style'] = {\n          pointStyles: pointStyles,\n          lineStyles: lineStyles,\n          polyStyles: polyStyles,\n        };\n      }\n      if (pointStyles.length && properties['name'] === undefined) {\n        const textStyle = pointStyles[0].getText();\n        if (textStyle) {\n          properties['name'] = textStyle.getText();\n        }\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(\n      context,\n      PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY,\n      [namesAndValues],\n      objectStack,\n    );\n  }\n\n  // serialize geometry\n  const options = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n    objectStack[0]\n  );\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(\n    context,\n    PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY,\n    [geometry],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'extrude',\n  'tessellate',\n  'altitudeMode',\n  'coordinates',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'extrude': makeChildAppender(writeBooleanTextNode),\n  'tessellate': makeChildAppender(writeBooleanTextNode),\n  'altitudeMode': makeChildAppender(writeStringTextNode),\n  'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'color',\n  'fill',\n  'outline',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n  'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings,\n    objectStack,\n  );\n  // outer ring\n  pushSerializeAndPop(\n    context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing],\n    objectStack,\n  );\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'color': makeChildAppender(writeColorTextNode),\n  'fill': makeChildAppender(writeBooleanTextNode),\n  'outline': makeChildAppender(writeBooleanTextNode),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const fill = style.getFill();\n  const stroke = style.getStroke();\n  const properties = {\n    'color': fill ? fill.getColor() : undefined,\n    'fill': fill ? undefined : false,\n    'outline': stroke ? undefined : false,\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    POLY_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nconst STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n  'IconStyle',\n  'LabelStyle',\n  'LineStyle',\n  'PolyStyle',\n]);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nconst STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n  'IconStyle': makeChildAppender(writeIconStyle),\n  'LabelStyle': makeChildAppender(writeLabelStyle),\n  'LineStyle': makeChildAppender(writeLineStyle),\n  'PolyStyle': makeChildAppender(writePolyStyle),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n  const /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  const properties = {};\n  if (styles.pointStyles.length) {\n    const textStyle = styles.pointStyles[0].getText();\n    if (textStyle) {\n      properties['LabelStyle'] = textStyle;\n    }\n    const imageStyle = styles.pointStyles[0].getImage();\n    if (\n      imageStyle &&\n      typeof (/** @type {?} */ (imageStyle).getSrc) === 'function'\n    ) {\n      properties['IconStyle'] = imageStyle;\n    }\n  }\n  if (styles.lineStyles.length) {\n    const strokeStyle = styles.lineStyles[0].getStroke();\n    if (strokeStyle) {\n      properties['LineStyle'] = strokeStyle;\n    }\n  }\n  if (styles.polyStyles.length) {\n    const strokeStyle = styles.polyStyles[0].getStroke();\n    if (strokeStyle && !properties['LineStyle']) {\n      properties['LineStyle'] = strokeStyle;\n    }\n    properties['PolyStyle'] = styles.polyStyles[0];\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(\n    context,\n    STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack,\n    orderedKeys,\n  );\n}\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\nexport default KML;\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n * @property {FeatureClassToFeature} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import(\"../render/Feature.js\").default]\n * @extends {FeatureFormat<T>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id,\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {makeStructureNS, pushParseAndPop} from '../xml.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @const\n * @type {Array<null>}\n */\nconst NAMESPACE_URIS = [null];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'nd': readNd,\n  'tag': readTag,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'node': readNode,\n  'way': readWay,\n});\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](https://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nclass OSMXML extends XMLFeature {\n  constructor() {\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    options = this.getReadOptions(node, options);\n    if (node.localName == 'osm') {\n      const state = pushParseAndPop(\n        {\n          nodes: {},\n          ways: [],\n          features: [],\n        },\n        PARSERS,\n        node,\n        [options],\n      );\n      // parse nodes in ways\n      for (let j = 0; j < state.ways.length; j++) {\n        const values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        const flatCoordinates = values.flatCoordinates;\n        if (!flatCoordinates.length) {\n          for (let i = 0, ii = values.ndrefs.length; i < ii; i++) {\n            const point = state.nodes[values.ndrefs[i]];\n            extend(flatCoordinates, point);\n          }\n        }\n        let geometry;\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, 'XY', [\n            flatCoordinates.length,\n          ]);\n        } else {\n          geometry = new LineString(flatCoordinates, 'XY');\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        const feature = new Feature(geometry);\n        if (values.id !== undefined) {\n          feature.setId(values.id);\n        }\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'tag': readTag,\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  const options = /** @type {import(\"./Feature.js\").ReadOptions} */ (\n    objectStack[0]\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  const coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')),\n  ];\n  state.nodes[id] = coordinates;\n\n  const values = pushParseAndPop(\n    {\n      tags: {},\n    },\n    NODE_PARSERS,\n    node,\n    objectStack,\n  );\n  if (!isEmpty(values.tags)) {\n    const geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    const feature = new Feature(geometry);\n    if (id !== undefined) {\n      feature.setId(id);\n    }\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  const id = node.getAttribute('id');\n  const values = pushParseAndPop(\n    {\n      id: id,\n      ndrefs: [],\n      flatCoordinates: [],\n      tags: {},\n    },\n    WAY_PARSERS,\n    node,\n    objectStack,\n  );\n  const state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n  if (node.hasAttribute('lon') && node.hasAttribute('lat')) {\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lon')));\n    values.flatCoordinates.push(parseFloat(node.getAttribute('lat')));\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\nexport default OSMXML;\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {get as getProjection} from '../proj.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {import(\"../geom/Geometry.js\").GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nclass Polyline extends TextFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout\n      ? options.geometryLayout\n      : 'XY';\n  }\n\n  /**\n   * @protected\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromText(text, options) {\n    const geometry = this.readGeometryFromText(text, options);\n    return new Feature(geometry);\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromText(text, options) {\n    const feature = this.readFeatureFromText(text, options);\n    return [feature];\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromText(text, options) {\n    const stride = getStrideForLayout(this.geometryLayout_);\n    const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    const coordinates = inflateCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    const lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(\n      lineString,\n      false,\n      this.adaptOptions(options),\n    );\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeatureText(feature, options) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, options);\n    }\n    throw new Error('Expected `feature` to have a geometry');\n  }\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeFeaturesText(features, options) {\n    return this.writeFeatureText(features[0], options);\n  }\n\n  /**\n   * @param {LineString} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  writeGeometryText(geometry, options) {\n    geometry =\n      /** @type {LineString} */\n      (\n        transformGeometryWithOptions(geometry, true, this.adaptOptions(options))\n      );\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  }\n}\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, factor) {\n  factor = factor ? factor : 1e5;\n  let d;\n\n  /** @type {Array<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii; ) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, factor) {\n  factor = factor ? factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, factor) {\n  factor = factor ? factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n  }\n  return numbers;\n}\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value,\n    encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\nexport default Polyline;\n","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nclass TopoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {?Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    if (object.type == 'Topology') {\n      const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      let transform,\n        scale = null,\n        translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      const arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      const features = [];\n      const topoJSONFeatures = topoJSONTopology['objects'];\n      const property = this.layerName_;\n      let feature;\n      for (const objectName in topoJSONFeatures) {\n        if (this.layers_ && !this.layers_.includes(objectName)) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push.apply(\n            features,\n            readFeaturesFromGeometryCollection(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (\n            topoJSONFeatures[objectName]\n          );\n          features.push(\n            readFeatureFromGeometry(\n              feature,\n              arcs,\n              scale,\n              translate,\n              property,\n              objectName,\n              options,\n            ),\n          );\n        }\n      }\n      return features;\n    }\n    return [];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return this.dataProjection;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n};\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  const coordinates = [];\n  let index;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      const arc = arcs[index];\n      for (let j = 0, jj = arc.length; j < jj; ++j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    } else {\n      // reverse arc\n      const arc = arcs[~index];\n      for (let j = arc.length - 1; j >= 0; --j) {\n        coordinates.push(arc[j].slice(0));\n      }\n    }\n  }\n  return coordinates;\n}\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object['arcs'][i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(\n  collection,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  const geometries = collection['geometries'];\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i],\n      arcs,\n      scale,\n      translate,\n      property,\n      name,\n      options,\n    );\n  }\n  return features;\n}\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(\n  object,\n  arcs,\n  scale,\n  translate,\n  property,\n  name,\n  options,\n) {\n  let geometry = null;\n  const type = object.type;\n  if (type) {\n    const geometryReader = GEOMETRY_READERS[type];\n    if (type === 'Point' || type === 'MultiPoint') {\n      geometry = geometryReader(object, scale, translate);\n    } else {\n      geometry = geometryReader(object, arcs);\n    }\n    geometry = transformGeometryWithOptions(geometry, false, options);\n  }\n  const feature = new Feature({geometry: geometry});\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\nexport default TopoJSON;\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport Feature from '../Feature.js';\nimport Geometry from '../geom/Geometry.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {\n  getAllTextContent,\n  getAttributeNS,\n  makeArrayPusher,\n  makeReplacer,\n  parseNode,\n  pushParseAndPop,\n} from '../xml.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc.\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^\\s*$/;\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} [srsName] srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n * @api\n */\nclass GMLBase extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string|undefined}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal),\n    };\n\n    this.supportedMediaTypes = ['application/gml+xml'];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  readFeaturesInternal(node, objectStack) {\n    const localName = node.localName;\n    let features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop(\n        [],\n        this.FEATURE_COLLECTION_PARSERS,\n        node,\n        objectStack,\n        this,\n      );\n    } else if (\n      localName == 'featureMembers' ||\n      localName == 'featureMember' ||\n      localName == 'member'\n    ) {\n      const context = objectStack[0];\n      let featureType = context['featureType'];\n      let featureNS = context['featureNS'];\n      const prefix = 'p';\n      const defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        (featureType = []), (featureNS = {});\n        for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          const child = /** @type {Element} */ (node.childNodes[i]);\n          if (child.nodeType === 1) {\n            const ft = child.nodeName.split(':').pop();\n            if (!featureType.includes(ft)) {\n              let key = '';\n              let count = 0;\n              const uri = child.namespaceURI;\n              for (const candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        const ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      const parsersNS = {};\n      const featureTypes = Array.isArray(featureType)\n        ? featureType\n        : [featureType];\n      for (const p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n          const featurePrefix = featureTypes[i].includes(':')\n            ? featureTypes[i].split(':')[0]\n            : defaultPrefix;\n          if (featurePrefix === p) {\n            parsers[featureTypes[i].split(':').pop()] =\n              localName == 'featureMembers'\n                ? makeArrayPusher(this.readFeatureElement, this)\n                : makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember' || localName == 'member') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readGeometryOrExtent(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] =\n      node.firstElementChild.getAttribute('srsDimension');\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  readExtentElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const extent = /** @type {import(\"../extent.js\").Extent} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return extent ? transformExtentWithOptions(extent, context) : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  readGeometryElement(node, objectStack) {\n    const context = /** @type {Object} */ (objectStack[0]);\n    const geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n      this.readGeometryOrExtent(node, objectStack)\n    );\n    return geometry\n      ? transformGeometryWithOptions(geometry, false, context)\n      : undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  readFeatureElementInternal(node, objectStack, asFeature) {\n    let geometryName;\n    const values = {};\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      let value;\n      const localName = n.localName;\n      // first, check if it is simple attribute\n      if (\n        n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))\n      ) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry or extent\n          value =\n            localName === 'boundedBy'\n              ? this.readExtentElement(n, objectStack)\n              : this.readGeometryElement(n, objectStack);\n        }\n        if (!value) {\n          //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      const len = n.attributes.length;\n      if (len > 0 && !(value instanceof Geometry)) {\n        value = {_content_: value};\n        for (let i = 0; i < len; i++) {\n          const attName = n.attributes[i].name;\n          value[attName] = n.attributes[i].value;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n    }\n    if (!asFeature) {\n      return values;\n    }\n    const feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    const fid =\n      node.getAttribute('fid') || getAttributeNS(node, this.namespace, 'id');\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  readFeatureElement(node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  readPoint(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  readMultiPoint(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const coordinates = pushParseAndPop(\n      [],\n      this.MULTIPOINT_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiLineString(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTILINESTRING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiPolygon(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTIPOLYGON_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  pointMemberParser(node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  lineStringMemberParser(node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  polygonMemberParser(node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readLineString(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  readFlatLinearRing(node, objectStack) {\n    const ring = pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (ring) {\n      return ring;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  readLinearRing(node, objectStack) {\n    const flatCoordinates = this.readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, 'XYZ');\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readPolygon(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>} Flat coordinates.\n   */\n  readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(\n      null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromNode(node, options) {\n    const geometry = this.readGeometryElement(node, [\n      this.getReadOptions(node, options ? options : {}),\n    ]);\n    return geometry ? geometry : null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {\n      featureType: this.featureType,\n      featureNS: this.featureNS,\n    };\n    if (internalOptions) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    const features = this.readFeaturesInternal(node, [internalOptions]);\n    return features || [];\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    return getProjection(\n      this.srsName\n        ? this.srsName\n        : node.firstElementChild.getAttribute('srsName'),\n    );\n  }\n}\n\nGMLBase.prototype.namespace = GMLNS;\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {},\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n  },\n};\n\nexport default GMLBase;\n","/**\n * @module ol/format/GML2\n */\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  createElementNS,\n  getAllTextContent,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {writeStringTextNode} from './xsd.js';\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation =\n  GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nclass GML2 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] = makeArrayPusher(\n      this.readFeaturesInternal,\n    );\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatCoordinates(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n      objectStack[0]\n    );\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    const coordsGroups = s.trim().split(/\\s+/);\n    const flatCoordinates = [];\n    for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n      const coords = coordsGroups[i].split(/,+/);\n      const x = parseFloat(coords[0]);\n      const y = parseFloat(coords[1]);\n      const z = coords.length === 3 ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readBox(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.BOX_PARSERS_,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[1][3],\n      flatCoordinates[1][4],\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml', nodeName);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @return {Element} coordinates node.\n   * @private\n   */\n  createCoordinatesNode_(namespaceURI) {\n    const coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCoordinates_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      const point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ',' + point[1]\n        : point[1] + ',' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    const point = geometry.getCoordinates();\n    const coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      'http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML2.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML2.prototype.writeEnvelope),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML2.prototype.writePointMember),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML2.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\nexport default GML2;\n","/**\n * @module ol/format/GML3\n */\nimport GML2 from './GML2.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {\n  OBJECT_PROPERTY_NODE_FACTORY,\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  getAllTextContent,\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n  makeSimpleNodeFactory,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {createOrUpdate} from '../extent.js';\nimport {extend} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport {\n  transformExtentWithOptions,\n  transformGeometryWithOptions,\n} from './Feature.js';\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation =\n  GMLNS +\n  ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n  '1.0.0/gmlsf.xsd';\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember',\n};\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nclass GML3 extends GMLBase {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ =\n      options.multiCurve !== undefined ? options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ =\n      options.multiSurface !== undefined ? options.multiSurface : true;\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ? options.hasZ : false;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  readMultiCurve(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (lineStrings) {\n      const multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Polygon.\n   */\n  readFlatCurveRing(node, objectStack) {\n    /** @type {Array<LineString>} */\n    const lineStrings = pushParseAndPop(\n      [],\n      this.MULTICURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    const flatCoordinates = [];\n    for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n      extend(flatCoordinates, lineStrings[i].getFlatCoordinates());\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  readMultiSurface(node, objectStack) {\n    /** @type {Array<Polygon>} */\n    const polygons = pushParseAndPop(\n      [],\n      this.MULTISURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  curveMemberParser(node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  surfaceMemberParser(node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.PATCHES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readSegment(node, objectStack) {\n    return pushParseAndPop([], this.SEGMENTS_PARSERS, node, objectStack, this);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  readPolygonPatch(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.FLAT_LINEAR_RINGS_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  readLineStringSegment(node, objectStack) {\n    return pushParseAndPop(\n      [null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  interiorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   */\n  exteriorParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    const flatLinearRing = pushParseAndPop(\n      undefined,\n      this.RING_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRing) {\n      const flatLinearRings =\n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  readSurface(node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    const flatLinearRings = pushParseAndPop(\n      [null],\n      this.SURFACE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatLinearRings && flatLinearRings[0]) {\n      const flatCoordinates = flatLinearRings[0];\n      const ends = [flatCoordinates.length];\n      let i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, 'XYZ', ends);\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  readCurve(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.CURVE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    if (flatCoordinates) {\n      const lineString = new LineString(flatCoordinates, 'XYZ');\n      return lineString;\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  readEnvelope(node, objectStack) {\n    /** @type {Array<number>} */\n    const flatCoordinates = pushParseAndPop(\n      [null],\n      this.ENVELOPE_PARSERS,\n      node,\n      objectStack,\n      this,\n    );\n    return createOrUpdate(\n      flatCoordinates[1][0],\n      flatCoordinates[1][1],\n      flatCoordinates[2][0],\n      flatCoordinates[2][1],\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPos(node, objectStack) {\n    let s = getAllTextContent(node, false);\n    const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    const flatCoordinates = [];\n    let m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      let i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        const y = flatCoordinates[i];\n        const x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    const len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  readFlatPosList(node, objectStack) {\n    const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    const context = objectStack[0];\n    const containerSrs = context['srsName'];\n    const contextDimension = context['srsDimension'];\n    let axisOrientation = 'enu';\n    if (containerSrs) {\n      const proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    const coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    let dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n    } else if (\n      /** @type {Element} */ (node.parentNode).getAttribute('srsDimension')\n    ) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'),\n      );\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    let x, y, z;\n    const flatCoordinates = [];\n    for (let i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = dim === 3 ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePos_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    const point = value.getCoordinates();\n    let coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = point[0] + ' ' + point[1];\n    } else {\n      coords = point[1] + ' ' + point[0];\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  }\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string} [srsName] Optional srsName\n   * @param {boolean} [hasZ] whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  getCoords_(point, srsName, hasZ) {\n    let axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    let coords =\n      axisOrientation.substr(0, 2) === 'en'\n        ? point[0] + ' ' + point[1]\n        : point[1] + ' ' + point[0];\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      const z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writePosList_(node, value, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    const srsName = context['srsName'];\n    // only 2d for simple features profile\n    const points = value.getCoordinates();\n    const len = points.length;\n    const parts = new Array(len);\n    let point;\n    for (let i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeEnvelope(node, extent, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const keys = ['lowerCorner', 'upperCorner'];\n    const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}),\n      this.ENVELOPE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack,\n      keys,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLinearRing(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  }\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  RING_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const parentNode = context.node;\n    const exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(\n      parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior',\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      const rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS,\n        this.RING_NODE_FACTORY_,\n        rings,\n        objectStack,\n        undefined,\n        this,\n      );\n    } else if (node.nodeName === 'Surface') {\n      const patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(patches, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (\n      node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment'\n    ) {\n      const posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      const segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments, geometry, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiSurfaceOrPolygon(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const polygons = geometry.getPolygons();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      polygons,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiPoint(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const srsName = context['srsName'];\n    const hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const points = geometry.getPoints();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS,\n      makeSimpleNodeFactory('pointMember'),\n      points,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeMultiCurveOrLineString(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    const hasZ = context['hasZ'];\n    const srsName = context['srsName'];\n    const curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    const lines = geometry.getLineStrings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,\n      lines,\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeRing(node, ring, objectStack) {\n    const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing(linearRing, ring, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeSurfaceOrPolygonMember(node, polygon, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon(child, polygon, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writePointMember(node, point, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint(child, point, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeLineStringOrCurveMember(node, line, objectStack) {\n    const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString(child, line, objectStack);\n    }\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeSurfacePatches_(node, polygon, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon(child, polygon, objectStack);\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeCurveSegments_(node, line, objectStack) {\n    const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString(child, line, objectStack);\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = /** @type {import(\"./Feature.js\").WriteOptions} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const item = Object.assign({}, context);\n    item['node'] = node;\n    let value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(\n        /** @type {import(\"../extent.js\").Extent} */ (geometry),\n        context,\n      );\n    } else {\n      value = transformGeometryWithOptions(\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry),\n        true,\n        context,\n      );\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      this.GEOMETRY_SERIALIZERS,\n      this.GEOMETRY_NODE_FACTORY_,\n      [value],\n      objectStack,\n      undefined,\n      this,\n    );\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeFeatureElement(node, feature, objectStack) {\n    const fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureNS = context['featureNS'];\n    const geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    const keys = [];\n    const values = [];\n    if (feature.hasProperties()) {\n      const properties = feature.getProperties();\n      for (const key in properties) {\n        const value = properties[key];\n        if (value !== null) {\n          keys.push(key);\n          values.push(value);\n          if (\n            key == geometryName ||\n            typeof (/** @type {?} */ (value).getSimplifiedGeometry) ===\n              'function'\n          ) {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] = makeChildAppender(\n                this.writeGeometryElement,\n                this,\n              );\n            }\n          } else {\n            if (!(key in context.serializers[featureNS])) {\n              context.serializers[featureNS][key] =\n                makeChildAppender(writeStringTextNode);\n            }\n          }\n        }\n      }\n    }\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack,\n      keys,\n    );\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  writeFeatureMembers_(node, features, objectStack) {\n    const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    const featureType = context['featureType'];\n    const featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    const serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement,\n      this,\n    );\n    const item = Object.assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS),\n      features,\n      objectStack,\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  MULTIGEOMETRY_MEMBER_NODE_FACTORY_(value, objectStack, nodeName) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(\n      this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName],\n    );\n  }\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string} [nodeName] Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GEOMETRY_NODE_FACTORY_(value, objectStack, nodeName) {\n    const context = objectStack[objectStack.length - 1];\n    const multiSurface = context['multiSurface'];\n    const surface = context['surface'];\n    const curve = context['curve'];\n    const multiCurve = context['multiCurve'];\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        value\n      ).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace, nodeName);\n  }\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Node} Node.\n   * @api\n   */\n  writeGeometryNode(geometry, options) {\n    options = this.adaptOptions(options);\n    const geom = createElementNS(this.namespace, 'geom');\n    const context = {\n      node: geom,\n      hasZ: this.hasZ,\n      srsName: this.srsName,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  }\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n   * @return {Element} Node.\n   * @api\n   */\n  writeFeaturesNode(features, options) {\n    options = this.adaptOptions(options);\n    const node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation,\n    );\n    const context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType,\n    };\n    if (options) {\n      Object.assign(context, options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML3.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML3.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML3.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML3.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML3.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML3;\n","/**\n * @module ol/format/GML32\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {\n  makeArrayExtender,\n  makeArrayPusher,\n  makeChildAppender,\n  makeReplacer,\n} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nclass GML32 extends GML3 {\n  /**\n   * @param {import(\"./GMLBase.js\").Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(options);\n\n    /**\n     * @type {string}\n     */\n    this.schemaLocation = options.schemaLocation\n      ? options.schemaLocation\n      : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n  }\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  writeGeometryElement(node, geometry, objectStack) {\n    const context = objectStack[objectStack.length - 1];\n    objectStack[objectStack.length - 1] = Object.assign(\n      {multiCurve: true, multiSurface: true},\n      context,\n    );\n    super.writeGeometryElement(node, geometry, objectStack);\n  }\n}\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList),\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser,\n    'exterior': GML3.prototype.exteriorParser,\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface),\n    'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface),\n    'Curve': makeReplacer(GML32.prototype.readCurve),\n    'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTICURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser),\n    'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTISURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n    'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACEMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SURFACE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.CURVE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.ENVELOPE_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n    'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.PATCHES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.SEGMENTS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeArrayExtender(\n      GML3.prototype.readLineStringSegment,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOINT_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTILINESTRING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser,\n    ),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.MULTIPOLYGON_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POINTMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.POLYGONMEMBER_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing),\n    'Ring': makeReplacer(GML32.prototype.readFlatCurveRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.RING_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing),\n    'interior': makeChildAppender(GML3.prototype.writeRing),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.ENVELOPE_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(GML3.prototype.writePointMember),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember,\n    ),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nGML32.prototype.GEOMETRY_SERIALIZERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString),\n    'Point': makeChildAppender(GML32.prototype.writePoint),\n    'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint),\n    'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString,\n    ),\n    'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing),\n    'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon,\n    ),\n    'Envelope': makeChildAppender(GML3.prototype.writeEnvelope),\n  },\n};\n\nexport default GML32;\n","/**\n * @module ol/format/filter/Filter\n */\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nclass Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   */\n  constructor(tagName) {\n    /**\n     * @private\n     * @type {!string}\n     */\n    this.tagName_ = tagName;\n  }\n\n  /**\n   * The XML tag name for a filter.\n   * @return {!string} Name.\n   */\n  getTagName() {\n    return this.tagName_;\n  }\n}\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport Filter from './Filter.js';\nimport {assert} from '../../asserts.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nclass LogicalNary extends Filter {\n  /**\n   * @param {!string} tagName The XML tag name for this filter.\n   * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n   */\n  constructor(tagName, conditions) {\n    super(tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 'At least 2 conditions are required');\n  }\n}\n\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nclass And extends LogicalNary {\n  /**\n   * @param {...import(\"./Filter.js\").default} conditions Conditions.\n   */\n  constructor(conditions) {\n    super('And', Array.prototype.slice.call(arguments));\n  }\n}\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nclass Bbox extends Filter {\n  /**\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be set\n   * on geometries when this is not provided.\n   */\n  constructor(geometryName, extent, srsName) {\n    super('BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n    if (extent.length !== 4) {\n      throw new Error(\n        'Expected an extent with four values ([minX, minY, maxX, maxY])',\n      );\n    }\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = srsName;\n  }\n}\n\nexport default Bbox;\n","/**\n * @module ol/format/WFS\n */\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GML32 from './GML32.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport XMLFeature from './XMLFeature.js';\nimport {\n  XML_SCHEMA_INSTANCE_URI,\n  createElementNS,\n  isDocument,\n  makeArrayPusher,\n  makeChildAppender,\n  makeObjectPropertySetter,\n  makeSimpleNodeFactory,\n  parse,\n  parseNode,\n  pushParseAndPop,\n  pushSerializeAndPop,\n} from '../xml.js';\nimport {and as andFilterFn, bbox as bboxFilterFn} from './filter.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  readNonNegativeIntegerString,\n  readPositiveInteger,\n  writeStringTextNode,\n} from './xsd.js';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readExtentElement,\n      'bounds',\n    ),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'member': makeArrayPusher(GMLBase.prototype.readFeaturesInternal),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'totalInserted': makeObjectPropertySetter(readPositiveInteger),\n    'totalUpdated': makeObjectPropertySetter(readPositiveInteger),\n    'totalDeleted': makeObjectPropertySetter(readPositiveInteger),\n  },\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary,\n      'transactionSummary',\n    ),\n    'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds'),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'PropertyName': makeChildAppender(writeStringTextNode),\n  },\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative),\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response.\n * Default is `ol/format/GML2` for WFS 1.0.0, `ol/format/GML3` for WFS 1.1.0 and `ol/format/GML32` for WFS 2.0.0.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n * @property {string} [version='1.1.0'] WFS version to use. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string|FeatureType>} featureTypes The feature type names or FeatureType objects to\n * define a unique bbox filter per feature type name (in this case, options `bbox` and `geometryName` are\n * ignored.).\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter. The `geometryName`\n * option must be set.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * e.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n/**\n * @typedef {Object} FeatureType\n * @property {!string} name The feature type name.\n * @property {!import(\"../extent.js\").Extent} bbox Extent to use for the BBOX filter.\n * @property {!string} geometryName Geometry name to use in the BBOX filter.\n */\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0`, `1.1.0` or `2.0.0`.\n */\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures NumberOfFeatures.\n * @property {import(\"../extent.js\").Extent} bounds Bounds.\n */\n\n/**\n * @typedef {Object} TransactionSummary\n * @property {number} totalDeleted TotalDeleted.\n * @property {number} totalInserted TotalInserted.\n * @property {number} totalUpdated TotalUpdated.\n */\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {TransactionSummary} transactionSummary Transaction summary.\n * @property {Array<string>} insertIds InsertIds.\n */\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n/**\n * @type {Object<string, string>}\n */\nconst OGCNS = {\n  '2.0.0': 'http://www.opengis.net/ogc/1.1',\n  '1.1.0': 'http://www.opengis.net/ogc',\n  '1.0.0': 'http://www.opengis.net/ogc',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst WFSNS = {\n  '2.0.0': 'http://www.opengis.net/wfs/2.0',\n  '1.1.0': 'http://www.opengis.net/wfs',\n  '1.0.0': 'http://www.opengis.net/wfs',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst FESNS = {\n  '2.0.0': 'http://www.opengis.net/fes/2.0',\n  '1.1.0': 'http://www.opengis.net/fes',\n  '1.0.0': 'http://www.opengis.net/fes',\n};\n\n/**\n * @type {Object<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '2.0.0':\n    'http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd',\n  '1.1.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0':\n    'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd',\n};\n\n/**\n * @type {Object<string, object>}\n */\nconst GML_FORMATS = {\n  '2.0.0': GML32,\n  '1.1.0': GML3,\n  '1.0.0': GML2,\n};\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option to override the default.\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nclass WFS extends XMLFeature {\n  /**\n   * @param {Options} [options] Optional configuration object.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version ? options.version : DEFAULT_VERSION;\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat\n      ? options.gmlFormat\n      : new GML_FORMATS[this.version_]();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation\n      ? options.schemaLocation\n      : SCHEMA_LOCATIONS[this.version_];\n  }\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  getFeatureType() {\n    return this.featureType_;\n  }\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  setFeatureType(featureType) {\n    this.featureType_ = featureType;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_,\n    });\n\n    Object.assign(context, this.getReadOptions(node, options ? options : {}));\n    const objectStack = [context];\n    let featuresNS;\n    if (this.version_ === '2.0.0') {\n      featuresNS = FEATURE_COLLECTION_PARSERS;\n    } else {\n      featuresNS = this.gmlFormat_.FEATURE_COLLECTION_PARSERS;\n    }\n    let features = pushParseAndPop(\n      [],\n      featuresNS,\n      node,\n      objectStack,\n      this.gmlFormat_,\n    );\n    if (!features) {\n      features = [];\n    }\n    return features;\n  }\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  readTransactionResponse(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readTransactionResponseFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  readFeatureCollectionMetadata(source) {\n    if (!source) {\n      return undefined;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source),\n      );\n    }\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Element} */ (source),\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(\n          /** @type {Element} */ (n),\n        );\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  readFeatureCollectionMetadataFromNode(node) {\n    const result = {};\n    const value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'),\n    );\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS,\n      node,\n      [],\n      this.gmlFormat_,\n    );\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromDocument(doc) {\n    for (let n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  readTransactionResponseFromNode(node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */ ({}),\n      TRANSACTION_RESPONSE_PARSERS,\n      node,\n      [],\n    );\n  }\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeGetFeature(options) {\n    const node = createElementNS(WFSNS[this.version_], 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', this.version_);\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', String(options.maxFeatures));\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', String(options.startIndex));\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', String(options.count));\n    }\n    if (options.viewParams !== undefined) {\n      node.setAttribute('viewParams', options.viewParams);\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      this.schemaLocation_,\n    );\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    const context = {\n      node,\n    };\n    Object.assign(context, {\n      'version': this.version_,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'propertyNames': options.propertyNames ? options.propertyNames : [],\n    });\n    assert(\n      Array.isArray(options.featureTypes),\n      '`options.featureTypes` must be an Array',\n    );\n    if (typeof options.featureTypes[0] === 'string') {\n      let filter = options.filter;\n      if (options.bbox) {\n        assert(\n          options.geometryName,\n          '`options.geometryName` must also be provided when `options.bbox` is set',\n        );\n        filter = this.combineBboxAndFilter(\n          options.geometryName,\n          options.bbox,\n          options.srsName,\n          filter,\n        );\n      }\n      Object.assign(context, {\n        'geometryName': options.geometryName,\n        'filter': filter,\n      });\n      writeGetFeature(\n        node,\n        /** @type {!Array<string>} */ (options.featureTypes),\n        [context],\n      );\n    } else {\n      // Write one query node per element in featuresType.\n      options.featureTypes.forEach((/** @type {FeatureType} */ featureType) => {\n        const completeFilter = this.combineBboxAndFilter(\n          featureType.geometryName,\n          featureType.bbox,\n          options.srsName,\n          options.filter,\n        );\n        Object.assign(context, {\n          'geometryName': featureType.geometryName,\n          'filter': completeFilter,\n        });\n        writeGetFeature(node, [featureType.name], [context]);\n      });\n    }\n    return node;\n  }\n\n  /**\n   * Create a bbox filter and combine it with another optional filter.\n   *\n   * @param {!string} geometryName Geometry name to use.\n   * @param {!import(\"../extent.js\").Extent} extent Extent.\n   * @param {string} [srsName] SRS name. No srsName attribute will be\n   *    set on geometries when this is not provided.\n   * @param {import(\"./filter/Filter.js\").default} [filter] Filter condition.\n   * @return {import(\"./filter/Filter.js\").default} The filter.\n   */\n  combineBboxAndFilter(geometryName, extent, srsName, filter) {\n    const bboxFilter = bboxFilterFn(geometryName, extent, srsName);\n    if (filter) {\n      // if bbox and filter are both set, combine the two into a single filter\n      return andFilterFn(filter, bboxFilter);\n    }\n    return bboxFilter;\n  }\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  writeTransaction(inserts, updates, deletes, options) {\n    const objectStack = [];\n    const version = options.version ? options.version : this.version_;\n    const node = createElementNS(WFSNS[version], 'Transaction');\n\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    let baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    node.setAttributeNS(\n      XML_SCHEMA_INSTANCE_URI,\n      'xsi:schemaLocation',\n      SCHEMA_LOCATIONS[version],\n    );\n\n    const request = createTransactionRequest(node, baseObj, version, options);\n    if (inserts) {\n      serializeTransactionRequest('Insert', inserts, objectStack, request);\n    }\n    if (updates) {\n      serializeTransactionRequest('Update', updates, objectStack, request);\n    }\n    if (deletes) {\n      serializeTransactionRequest('Delete', deletes, objectStack, request);\n    }\n    if (options.nativeElements) {\n      serializeTransactionRequest(\n        'Native',\n        options.nativeElements,\n        objectStack,\n        request,\n      );\n    }\n    return node;\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromNode(node) {\n    if (node.firstElementChild && node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (\n          !(\n            n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 && n.firstChild.nodeType === 3)\n          )\n        ) {\n          const objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {*} baseObj Base object.\n * @param {string} version Version.\n * @param {WriteTransactionOptions} options Options.\n * @return {Object} Request object.\n */\nfunction createTransactionRequest(node, baseObj, version, options) {\n  const featurePrefix = options.featurePrefix\n    ? options.featurePrefix\n    : FEATURE_PREFIX;\n  let gmlVersion;\n  if (version === '1.0.0') {\n    gmlVersion = 2;\n  } else if (version === '1.1.0') {\n    gmlVersion = 3;\n  } else if (version === '2.0.0') {\n    gmlVersion = 3.2;\n  }\n  const obj = Object.assign(\n    {node},\n    {\n      version,\n      'featureNS': options.featureNS,\n      'featureType': options.featureType,\n      'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion,\n      'hasZ': options.hasZ,\n      'srsName': options.srsName,\n    },\n    baseObj,\n  );\n  return obj;\n}\n\n/**\n * @param {string} type Request type.\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @param {Element} request Transaction Request.\n */\nfunction serializeTransactionRequest(type, features, objectStack, request) {\n  pushSerializeAndPop(\n    request,\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory(type),\n    features,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n  'http://www.opengis.net/ogc/1.1': {\n    'FeatureId': makeArrayPusher(function (node, objectStack) {\n      return node.getAttribute('fid');\n    }),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser,\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Feature': fidParser,\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else if (gmlVersion === 3) {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML32.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = OGCNS[version];\n  const filter = createElementNS(ns, 'Filter');\n  const child = createElementNS(ns, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @return {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.startsWith(prefix)) {\n    return featureType;\n  }\n  return prefix + featureType;\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 'Features must have an id set');\n  const version = context['version'];\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (\n          value &&\n          typeof (/** @type {?} */ (value).getSimplifiedGeometry) === 'function'\n        ) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(\n      /** @type {import(\"../xml.js\").NodeStackItem} */ ({\n        version,\n        'gmlVersion': context['gmlVersion'],\n        node,\n        'hasZ': context['hasZ'],\n        'srsName': context['srsName'],\n      }),\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Property'),\n      values,\n      objectStack,\n    );\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const version = context['version'];\n  const ns = WFSNS[version];\n  const tagName = version === '2.0.0' ? 'ValueReference' : 'Name';\n  const name = createElementNS(ns, tagName);\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(ns, 'Value');\n    node.appendChild(value);\n    if (\n      pair.value &&\n      typeof (/** @type {?} */ (pair.value).getSimplifiedGeometry) ===\n        'function'\n    ) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else if (gmlVersion === 3) {\n        GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n      } else {\n        GML32.prototype.writeGeometryElement(value, pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/wfs/2.0': {\n    'Query': makeChildAppender(writeQuery),\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n  'http://www.opengis.net/fes/2.0': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeSpatialFilter),\n    'Disjoint': makeChildAppender(writeSpatialFilter),\n    'Intersects': makeChildAppender(writeSpatialFilter),\n    'ResourceId': makeChildAppender(writeResourceIdFilter),\n    'Within': makeChildAppender(writeSpatialFilter),\n    'DWithin': makeChildAppender(writeDWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter),\n  },\n};\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const version = context['version'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  let typeNameAttr;\n  if (version === '2.0.0') {\n    typeNameAttr = 'typeNames';\n  } else {\n    typeNameAttr = 'typeName';\n  }\n  node.setAttribute(typeNameAttr, typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'),\n    propertyNames,\n    objectStack,\n  );\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(getFilterNS(version), 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter],\n    objectStack,\n  );\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n/**\n * @param {Element} node Element.\n * @param {import(\"./filter/ResourceId.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeResourceIdFilter(node, filter, objectStack) {\n  node.setAttribute('rid', /** @type {string} */ (filter.rid));\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Spatial.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeSpatialFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  parent['srsName'] = filter.srsName;\n  const format = GML_FORMATS[version];\n\n  writePropertyName(version, node, filter.geometryName);\n  format.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/DWithin.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDWithinFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writeSpatialFilter(node, filter, objectStack);\n  const distance = createElementNS(getFilterNS(version), 'Distance');\n  writeStringTextNode(distance, filter.distance.toString());\n  if (version === '2.0.0') {\n    distance.setAttribute('uom', filter.unit);\n  } else {\n    distance.setAttribute('units', filter.unit);\n  }\n  node.appendChild(distance);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n\n  writeExpression(FESNS[version], 'ValueReference', node, filter.propertyName);\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(\n      item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition],\n      objectStack,\n    );\n  }\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  const item = {node};\n  Object.assign(item, {context});\n  const condition = filter.condition;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition],\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.expression);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  writePropertyName(version, node, filter.propertyName);\n}\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  const ns = getFilterNS(version);\n\n  writePropertyName(version, node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(ns, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeLiteral(version, lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(ns, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeLiteral(version, upperBoundary, '' + filter.upperBoundary);\n}\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  const parent = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const context = parent['context'];\n  const version = context['version'];\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writePropertyName(version, node, filter.propertyName);\n  writeLiteral(version, node, '' + filter.pattern);\n}\n\n/**\n * @param {string} ns Namespace.\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeExpression(ns, tagName, node, value) {\n  const property = createElementNS(ns, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeLiteral(version, node, value) {\n  writeExpression(getFilterNS(version), 'Literal', node, value);\n}\n\n/**\n * @param {string} version Version.\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writePropertyName(version, node, value) {\n  if (version === '2.0.0') {\n    writeExpression(FESNS[version], 'ValueReference', node, value);\n  } else {\n    writeExpression(OGCNS[version], 'PropertyName', node, value);\n  }\n}\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {string} version WFS version. If not provided defaults to '1.1.0'\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter, version) {\n  version = version || '1.1.0';\n  const child = createElementNS(getFilterNS(version), 'Filter');\n  const context = {\n    node: child,\n  };\n  Object.assign(context, {\n    'version': version,\n    'filter': filter,\n  });\n  writeFilterCondition(child, filter, [context]);\n  return child;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {import(\"../xml.js\").NodeStackItem} */ (\n    Object.assign({}, context)\n  );\n  item.node = node;\n  pushSerializeAndPop(\n    item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'),\n    featureTypes,\n    objectStack,\n  );\n}\n\nfunction getFilterNS(version) {\n  let ns;\n  if (version === '2.0.0') {\n    ns = FESNS[version];\n  } else {\n    ns = OGCNS[version];\n  }\n  return ns;\n}\n\nexport default WFS;\n","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport DWithin from './filter/DWithin.js';\nimport Disjoint from './filter/Disjoint.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport ResourceId from './filter/ResourceId.js';\nimport Within from './filter/Within.js';\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params))();\n}\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @return {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params))();\n}\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @return {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, srsName) {\n  return new Bbox(geometryName, extent, srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, srsName) {\n  return new Contains(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, srsName) {\n  return new Intersects(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Disjoint>` operator to test whether a geometry-valued property\n * is disjoint to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Disjoint} `<Disjoint>` operator.\n * @api\n */\nexport function disjoint(geometryName, geometry, srsName) {\n  return new Disjoint(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, srsName) {\n  return new Within(geometryName, geometry, srsName);\n}\n\n/**\n * Create a `<DWithin>` operator to test whether a geometry-valued property\n * is within a distance to a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {!number} distance Distance.\n * @param {!string} unit Unit.\n * @param {string} [srsName] SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @return {!DWithin} `<DWithin>` operator.\n * @api\n */\nexport function dwithin(geometryName, geometry, distance, unit, srsName) {\n  return new DWithin(geometryName, geometry, distance, unit, srsName);\n}\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, matchCase) {\n  return new EqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, matchCase) {\n  return new NotEqualTo(propertyName, expression, matchCase);\n}\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @return {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @return {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @return {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string} [wildCard] Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string} [singleChar] pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string} [escapeChar] Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean} [matchCase] Case-sensitive?\n * @return {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(\n  propertyName,\n  pattern,\n  wildCard,\n  singleChar,\n  escapeChar,\n  matchCase,\n) {\n  return new IsLike(\n    propertyName,\n    pattern,\n    wildCard,\n    singleChar,\n    escapeChar,\n    matchCase,\n  );\n}\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @return {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\nexport function resourceId(rid) {\n  return new ResourceId(rid);\n}\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {extend} from '../array.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nclass WMSGetFeatureInfo extends XMLFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  /**\n   * @return {Array<string>|null} layers\n   */\n  getLayers() {\n    return this.layers_;\n  }\n\n  /**\n   * @param {Array<string>|null} layers Layers to parse.\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  readFeatures_(node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    const localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n        const layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        const layerElement = /** @type {Element} */ (layer);\n        const context = objectStack[0];\n\n        const toRemove = layerIdentifier;\n        const layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !this.layers_.includes(layerName)) {\n          continue;\n        }\n\n        const featureType = layerName + featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        const parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement,\n          this.gmlFormat_,\n        );\n        const parsersNS = makeStructureNS(\n          [context['featureNS'], null],\n          parsers,\n        );\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        const layerFeatures = pushParseAndPop(\n          [],\n          // @ts-ignore\n          parsersNS,\n          layerElement,\n          objectStack,\n          this.gmlFormat_,\n        );\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      const gmlFeatures = pushParseAndPop(\n        [],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS,\n        node,\n        [{}],\n        this.gmlFormat_,\n      );\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  }\n\n  /**\n   * @protected\n   * @param {Element} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromNode(node, options) {\n    const internalOptions = {};\n    if (options) {\n      Object.assign(internalOptions, this.getReadOptions(node, options));\n    }\n    return this.readFeatures_(node, [internalOptions]);\n  }\n}\n\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position),\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this,\n        ),\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_,\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent),\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent),\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this,\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromUserExtent} from '../proj.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label,\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : fromUserExtent(this.extent, view.getProjection());\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","import {CollectionEvent as _ol_Collection$CollectionEvent} from '../../ol/Collection.js';\nimport $ol$Collection from '../../ol/Collection.js';\nimport {asImageLike as _ol_DataTile$asImageLike} from '../../ol/DataTile.js';\nimport {asArrayLike as _ol_DataTile$asArrayLike} from '../../ol/DataTile.js';\nimport {toArray as _ol_DataTile$toArray} from '../../ol/DataTile.js';\nimport $ol$DataTile from '../../ol/DataTile.js';\nimport $ol$Disposable from '../../ol/Disposable.js';\nimport $ol$Feature from '../../ol/Feature.js';\nimport {createStyleFunction as _ol_Feature$createStyleFunction} from '../../ol/Feature.js';\nimport {GeolocationError as _ol_Geolocation$GeolocationError} from '../../ol/Geolocation.js';\nimport $ol$Geolocation from '../../ol/Geolocation.js';\nimport $ol$Image from '../../ol/Image.js';\nimport {listenImage as _ol_Image$listenImage} from '../../ol/Image.js';\nimport {load as _ol_Image$load} from '../../ol/Image.js';\nimport {decodeFallback as _ol_Image$decodeFallback} from '../../ol/Image.js';\nimport {decode as _ol_Image$decode} from '../../ol/Image.js';\nimport $ol$ImageCanvas from '../../ol/ImageCanvas.js';\nimport $ol$ImageTile from '../../ol/ImageTile.js';\nimport $ol$Kinetic from '../../ol/Kinetic.js';\nimport $ol$Map from '../../ol/Map.js';\nimport $ol$MapBrowserEvent from '../../ol/MapBrowserEvent.js';\nimport $ol$MapBrowserEventHandler from '../../ol/MapBrowserEventHandler.js';\nimport $ol$MapEvent from '../../ol/MapEvent.js';\nimport {ObjectEvent as _ol_Object$ObjectEvent} from '../../ol/Object.js';\nimport $ol$Object from '../../ol/Object.js';\nimport $ol$Observable from '../../ol/Observable.js';\nimport {unByKey as _ol_Observable$unByKey} from '../../ol/Observable.js';\nimport $ol$Overlay from '../../ol/Overlay.js';\nimport $ol$Tile from '../../ol/Tile.js';\nimport $ol$TileCache from '../../ol/TileCache.js';\nimport $ol$TileQueue from '../../ol/TileQueue.js';\nimport {getTilePriority as _ol_TileQueue$getTilePriority} from '../../ol/TileQueue.js';\nimport $ol$TileRange from '../../ol/TileRange.js';\nimport {createOrUpdate as _ol_TileRange$createOrUpdate} from '../../ol/TileRange.js';\nimport $ol$VectorRenderTile from '../../ol/VectorRenderTile.js';\nimport $ol$View from '../../ol/View.js';\nimport {createCenterConstraint as _ol_View$createCenterConstraint} from '../../ol/View.js';\nimport {createResolutionConstraint as _ol_View$createResolutionConstraint} from '../../ol/View.js';\nimport {createRotationConstraint as _ol_View$createRotationConstraint} from '../../ol/View.js';\nimport {isNoopAnimation as _ol_View$isNoopAnimation} from '../../ol/View.js';\nimport {binarySearch as _ol_array$binarySearch} from '../../ol/array.js';\nimport {ascending as _ol_array$ascending} from '../../ol/array.js';\nimport {descending as _ol_array$descending} from '../../ol/array.js';\nimport {linearFindNearest as _ol_array$linearFindNearest} from '../../ol/array.js';\nimport {reverseSubArray as _ol_array$reverseSubArray} from '../../ol/array.js';\nimport {extend as _ol_array$extend} from '../../ol/array.js';\nimport {remove as _ol_array$remove} from '../../ol/array.js';\nimport {equals as _ol_array$equals} from '../../ol/array.js';\nimport {stableSort as _ol_array$stableSort} from '../../ol/array.js';\nimport {isSorted as _ol_array$isSorted} from '../../ol/array.js';\nimport {assert as _ol_asserts$assert} from '../../ol/asserts.js';\nimport {createExtent as _ol_centerconstraint$createExtent} from '../../ol/centerconstraint.js';\nimport {none as _ol_centerconstraint$none} from '../../ol/centerconstraint.js';\nimport {asString as _ol_color$asString} from '../../ol/color.js';\nimport {withAlpha as _ol_color$withAlpha} from '../../ol/color.js';\nimport {rgbaToLcha as _ol_color$rgbaToLcha} from '../../ol/color.js';\nimport {lchaToRgba as _ol_color$lchaToRgba} from '../../ol/color.js';\nimport {fromString as _ol_color$fromString} from '../../ol/color.js';\nimport {asArray as _ol_color$asArray} from '../../ol/color.js';\nimport {normalize as _ol_color$normalize} from '../../ol/color.js';\nimport {toString as _ol_color$toString} from '../../ol/color.js';\nimport {isStringColor as _ol_color$isStringColor} from '../../ol/color.js';\nimport {asColorLike as _ol_colorlike$asColorLike} from '../../ol/colorlike.js';\nimport {setLevel as _ol_console$setLevel} from '../../ol/console.js';\nimport {log as _ol_console$log} from '../../ol/console.js';\nimport {warn as _ol_console$warn} from '../../ol/console.js';\nimport {error as _ol_console$error} from '../../ol/console.js';\nimport {add as _ol_coordinate$add} from '../../ol/coordinate.js';\nimport {closestOnCircle as _ol_coordinate$closestOnCircle} from '../../ol/coordinate.js';\nimport {closestOnSegment as _ol_coordinate$closestOnSegment} from '../../ol/coordinate.js';\nimport {createStringXY as _ol_coordinate$createStringXY} from '../../ol/coordinate.js';\nimport {degreesToStringHDMS as _ol_coordinate$degreesToStringHDMS} from '../../ol/coordinate.js';\nimport {format as _ol_coordinate$format} from '../../ol/coordinate.js';\nimport {equals as _ol_coordinate$equals} from '../../ol/coordinate.js';\nimport {rotate as _ol_coordinate$rotate} from '../../ol/coordinate.js';\nimport {scale as _ol_coordinate$scale} from '../../ol/coordinate.js';\nimport {squaredDistance as _ol_coordinate$squaredDistance} from '../../ol/coordinate.js';\nimport {distance as _ol_coordinate$distance} from '../../ol/coordinate.js';\nimport {squaredDistanceToSegment as _ol_coordinate$squaredDistanceToSegment} from '../../ol/coordinate.js';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from '../../ol/coordinate.js';\nimport {toStringXY as _ol_coordinate$toStringXY} from '../../ol/coordinate.js';\nimport {wrapX as _ol_coordinate$wrapX} from '../../ol/coordinate.js';\nimport {getWorldsAway as _ol_coordinate$getWorldsAway} from '../../ol/coordinate.js';\nimport {CLASS_HIDDEN as _ol_css$CLASS_HIDDEN} from '../../ol/css.js';\nimport {CLASS_SELECTABLE as _ol_css$CLASS_SELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSELECTABLE as _ol_css$CLASS_UNSELECTABLE} from '../../ol/css.js';\nimport {CLASS_UNSUPPORTED as _ol_css$CLASS_UNSUPPORTED} from '../../ol/css.js';\nimport {CLASS_CONTROL as _ol_css$CLASS_CONTROL} from '../../ol/css.js';\nimport {CLASS_COLLAPSED as _ol_css$CLASS_COLLAPSED} from '../../ol/css.js';\nimport {getFontParameters as _ol_css$getFontParameters} from '../../ol/css.js';\nimport {createCanvasContext2D as _ol_dom$createCanvasContext2D} from '../../ol/dom.js';\nimport {getSharedCanvasContext2D as _ol_dom$getSharedCanvasContext2D} from '../../ol/dom.js';\nimport {releaseCanvas as _ol_dom$releaseCanvas} from '../../ol/dom.js';\nimport {outerWidth as _ol_dom$outerWidth} from '../../ol/dom.js';\nimport {outerHeight as _ol_dom$outerHeight} from '../../ol/dom.js';\nimport {replaceNode as _ol_dom$replaceNode} from '../../ol/dom.js';\nimport {removeNode as _ol_dom$removeNode} from '../../ol/dom.js';\nimport {removeChildren as _ol_dom$removeChildren} from '../../ol/dom.js';\nimport {replaceChildren as _ol_dom$replaceChildren} from '../../ol/dom.js';\nimport {easeIn as _ol_easing$easeIn} from '../../ol/easing.js';\nimport {easeOut as _ol_easing$easeOut} from '../../ol/easing.js';\nimport {inAndOut as _ol_easing$inAndOut} from '../../ol/easing.js';\nimport {linear as _ol_easing$linear} from '../../ol/easing.js';\nimport {upAndDown as _ol_easing$upAndDown} from '../../ol/easing.js';\nimport {listen as _ol_events$listen} from '../../ol/events.js';\nimport {listenOnce as _ol_events$listenOnce} from '../../ol/events.js';\nimport {unlistenByKey as _ol_events$unlistenByKey} from '../../ol/events.js';\nimport {boundingExtent as _ol_extent$boundingExtent} from '../../ol/extent.js';\nimport {buffer as _ol_extent$buffer} from '../../ol/extent.js';\nimport {clone as _ol_extent$clone} from '../../ol/extent.js';\nimport {closestSquaredDistanceXY as _ol_extent$closestSquaredDistanceXY} from '../../ol/extent.js';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from '../../ol/extent.js';\nimport {containsExtent as _ol_extent$containsExtent} from '../../ol/extent.js';\nimport {containsXY as _ol_extent$containsXY} from '../../ol/extent.js';\nimport {coordinateRelationship as _ol_extent$coordinateRelationship} from '../../ol/extent.js';\nimport {createEmpty as _ol_extent$createEmpty} from '../../ol/extent.js';\nimport {createOrUpdate as _ol_extent$createOrUpdate} from '../../ol/extent.js';\nimport {createOrUpdateEmpty as _ol_extent$createOrUpdateEmpty} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinate as _ol_extent$createOrUpdateFromCoordinate} from '../../ol/extent.js';\nimport {createOrUpdateFromCoordinates as _ol_extent$createOrUpdateFromCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromFlatCoordinates as _ol_extent$createOrUpdateFromFlatCoordinates} from '../../ol/extent.js';\nimport {createOrUpdateFromRings as _ol_extent$createOrUpdateFromRings} from '../../ol/extent.js';\nimport {equals as _ol_extent$equals} from '../../ol/extent.js';\nimport {approximatelyEquals as _ol_extent$approximatelyEquals} from '../../ol/extent.js';\nimport {extend as _ol_extent$extend} from '../../ol/extent.js';\nimport {extendCoordinate as _ol_extent$extendCoordinate} from '../../ol/extent.js';\nimport {extendCoordinates as _ol_extent$extendCoordinates} from '../../ol/extent.js';\nimport {extendFlatCoordinates as _ol_extent$extendFlatCoordinates} from '../../ol/extent.js';\nimport {extendRings as _ol_extent$extendRings} from '../../ol/extent.js';\nimport {extendXY as _ol_extent$extendXY} from '../../ol/extent.js';\nimport {forEachCorner as _ol_extent$forEachCorner} from '../../ol/extent.js';\nimport {getArea as _ol_extent$getArea} from '../../ol/extent.js';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from '../../ol/extent.js';\nimport {getBottomRight as _ol_extent$getBottomRight} from '../../ol/extent.js';\nimport {getCenter as _ol_extent$getCenter} from '../../ol/extent.js';\nimport {getCorner as _ol_extent$getCorner} from '../../ol/extent.js';\nimport {getEnlargedArea as _ol_extent$getEnlargedArea} from '../../ol/extent.js';\nimport {getForViewAndSize as _ol_extent$getForViewAndSize} from '../../ol/extent.js';\nimport {getRotatedViewport as _ol_extent$getRotatedViewport} from '../../ol/extent.js';\nimport {getHeight as _ol_extent$getHeight} from '../../ol/extent.js';\nimport {getIntersectionArea as _ol_extent$getIntersectionArea} from '../../ol/extent.js';\nimport {getIntersection as _ol_extent$getIntersection} from '../../ol/extent.js';\nimport {getMargin as _ol_extent$getMargin} from '../../ol/extent.js';\nimport {getSize as _ol_extent$getSize} from '../../ol/extent.js';\nimport {getTopLeft as _ol_extent$getTopLeft} from '../../ol/extent.js';\nimport {getTopRight as _ol_extent$getTopRight} from '../../ol/extent.js';\nimport {getWidth as _ol_extent$getWidth} from '../../ol/extent.js';\nimport {intersects as _ol_extent$intersects} from '../../ol/extent.js';\nimport {isEmpty as _ol_extent$isEmpty} from '../../ol/extent.js';\nimport {returnOrUpdate as _ol_extent$returnOrUpdate} from '../../ol/extent.js';\nimport {scaleFromCenter as _ol_extent$scaleFromCenter} from '../../ol/extent.js';\nimport {intersectsSegment as _ol_extent$intersectsSegment} from '../../ol/extent.js';\nimport {applyTransform as _ol_extent$applyTransform} from '../../ol/extent.js';\nimport {wrapX as _ol_extent$wrapX} from '../../ol/extent.js';\nimport {wrapAndSliceX as _ol_extent$wrapAndSliceX} from '../../ol/extent.js';\nimport {loadFeaturesXhr as _ol_featureloader$loadFeaturesXhr} from '../../ol/featureloader.js';\nimport {xhr as _ol_featureloader$xhr} from '../../ol/featureloader.js';\nimport {setWithCredentials as _ol_featureloader$setWithCredentials} from '../../ol/featureloader.js';\nimport {TRUE as _ol_functions$TRUE} from '../../ol/functions.js';\nimport {FALSE as _ol_functions$FALSE} from '../../ol/functions.js';\nimport {VOID as _ol_functions$VOID} from '../../ol/functions.js';\nimport {memoizeOne as _ol_functions$memoizeOne} from '../../ol/functions.js';\nimport {toPromise as _ol_functions$toPromise} from '../../ol/functions.js';\nimport {FIREFOX as _ol_has$FIREFOX} from '../../ol/has.js';\nimport {SAFARI as _ol_has$SAFARI} from '../../ol/has.js';\nimport {SAFARI_BUG_237906 as _ol_has$SAFARI_BUG_237906} from '../../ol/has.js';\nimport {WEBKIT as _ol_has$WEBKIT} from '../../ol/has.js';\nimport {MAC as _ol_has$MAC} from '../../ol/has.js';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from '../../ol/has.js';\nimport {WORKER_OFFSCREEN_CANVAS as _ol_has$WORKER_OFFSCREEN_CANVAS} from '../../ol/has.js';\nimport {IMAGE_DECODE as _ol_has$IMAGE_DECODE} from '../../ol/has.js';\nimport {CREATE_IMAGE_BITMAP as _ol_has$CREATE_IMAGE_BITMAP} from '../../ol/has.js';\nimport {PASSIVE_EVENT_LISTENERS as _ol_has$PASSIVE_EVENT_LISTENERS} from '../../ol/has.js';\nimport {all as _ol_loadingstrategy$all} from '../../ol/loadingstrategy.js';\nimport {bbox as _ol_loadingstrategy$bbox} from '../../ol/loadingstrategy.js';\nimport {tile as _ol_loadingstrategy$tile} from '../../ol/loadingstrategy.js';\nimport {clamp as _ol_math$clamp} from '../../ol/math.js';\nimport {squaredSegmentDistance as _ol_math$squaredSegmentDistance} from '../../ol/math.js';\nimport {squaredDistance as _ol_math$squaredDistance} from '../../ol/math.js';\nimport {solveLinearSystem as _ol_math$solveLinearSystem} from '../../ol/math.js';\nimport {toDegrees as _ol_math$toDegrees} from '../../ol/math.js';\nimport {toRadians as _ol_math$toRadians} from '../../ol/math.js';\nimport {modulo as _ol_math$modulo} from '../../ol/math.js';\nimport {lerp as _ol_math$lerp} from '../../ol/math.js';\nimport {toFixed as _ol_math$toFixed} from '../../ol/math.js';\nimport {round as _ol_math$round} from '../../ol/math.js';\nimport {floor as _ol_math$floor} from '../../ol/math.js';\nimport {ceil as _ol_math$ceil} from '../../ol/math.js';\nimport {jsonp as _ol_net$jsonp} from '../../ol/net.js';\nimport {ResponseError as _ol_net$ResponseError} from '../../ol/net.js';\nimport {ClientError as _ol_net$ClientError} from '../../ol/net.js';\nimport {getJSON as _ol_net$getJSON} from '../../ol/net.js';\nimport {resolveUrl as _ol_net$resolveUrl} from '../../ol/net.js';\nimport {overrideXHR as _ol_net$overrideXHR} from '../../ol/net.js';\nimport {restoreXHR as _ol_net$restoreXHR} from '../../ol/net.js';\nimport {clear as _ol_obj$clear} from '../../ol/obj.js';\nimport {isEmpty as _ol_obj$isEmpty} from '../../ol/obj.js';\nimport {disableCoordinateWarning as _ol_proj$disableCoordinateWarning} from '../../ol/proj.js';\nimport {cloneTransform as _ol_proj$cloneTransform} from '../../ol/proj.js';\nimport {identityTransform as _ol_proj$identityTransform} from '../../ol/proj.js';\nimport {addProjection as _ol_proj$addProjection} from '../../ol/proj.js';\nimport {addProjections as _ol_proj$addProjections} from '../../ol/proj.js';\nimport {get as _ol_proj$get} from '../../ol/proj.js';\nimport {getPointResolution as _ol_proj$getPointResolution} from '../../ol/proj.js';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from '../../ol/proj.js';\nimport {addEquivalentTransforms as _ol_proj$addEquivalentTransforms} from '../../ol/proj.js';\nimport {clearAllProjections as _ol_proj$clearAllProjections} from '../../ol/proj.js';\nimport {createProjection as _ol_proj$createProjection} from '../../ol/proj.js';\nimport {createTransformFromCoordinateTransform as _ol_proj$createTransformFromCoordinateTransform} from '../../ol/proj.js';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from '../../ol/proj.js';\nimport {fromLonLat as _ol_proj$fromLonLat} from '../../ol/proj.js';\nimport {toLonLat as _ol_proj$toLonLat} from '../../ol/proj.js';\nimport {equivalent as _ol_proj$equivalent} from '../../ol/proj.js';\nimport {getTransformFromProjections as _ol_proj$getTransformFromProjections} from '../../ol/proj.js';\nimport {getTransform as _ol_proj$getTransform} from '../../ol/proj.js';\nimport {transform as _ol_proj$transform} from '../../ol/proj.js';\nimport {transformExtent as _ol_proj$transformExtent} from '../../ol/proj.js';\nimport {transformWithProjections as _ol_proj$transformWithProjections} from '../../ol/proj.js';\nimport {setUserProjection as _ol_proj$setUserProjection} from '../../ol/proj.js';\nimport {clearUserProjection as _ol_proj$clearUserProjection} from '../../ol/proj.js';\nimport {getUserProjection as _ol_proj$getUserProjection} from '../../ol/proj.js';\nimport {useGeographic as _ol_proj$useGeographic} from '../../ol/proj.js';\nimport {toUserCoordinate as _ol_proj$toUserCoordinate} from '../../ol/proj.js';\nimport {fromUserCoordinate as _ol_proj$fromUserCoordinate} from '../../ol/proj.js';\nimport {toUserExtent as _ol_proj$toUserExtent} from '../../ol/proj.js';\nimport {fromUserExtent as _ol_proj$fromUserExtent} from '../../ol/proj.js';\nimport {toUserResolution as _ol_proj$toUserResolution} from '../../ol/proj.js';\nimport {fromUserResolution as _ol_proj$fromUserResolution} from '../../ol/proj.js';\nimport {createSafeCoordinateTransform as _ol_proj$createSafeCoordinateTransform} from '../../ol/proj.js';\nimport {addCommon as _ol_proj$addCommon} from '../../ol/proj.js';\nimport {toContext as _ol_render$toContext} from '../../ol/render.js';\nimport {getVectorContext as _ol_render$getVectorContext} from '../../ol/render.js';\nimport {getRenderPixel as _ol_render$getRenderPixel} from '../../ol/render.js';\nimport {canvasPool as _ol_reproj$canvasPool} from '../../ol/reproj.js';\nimport {calculateSourceResolution as _ol_reproj$calculateSourceResolution} from '../../ol/reproj.js';\nimport {calculateSourceExtentResolution as _ol_reproj$calculateSourceExtentResolution} from '../../ol/reproj.js';\nimport {render as _ol_reproj$render} from '../../ol/reproj.js';\nimport {fromResolutionLike as _ol_resolution$fromResolutionLike} from '../../ol/resolution.js';\nimport {createSnapToResolutions as _ol_resolutionconstraint$createSnapToResolutions} from '../../ol/resolutionconstraint.js';\nimport {createSnapToPower as _ol_resolutionconstraint$createSnapToPower} from '../../ol/resolutionconstraint.js';\nimport {createMinMaxResolution as _ol_resolutionconstraint$createMinMaxResolution} from '../../ol/resolutionconstraint.js';\nimport {disable as _ol_rotationconstraint$disable} from '../../ol/rotationconstraint.js';\nimport {none as _ol_rotationconstraint$none} from '../../ol/rotationconstraint.js';\nimport {createSnapToN as _ol_rotationconstraint$createSnapToN} from '../../ol/rotationconstraint.js';\nimport {createSnapToZero as _ol_rotationconstraint$createSnapToZero} from '../../ol/rotationconstraint.js';\nimport {buffer as _ol_size$buffer} from '../../ol/size.js';\nimport {hasArea as _ol_size$hasArea} from '../../ol/size.js';\nimport {scale as _ol_size$scale} from '../../ol/size.js';\nimport {toSize as _ol_size$toSize} from '../../ol/size.js';\nimport {sourcesFromTileGrid as _ol_source$sourcesFromTileGrid} from '../../ol/source.js';\nimport {DEFAULT_RADIUS as _ol_sphere$DEFAULT_RADIUS} from '../../ol/sphere.js';\nimport {getDistance as _ol_sphere$getDistance} from '../../ol/sphere.js';\nimport {getLength as _ol_sphere$getLength} from '../../ol/sphere.js';\nimport {getArea as _ol_sphere$getArea} from '../../ol/sphere.js';\nimport {offset as _ol_sphere$offset} from '../../ol/sphere.js';\nimport {padNumber as _ol_string$padNumber} from '../../ol/string.js';\nimport {compareVersions as _ol_string$compareVersions} from '../../ol/string.js';\nimport {createOrUpdate as _ol_tilecoord$createOrUpdate} from '../../ol/tilecoord.js';\nimport {getKeyZXY as _ol_tilecoord$getKeyZXY} from '../../ol/tilecoord.js';\nimport {getKey as _ol_tilecoord$getKey} from '../../ol/tilecoord.js';\nimport {getCacheKeyForTileKey as _ol_tilecoord$getCacheKeyForTileKey} from '../../ol/tilecoord.js';\nimport {fromKey as _ol_tilecoord$fromKey} from '../../ol/tilecoord.js';\nimport {hash as _ol_tilecoord$hash} from '../../ol/tilecoord.js';\nimport {withinExtentAndZ as _ol_tilecoord$withinExtentAndZ} from '../../ol/tilecoord.js';\nimport {getForProjection as _ol_tilegrid$getForProjection} from '../../ol/tilegrid.js';\nimport {wrapX as _ol_tilegrid$wrapX} from '../../ol/tilegrid.js';\nimport {createForExtent as _ol_tilegrid$createForExtent} from '../../ol/tilegrid.js';\nimport {createXYZ as _ol_tilegrid$createXYZ} from '../../ol/tilegrid.js';\nimport {createForProjection as _ol_tilegrid$createForProjection} from '../../ol/tilegrid.js';\nimport {extentFromProjection as _ol_tilegrid$extentFromProjection} from '../../ol/tilegrid.js';\nimport {createFromTemplate as _ol_tileurlfunction$createFromTemplate} from '../../ol/tileurlfunction.js';\nimport {createFromTemplates as _ol_tileurlfunction$createFromTemplates} from '../../ol/tileurlfunction.js';\nimport {createFromTileUrlFunctions as _ol_tileurlfunction$createFromTileUrlFunctions} from '../../ol/tileurlfunction.js';\nimport {nullTileUrlFunction as _ol_tileurlfunction$nullTileUrlFunction} from '../../ol/tileurlfunction.js';\nimport {expandUrl as _ol_tileurlfunction$expandUrl} from '../../ol/tileurlfunction.js';\nimport {create as _ol_transform$create} from '../../ol/transform.js';\nimport {reset as _ol_transform$reset} from '../../ol/transform.js';\nimport {multiply as _ol_transform$multiply} from '../../ol/transform.js';\nimport {set as _ol_transform$set} from '../../ol/transform.js';\nimport {setFromArray as _ol_transform$setFromArray} from '../../ol/transform.js';\nimport {apply as _ol_transform$apply} from '../../ol/transform.js';\nimport {rotate as _ol_transform$rotate} from '../../ol/transform.js';\nimport {scale as _ol_transform$scale} from '../../ol/transform.js';\nimport {makeScale as _ol_transform$makeScale} from '../../ol/transform.js';\nimport {translate as _ol_transform$translate} from '../../ol/transform.js';\nimport {compose as _ol_transform$compose} from '../../ol/transform.js';\nimport {composeCssTransform as _ol_transform$composeCssTransform} from '../../ol/transform.js';\nimport {invert as _ol_transform$invert} from '../../ol/transform.js';\nimport {makeInverse as _ol_transform$makeInverse} from '../../ol/transform.js';\nimport {determinant as _ol_transform$determinant} from '../../ol/transform.js';\nimport {toString as _ol_transform$toString} from '../../ol/transform.js';\nimport {appendParams as _ol_uri$appendParams} from '../../ol/uri.js';\nimport {abstract as _ol_util$abstract} from '../../ol/util.js';\nimport {getUid as _ol_util$getUid} from '../../ol/util.js';\nimport {VERSION as _ol_util$VERSION} from '../../ol/util.js';\nimport {XML_SCHEMA_INSTANCE_URI as _ol_xml$XML_SCHEMA_INSTANCE_URI} from '../../ol/xml.js';\nimport {createElementNS as _ol_xml$createElementNS} from '../../ol/xml.js';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from '../../ol/xml.js';\nimport {getAllTextContent_ as _ol_xml$getAllTextContent_} from '../../ol/xml.js';\nimport {isDocument as _ol_xml$isDocument} from '../../ol/xml.js';\nimport {getAttributeNS as _ol_xml$getAttributeNS} from '../../ol/xml.js';\nimport {parse as _ol_xml$parse} from '../../ol/xml.js';\nimport {makeArrayExtender as _ol_xml$makeArrayExtender} from '../../ol/xml.js';\nimport {makeArrayPusher as _ol_xml$makeArrayPusher} from '../../ol/xml.js';\nimport {makeReplacer as _ol_xml$makeReplacer} from '../../ol/xml.js';\nimport {makeObjectPropertyPusher as _ol_xml$makeObjectPropertyPusher} from '../../ol/xml.js';\nimport {makeObjectPropertySetter as _ol_xml$makeObjectPropertySetter} from '../../ol/xml.js';\nimport {makeChildAppender as _ol_xml$makeChildAppender} from '../../ol/xml.js';\nimport {makeArraySerializer as _ol_xml$makeArraySerializer} from '../../ol/xml.js';\nimport {makeSimpleNodeFactory as _ol_xml$makeSimpleNodeFactory} from '../../ol/xml.js';\nimport {OBJECT_PROPERTY_NODE_FACTORY as _ol_xml$OBJECT_PROPERTY_NODE_FACTORY} from '../../ol/xml.js';\nimport {makeSequence as _ol_xml$makeSequence} from '../../ol/xml.js';\nimport {makeStructureNS as _ol_xml$makeStructureNS} from '../../ol/xml.js';\nimport {parseNode as _ol_xml$parseNode} from '../../ol/xml.js';\nimport {pushParseAndPop as _ol_xml$pushParseAndPop} from '../../ol/xml.js';\nimport {serialize as _ol_xml$serialize} from '../../ol/xml.js';\nimport {pushSerializeAndPop as _ol_xml$pushSerializeAndPop} from '../../ol/xml.js';\nimport {registerXMLSerializer as _ol_xml$registerXMLSerializer} from '../../ol/xml.js';\nimport {getXMLSerializer as _ol_xml$getXMLSerializer} from '../../ol/xml.js';\nimport {registerDocument as _ol_xml$registerDocument} from '../../ol/xml.js';\nimport {getDocument as _ol_xml$getDocument} from '../../ol/xml.js';\nimport {create as _ol_vec_mat4$create} from '../../ol/vec/mat4.js';\nimport {fromTransform as _ol_vec_mat4$fromTransform} from '../../ol/vec/mat4.js';\nimport $ol$tilegrid$TileGrid from '../../ol/tilegrid/TileGrid.js';\nimport $ol$tilegrid$WMTS from '../../ol/tilegrid/WMTS.js';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from '../../ol/tilegrid/WMTS.js';\nimport {DEFAULT_MAX_ZOOM as _ol_tilegrid_common$DEFAULT_MAX_ZOOM} from '../../ol/tilegrid/common.js';\nimport {DEFAULT_TILE_SIZE as _ol_tilegrid_common$DEFAULT_TILE_SIZE} from '../../ol/tilegrid/common.js';\nimport $ol$style$Circle from '../../ol/style/Circle.js';\nimport $ol$style$Fill from '../../ol/style/Fill.js';\nimport $ol$style$Icon from '../../ol/style/Icon.js';\nimport $ol$style$IconImage from '../../ol/style/IconImage.js';\nimport {get as _ol_style_IconImage$get} from '../../ol/style/IconImage.js';\nimport $ol$style$IconImageCache from '../../ol/style/IconImageCache.js';\nimport {getCacheKey as _ol_style_IconImageCache$getCacheKey} from '../../ol/style/IconImageCache.js';\nimport {shared as _ol_style_IconImageCache$shared} from '../../ol/style/IconImageCache.js';\nimport $ol$style$Image from '../../ol/style/Image.js';\nimport $ol$style$RegularShape from '../../ol/style/RegularShape.js';\nimport $ol$style$Stroke from '../../ol/style/Stroke.js';\nimport $ol$style$Style from '../../ol/style/Style.js';\nimport {toFunction as _ol_style_Style$toFunction} from '../../ol/style/Style.js';\nimport {createDefaultStyle as _ol_style_Style$createDefaultStyle} from '../../ol/style/Style.js';\nimport {createEditingStyle as _ol_style_Style$createEditingStyle} from '../../ol/style/Style.js';\nimport $ol$style$Text from '../../ol/style/Text.js';\nimport {createDefaultStyle as _ol_style_flat$createDefaultStyle} from '../../ol/style/flat.js';\nimport $ol$structs$LRUCache from '../../ol/structs/LRUCache.js';\nimport $ol$structs$LinkedList from '../../ol/structs/LinkedList.js';\nimport {DROP as _ol_structs_PriorityQueue$DROP} from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$PriorityQueue from '../../ol/structs/PriorityQueue.js';\nimport $ol$structs$RBush from '../../ol/structs/RBush.js';\nimport {quadKey as _ol_source_BingMaps$quadKey} from '../../ol/source/BingMaps.js';\nimport $ol$source$BingMaps from '../../ol/source/BingMaps.js';\nimport $ol$source$Cluster from '../../ol/source/Cluster.js';\nimport $ol$source$DataTile from '../../ol/source/DataTile.js';\nimport $ol$source$Google from '../../ol/source/Google.js';\nimport {ImageSourceEvent as _ol_source_Image$ImageSourceEvent} from '../../ol/source/Image.js';\nimport $ol$source$Image from '../../ol/source/Image.js';\nimport {defaultImageLoadFunction as _ol_source_Image$defaultImageLoadFunction} from '../../ol/source/Image.js';\nimport {getRequestExtent as _ol_source_Image$getRequestExtent} from '../../ol/source/Image.js';\nimport $ol$source$ImageArcGISRest from '../../ol/source/ImageArcGISRest.js';\nimport $ol$source$ImageCanvas from '../../ol/source/ImageCanvas.js';\nimport $ol$source$ImageStatic from '../../ol/source/ImageStatic.js';\nimport $ol$source$ImageWMS from '../../ol/source/ImageWMS.js';\nimport $ol$source$OGCMapTile from '../../ol/source/OGCMapTile.js';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from '../../ol/source/OSM.js';\nimport $ol$source$OSM from '../../ol/source/OSM.js';\nimport {newImageData as _ol_source_Raster$newImageData} from '../../ol/source/Raster.js';\nimport {Processor as _ol_source_Raster$Processor} from '../../ol/source/Raster.js';\nimport {RasterSourceEvent as _ol_source_Raster$RasterSourceEvent} from '../../ol/source/Raster.js';\nimport $ol$source$Raster from '../../ol/source/Raster.js';\nimport $ol$source$Source from '../../ol/source/Source.js';\nimport $ol$source$StadiaMaps from '../../ol/source/StadiaMaps.js';\nimport $ol$source$Tile from '../../ol/source/Tile.js';\nimport {TileSourceEvent as _ol_source_Tile$TileSourceEvent} from '../../ol/source/Tile.js';\nimport $ol$source$TileArcGISRest from '../../ol/source/TileArcGISRest.js';\nimport $ol$source$TileDebug from '../../ol/source/TileDebug.js';\nimport $ol$source$TileImage from '../../ol/source/TileImage.js';\nimport $ol$source$TileJSON from '../../ol/source/TileJSON.js';\nimport $ol$source$TileWMS from '../../ol/source/TileWMS.js';\nimport {CustomTile as _ol_source_UTFGrid$CustomTile} from '../../ol/source/UTFGrid.js';\nimport $ol$source$UTFGrid from '../../ol/source/UTFGrid.js';\nimport $ol$source$UrlTile from '../../ol/source/UrlTile.js';\nimport {VectorSourceEvent as _ol_source_Vector$VectorSourceEvent} from '../../ol/source/Vector.js';\nimport $ol$source$Vector from '../../ol/source/Vector.js';\nimport $ol$source$WMTS from '../../ol/source/WMTS.js';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from '../../ol/source/WMTS.js';\nimport $ol$source$XYZ from '../../ol/source/XYZ.js';\nimport {getRequestUrl as _ol_source_arcgisRest$getRequestUrl} from '../../ol/source/arcgisRest.js';\nimport {createLoader as _ol_source_arcgisRest$createLoader} from '../../ol/source/arcgisRest.js';\nimport {DEFAULT_WMS_VERSION as _ol_source_common$DEFAULT_WMS_VERSION} from '../../ol/source/common.js';\nimport {DECIMALS as _ol_source_common$DECIMALS} from '../../ol/source/common.js';\nimport {getMapTileUrlTemplate as _ol_source_ogcTileUtil$getMapTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getVectorTileUrlTemplate as _ol_source_ogcTileUtil$getVectorTileUrlTemplate} from '../../ol/source/ogcTileUtil.js';\nimport {getTileSetInfo as _ol_source_ogcTileUtil$getTileSetInfo} from '../../ol/source/ogcTileUtil.js';\nimport {createLoader as _ol_source_static$createLoader} from '../../ol/source/static.js';\nimport {DEFAULT_VERSION as _ol_source_wms$DEFAULT_VERSION} from '../../ol/source/wms.js';\nimport {getRequestUrl as _ol_source_wms$getRequestUrl} from '../../ol/source/wms.js';\nimport {getImageSrc as _ol_source_wms$getImageSrc} from '../../ol/source/wms.js';\nimport {getRequestParams as _ol_source_wms$getRequestParams} from '../../ol/source/wms.js';\nimport {createLoader as _ol_source_wms$createLoader} from '../../ol/source/wms.js';\nimport {getFeatureInfoUrl as _ol_source_wms$getFeatureInfoUrl} from '../../ol/source/wms.js';\nimport {getLegendUrl as _ol_source_wms$getLegendUrl} from '../../ol/source/wms.js';\nimport $ol$reproj$DataTile from '../../ol/reproj/DataTile.js';\nimport $ol$reproj$Image from '../../ol/reproj/Image.js';\nimport $ol$reproj$Tile from '../../ol/reproj/Tile.js';\nimport $ol$reproj$Triangulation from '../../ol/reproj/Triangulation.js';\nimport {ERROR_THRESHOLD as _ol_reproj_common$ERROR_THRESHOLD} from '../../ol/reproj/common.js';\nimport $ol$renderer$Composite from '../../ol/renderer/Composite.js';\nimport $ol$renderer$Layer from '../../ol/renderer/Layer.js';\nimport $ol$renderer$Map from '../../ol/renderer/Map.js';\nimport {defaultOrder as _ol_renderer_vector$defaultOrder} from '../../ol/renderer/vector.js';\nimport {getSquaredTolerance as _ol_renderer_vector$getSquaredTolerance} from '../../ol/renderer/vector.js';\nimport {getTolerance as _ol_renderer_vector$getTolerance} from '../../ol/renderer/vector.js';\nimport {renderFeature as _ol_renderer_vector$renderFeature} from '../../ol/renderer/vector.js';\nimport $ol$renderer$canvas$ImageLayer from '../../ol/renderer/canvas/ImageLayer.js';\nimport {canvasPool as _ol_renderer_canvas_Layer$canvasPool} from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$Layer from '../../ol/renderer/canvas/Layer.js';\nimport $ol$renderer$canvas$TileLayer from '../../ol/renderer/canvas/TileLayer.js';\nimport $ol$renderer$canvas$VectorImageLayer from '../../ol/renderer/canvas/VectorImageLayer.js';\nimport $ol$renderer$canvas$VectorLayer from '../../ol/renderer/canvas/VectorLayer.js';\nimport $ol$render$Box from '../../ol/render/Box.js';\nimport $ol$render$Event from '../../ol/render/Event.js';\nimport $ol$render$Feature from '../../ol/render/Feature.js';\nimport {toGeometry as _ol_render_Feature$toGeometry} from '../../ol/render/Feature.js';\nimport {toFeature as _ol_render_Feature$toFeature} from '../../ol/render/Feature.js';\nimport $ol$render$VectorContext from '../../ol/render/VectorContext.js';\nimport {defaultFont as _ol_render_canvas$defaultFont} from '../../ol/render/canvas.js';\nimport {defaultFillStyle as _ol_render_canvas$defaultFillStyle} from '../../ol/render/canvas.js';\nimport {defaultLineCap as _ol_render_canvas$defaultLineCap} from '../../ol/render/canvas.js';\nimport {defaultLineDash as _ol_render_canvas$defaultLineDash} from '../../ol/render/canvas.js';\nimport {defaultLineDashOffset as _ol_render_canvas$defaultLineDashOffset} from '../../ol/render/canvas.js';\nimport {defaultLineJoin as _ol_render_canvas$defaultLineJoin} from '../../ol/render/canvas.js';\nimport {defaultMiterLimit as _ol_render_canvas$defaultMiterLimit} from '../../ol/render/canvas.js';\nimport {defaultStrokeStyle as _ol_render_canvas$defaultStrokeStyle} from '../../ol/render/canvas.js';\nimport {defaultTextAlign as _ol_render_canvas$defaultTextAlign} from '../../ol/render/canvas.js';\nimport {defaultTextBaseline as _ol_render_canvas$defaultTextBaseline} from '../../ol/render/canvas.js';\nimport {defaultPadding as _ol_render_canvas$defaultPadding} from '../../ol/render/canvas.js';\nimport {defaultLineWidth as _ol_render_canvas$defaultLineWidth} from '../../ol/render/canvas.js';\nimport {checkedFonts as _ol_render_canvas$checkedFonts} from '../../ol/render/canvas.js';\nimport {textHeights as _ol_render_canvas$textHeights} from '../../ol/render/canvas.js';\nimport {registerFont as _ol_render_canvas$registerFont} from '../../ol/render/canvas.js';\nimport {measureTextHeight as _ol_render_canvas$measureTextHeight} from '../../ol/render/canvas.js';\nimport {measureTextWidth as _ol_render_canvas$measureTextWidth} from '../../ol/render/canvas.js';\nimport {measureAndCacheTextWidth as _ol_render_canvas$measureAndCacheTextWidth} from '../../ol/render/canvas.js';\nimport {getTextDimensions as _ol_render_canvas$getTextDimensions} from '../../ol/render/canvas.js';\nimport {rotateAtOffset as _ol_render_canvas$rotateAtOffset} from '../../ol/render/canvas.js';\nimport {drawImageOrLabel as _ol_render_canvas$drawImageOrLabel} from '../../ol/render/canvas.js';\nimport $ol$render$canvas$Builder from '../../ol/render/canvas/Builder.js';\nimport $ol$render$canvas$BuilderGroup from '../../ol/render/canvas/BuilderGroup.js';\nimport $ol$render$canvas$Executor from '../../ol/render/canvas/Executor.js';\nimport {ALL as _ol_render_canvas_ExecutorGroup$ALL} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {DECLUTTER as _ol_render_canvas_ExecutorGroup$DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport {NON_DECLUTTER as _ol_render_canvas_ExecutorGroup$NON_DECLUTTER} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ExecutorGroup from '../../ol/render/canvas/ExecutorGroup.js';\nimport {getPixelIndexArray as _ol_render_canvas_ExecutorGroup$getPixelIndexArray} from '../../ol/render/canvas/ExecutorGroup.js';\nimport $ol$render$canvas$ImageBuilder from '../../ol/render/canvas/ImageBuilder.js';\nimport $ol$render$canvas$Immediate from '../../ol/render/canvas/Immediate.js';\nimport {fillInstruction as _ol_render_canvas_Instruction$fillInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {strokeInstruction as _ol_render_canvas_Instruction$strokeInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {beginPathInstruction as _ol_render_canvas_Instruction$beginPathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport {closePathInstruction as _ol_render_canvas_Instruction$closePathInstruction} from '../../ol/render/canvas/Instruction.js';\nimport $ol$render$canvas$LineStringBuilder from '../../ol/render/canvas/LineStringBuilder.js';\nimport $ol$render$canvas$PolygonBuilder from '../../ol/render/canvas/PolygonBuilder.js';\nimport {TEXT_ALIGN as _ol_render_canvas_TextBuilder$TEXT_ALIGN} from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$TextBuilder from '../../ol/render/canvas/TextBuilder.js';\nimport $ol$render$canvas$ZIndexContext from '../../ol/render/canvas/ZIndexContext.js';\nimport {HIT_DETECT_RESOLUTION as _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION} from '../../ol/render/canvas/hitdetect.js';\nimport {createHitDetectionImageData as _ol_render_canvas_hitdetect$createHitDetectionImageData} from '../../ol/render/canvas/hitdetect.js';\nimport {hitDetect as _ol_render_canvas_hitdetect$hitDetect} from '../../ol/render/canvas/hitdetect.js';\nimport {rulesToStyleFunction as _ol_render_canvas_style$rulesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {flatStylesToStyleFunction as _ol_render_canvas_style$flatStylesToStyleFunction} from '../../ol/render/canvas/style.js';\nimport {buildRuleSet as _ol_render_canvas_style$buildRuleSet} from '../../ol/render/canvas/style.js';\nimport {buildStyle as _ol_render_canvas_style$buildStyle} from '../../ol/render/canvas/style.js';\nimport $ol$proj$Projection from '../../ol/proj/Projection.js';\nimport {fromCode as _ol_proj_Units$fromCode} from '../../ol/proj/Units.js';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from '../../ol/proj/Units.js';\nimport {RADIUS as _ol_proj_epsg3857$RADIUS} from '../../ol/proj/epsg3857.js';\nimport {HALF_SIZE as _ol_proj_epsg3857$HALF_SIZE} from '../../ol/proj/epsg3857.js';\nimport {EXTENT as _ol_proj_epsg3857$EXTENT} from '../../ol/proj/epsg3857.js';\nimport {WORLD_EXTENT as _ol_proj_epsg3857$WORLD_EXTENT} from '../../ol/proj/epsg3857.js';\nimport {MAX_SAFE_Y as _ol_proj_epsg3857$MAX_SAFE_Y} from '../../ol/proj/epsg3857.js';\nimport {PROJECTIONS as _ol_proj_epsg3857$PROJECTIONS} from '../../ol/proj/epsg3857.js';\nimport {fromEPSG4326 as _ol_proj_epsg3857$fromEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {toEPSG4326 as _ol_proj_epsg3857$toEPSG4326} from '../../ol/proj/epsg3857.js';\nimport {RADIUS as _ol_proj_epsg4326$RADIUS} from '../../ol/proj/epsg4326.js';\nimport {EXTENT as _ol_proj_epsg4326$EXTENT} from '../../ol/proj/epsg4326.js';\nimport {METERS_PER_UNIT as _ol_proj_epsg4326$METERS_PER_UNIT} from '../../ol/proj/epsg4326.js';\nimport {PROJECTIONS as _ol_proj_epsg4326$PROJECTIONS} from '../../ol/proj/epsg4326.js';\nimport {isRegistered as _ol_proj_proj4$isRegistered} from '../../ol/proj/proj4.js';\nimport {unregister as _ol_proj_proj4$unregister} from '../../ol/proj/proj4.js';\nimport {register as _ol_proj_proj4$register} from '../../ol/proj/proj4.js';\nimport {setEPSGLookup as _ol_proj_proj4$setEPSGLookup} from '../../ol/proj/proj4.js';\nimport {getEPSGLookup as _ol_proj_proj4$getEPSGLookup} from '../../ol/proj/proj4.js';\nimport {fromEPSGCode as _ol_proj_proj4$fromEPSGCode} from '../../ol/proj/proj4.js';\nimport {epsgLookupMapTiler as _ol_proj_proj4$epsgLookupMapTiler} from '../../ol/proj/proj4.js';\nimport {clear as _ol_proj_projections$clear} from '../../ol/proj/projections.js';\nimport {get as _ol_proj_projections$get} from '../../ol/proj/projections.js';\nimport {add as _ol_proj_projections$add} from '../../ol/proj/projections.js';\nimport {clear as _ol_proj_transforms$clear} from '../../ol/proj/transforms.js';\nimport {add as _ol_proj_transforms$add} from '../../ol/proj/transforms.js';\nimport {remove as _ol_proj_transforms$remove} from '../../ol/proj/transforms.js';\nimport {get as _ol_proj_transforms$get} from '../../ol/proj/transforms.js';\nimport $ol$layer$Base from '../../ol/layer/Base.js';\nimport $ol$layer$BaseImage from '../../ol/layer/BaseImage.js';\nimport $ol$layer$BaseTile from '../../ol/layer/BaseTile.js';\nimport $ol$layer$BaseVector from '../../ol/layer/BaseVector.js';\nimport $ol$layer$Graticule from '../../ol/layer/Graticule.js';\nimport {GroupEvent as _ol_layer_Group$GroupEvent} from '../../ol/layer/Group.js';\nimport $ol$layer$Group from '../../ol/layer/Group.js';\nimport $ol$layer$Heatmap from '../../ol/layer/Heatmap.js';\nimport $ol$layer$Image from '../../ol/layer/Image.js';\nimport $ol$layer$Layer from '../../ol/layer/Layer.js';\nimport {inView as _ol_layer_Layer$inView} from '../../ol/layer/Layer.js';\nimport $ol$layer$Tile from '../../ol/layer/Tile.js';\nimport $ol$layer$Vector from '../../ol/layer/Vector.js';\nimport $ol$layer$VectorImage from '../../ol/layer/VectorImage.js';\nimport $ol$interaction$DblClickDragZoom from '../../ol/interaction/DblClickDragZoom.js';\nimport $ol$interaction$DoubleClickZoom from '../../ol/interaction/DoubleClickZoom.js';\nimport {DragAndDropEvent as _ol_interaction_DragAndDrop$DragAndDropEvent} from '../../ol/interaction/DragAndDrop.js';\nimport $ol$interaction$DragAndDrop from '../../ol/interaction/DragAndDrop.js';\nimport {DragBoxEvent as _ol_interaction_DragBox$DragBoxEvent} from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragBox from '../../ol/interaction/DragBox.js';\nimport $ol$interaction$DragPan from '../../ol/interaction/DragPan.js';\nimport $ol$interaction$DragRotate from '../../ol/interaction/DragRotate.js';\nimport $ol$interaction$DragRotateAndZoom from '../../ol/interaction/DragRotateAndZoom.js';\nimport $ol$interaction$DragZoom from '../../ol/interaction/DragZoom.js';\nimport {DrawEvent as _ol_interaction_Draw$DrawEvent} from '../../ol/interaction/Draw.js';\nimport $ol$interaction$Draw from '../../ol/interaction/Draw.js';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from '../../ol/interaction/Draw.js';\nimport {createBox as _ol_interaction_Draw$createBox} from '../../ol/interaction/Draw.js';\nimport {ExtentEvent as _ol_interaction_Extent$ExtentEvent} from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Extent from '../../ol/interaction/Extent.js';\nimport $ol$interaction$Interaction from '../../ol/interaction/Interaction.js';\nimport {pan as _ol_interaction_Interaction$pan} from '../../ol/interaction/Interaction.js';\nimport {zoomByDelta as _ol_interaction_Interaction$zoomByDelta} from '../../ol/interaction/Interaction.js';\nimport $ol$interaction$KeyboardPan from '../../ol/interaction/KeyboardPan.js';\nimport $ol$interaction$KeyboardZoom from '../../ol/interaction/KeyboardZoom.js';\nimport $ol$interaction$Link from '../../ol/interaction/Link.js';\nimport {ModifyEvent as _ol_interaction_Modify$ModifyEvent} from '../../ol/interaction/Modify.js';\nimport $ol$interaction$Modify from '../../ol/interaction/Modify.js';\nimport $ol$interaction$MouseWheelZoom from '../../ol/interaction/MouseWheelZoom.js';\nimport $ol$interaction$PinchRotate from '../../ol/interaction/PinchRotate.js';\nimport $ol$interaction$PinchZoom from '../../ol/interaction/PinchZoom.js';\nimport $ol$interaction$Pointer from '../../ol/interaction/Pointer.js';\nimport {centroid as _ol_interaction_Pointer$centroid} from '../../ol/interaction/Pointer.js';\nimport {SelectEvent as _ol_interaction_Select$SelectEvent} from '../../ol/interaction/Select.js';\nimport $ol$interaction$Select from '../../ol/interaction/Select.js';\nimport $ol$interaction$Snap from '../../ol/interaction/Snap.js';\nimport {TranslateEvent as _ol_interaction_Translate$TranslateEvent} from '../../ol/interaction/Translate.js';\nimport $ol$interaction$Translate from '../../ol/interaction/Translate.js';\nimport {defaults as _ol_interaction_defaults$defaults} from '../../ol/interaction/defaults.js';\nimport $ol$geom$Circle from '../../ol/geom/Circle.js';\nimport $ol$geom$Geometry from '../../ol/geom/Geometry.js';\nimport $ol$geom$GeometryCollection from '../../ol/geom/GeometryCollection.js';\nimport $ol$geom$LineString from '../../ol/geom/LineString.js';\nimport $ol$geom$LinearRing from '../../ol/geom/LinearRing.js';\nimport $ol$geom$MultiLineString from '../../ol/geom/MultiLineString.js';\nimport $ol$geom$MultiPoint from '../../ol/geom/MultiPoint.js';\nimport $ol$geom$MultiPolygon from '../../ol/geom/MultiPolygon.js';\nimport $ol$geom$Point from '../../ol/geom/Point.js';\nimport $ol$geom$Polygon from '../../ol/geom/Polygon.js';\nimport {circular as _ol_geom_Polygon$circular} from '../../ol/geom/Polygon.js';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from '../../ol/geom/Polygon.js';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from '../../ol/geom/Polygon.js';\nimport {makeRegular as _ol_geom_Polygon$makeRegular} from '../../ol/geom/Polygon.js';\nimport $ol$geom$SimpleGeometry from '../../ol/geom/SimpleGeometry.js';\nimport {getLayoutForStride as _ol_geom_SimpleGeometry$getLayoutForStride} from '../../ol/geom/SimpleGeometry.js';\nimport {getStrideForLayout as _ol_geom_SimpleGeometry$getStrideForLayout} from '../../ol/geom/SimpleGeometry.js';\nimport {transformGeom2D as _ol_geom_SimpleGeometry$transformGeom2D} from '../../ol/geom/SimpleGeometry.js';\nimport {linearRing as _ol_geom_flat_area$linearRing} from '../../ol/geom/flat/area.js';\nimport {linearRings as _ol_geom_flat_area$linearRings} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_area$linearRingss} from '../../ol/geom/flat/area.js';\nimport {linearRingss as _ol_geom_flat_center$linearRingss} from '../../ol/geom/flat/center.js';\nimport {maxSquaredDelta as _ol_geom_flat_closest$maxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {arrayMaxSquaredDelta as _ol_geom_flat_closest$arrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {multiArrayMaxSquaredDelta as _ol_geom_flat_closest$multiArrayMaxSquaredDelta} from '../../ol/geom/flat/closest.js';\nimport {assignClosestPoint as _ol_geom_flat_closest$assignClosestPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestArrayPoint as _ol_geom_flat_closest$assignClosestArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {assignClosestMultiArrayPoint as _ol_geom_flat_closest$assignClosestMultiArrayPoint} from '../../ol/geom/flat/closest.js';\nimport {linearRingContainsExtent as _ol_geom_flat_contains$linearRingContainsExtent} from '../../ol/geom/flat/contains.js';\nimport {linearRingContainsXY as _ol_geom_flat_contains$linearRingContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingsContainsXY as _ol_geom_flat_contains$linearRingsContainsXY} from '../../ol/geom/flat/contains.js';\nimport {linearRingssContainsXY as _ol_geom_flat_contains$linearRingssContainsXY} from '../../ol/geom/flat/contains.js';\nimport {deflateCoordinate as _ol_geom_flat_deflate$deflateCoordinate} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinates as _ol_geom_flat_deflate$deflateCoordinates} from '../../ol/geom/flat/deflate.js';\nimport {deflateCoordinatesArray as _ol_geom_flat_deflate$deflateCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {deflateMultiCoordinatesArray as _ol_geom_flat_deflate$deflateMultiCoordinatesArray} from '../../ol/geom/flat/deflate.js';\nimport {flipXY as _ol_geom_flat_flip$flipXY} from '../../ol/geom/flat/flip.js';\nimport {greatCircleArc as _ol_geom_flat_geodesic$greatCircleArc} from '../../ol/geom/flat/geodesic.js';\nimport {meridian as _ol_geom_flat_geodesic$meridian} from '../../ol/geom/flat/geodesic.js';\nimport {parallel as _ol_geom_flat_geodesic$parallel} from '../../ol/geom/flat/geodesic.js';\nimport {inflateCoordinates as _ol_geom_flat_inflate$inflateCoordinates} from '../../ol/geom/flat/inflate.js';\nimport {inflateCoordinatesArray as _ol_geom_flat_inflate$inflateCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {inflateMultiCoordinatesArray as _ol_geom_flat_inflate$inflateMultiCoordinatesArray} from '../../ol/geom/flat/inflate.js';\nimport {getInteriorPointOfArray as _ol_geom_flat_interiorpoint$getInteriorPointOfArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {getInteriorPointsOfMultiArray as _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray} from '../../ol/geom/flat/interiorpoint.js';\nimport {interpolatePoint as _ol_geom_flat_interpolate$interpolatePoint} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringCoordinateAtM as _ol_geom_flat_interpolate$lineStringCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {lineStringsCoordinateAtM as _ol_geom_flat_interpolate$lineStringsCoordinateAtM} from '../../ol/geom/flat/interpolate.js';\nimport {intersectsLineString as _ol_geom_flat_intersectsextent$intersectsLineString} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLineStringArray as _ol_geom_flat_intersectsextent$intersectsLineStringArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRing as _ol_geom_flat_intersectsextent$intersectsLinearRing} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingArray as _ol_geom_flat_intersectsextent$intersectsLinearRingArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {intersectsLinearRingMultiArray as _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray} from '../../ol/geom/flat/intersectsextent.js';\nimport {lineStringLength as _ol_geom_flat_length$lineStringLength} from '../../ol/geom/flat/length.js';\nimport {linearRingLength as _ol_geom_flat_length$linearRingLength} from '../../ol/geom/flat/length.js';\nimport {linearRingIsClockwise as _ol_geom_flat_orient$linearRingIsClockwise} from '../../ol/geom/flat/orient.js';\nimport {linearRingsAreOriented as _ol_geom_flat_orient$linearRingsAreOriented} from '../../ol/geom/flat/orient.js';\nimport {linearRingssAreOriented as _ol_geom_flat_orient$linearRingssAreOriented} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRings as _ol_geom_flat_orient$orientLinearRings} from '../../ol/geom/flat/orient.js';\nimport {orientLinearRingsArray as _ol_geom_flat_orient$orientLinearRingsArray} from '../../ol/geom/flat/orient.js';\nimport {inflateEnds as _ol_geom_flat_orient$inflateEnds} from '../../ol/geom/flat/orient.js';\nimport {coordinates as _ol_geom_flat_reverse$coordinates} from '../../ol/geom/flat/reverse.js';\nimport {forEach as _ol_geom_flat_segments$forEach} from '../../ol/geom/flat/segments.js';\nimport {simplifyLineString as _ol_geom_flat_simplify$simplifyLineString} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeucker as _ol_geom_flat_simplify$douglasPeucker} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerArray as _ol_geom_flat_simplify$douglasPeuckerArray} from '../../ol/geom/flat/simplify.js';\nimport {douglasPeuckerMultiArray as _ol_geom_flat_simplify$douglasPeuckerMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {radialDistance as _ol_geom_flat_simplify$radialDistance} from '../../ol/geom/flat/simplify.js';\nimport {snap as _ol_geom_flat_simplify$snap} from '../../ol/geom/flat/simplify.js';\nimport {quantize as _ol_geom_flat_simplify$quantize} from '../../ol/geom/flat/simplify.js';\nimport {quantizeArray as _ol_geom_flat_simplify$quantizeArray} from '../../ol/geom/flat/simplify.js';\nimport {quantizeMultiArray as _ol_geom_flat_simplify$quantizeMultiArray} from '../../ol/geom/flat/simplify.js';\nimport {matchingChunk as _ol_geom_flat_straightchunk$matchingChunk} from '../../ol/geom/flat/straightchunk.js';\nimport {drawTextOnPath as _ol_geom_flat_textpath$drawTextOnPath} from '../../ol/geom/flat/textpath.js';\nimport {lineStringIsClosed as _ol_geom_flat_topology$lineStringIsClosed} from '../../ol/geom/flat/topology.js';\nimport {transform2D as _ol_geom_flat_transform$transform2D} from '../../ol/geom/flat/transform.js';\nimport {rotate as _ol_geom_flat_transform$rotate} from '../../ol/geom/flat/transform.js';\nimport {scale as _ol_geom_flat_transform$scale} from '../../ol/geom/flat/transform.js';\nimport {translate as _ol_geom_flat_transform$translate} from '../../ol/geom/flat/transform.js';\nimport $ol$format$Feature from '../../ol/format/Feature.js';\nimport {transformGeometryWithOptions as _ol_format_Feature$transformGeometryWithOptions} from '../../ol/format/Feature.js';\nimport {transformExtentWithOptions as _ol_format_Feature$transformExtentWithOptions} from '../../ol/format/Feature.js';\nimport {createRenderFeature as _ol_format_Feature$createRenderFeature} from '../../ol/format/Feature.js';\nimport {createGeometry as _ol_format_Feature$createGeometry} from '../../ol/format/Feature.js';\nimport $ol$format$GPX from '../../ol/format/GPX.js';\nimport $ol$format$GeoJSON from '../../ol/format/GeoJSON.js';\nimport $ol$format$IGC from '../../ol/format/IGC.js';\nimport $ol$format$JSONFeature from '../../ol/format/JSONFeature.js';\nimport {getDefaultFillStyle as _ol_format_KML$getDefaultFillStyle} from '../../ol/format/KML.js';\nimport {getDefaultImageStyle as _ol_format_KML$getDefaultImageStyle} from '../../ol/format/KML.js';\nimport {getDefaultStrokeStyle as _ol_format_KML$getDefaultStrokeStyle} from '../../ol/format/KML.js';\nimport {getDefaultTextStyle as _ol_format_KML$getDefaultTextStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyle as _ol_format_KML$getDefaultStyle} from '../../ol/format/KML.js';\nimport {getDefaultStyleArray as _ol_format_KML$getDefaultStyleArray} from '../../ol/format/KML.js';\nimport $ol$format$KML from '../../ol/format/KML.js';\nimport {readFlatCoordinates as _ol_format_KML$readFlatCoordinates} from '../../ol/format/KML.js';\nimport $ol$format$MVT from '../../ol/format/MVT.js';\nimport $ol$format$OSMXML from '../../ol/format/OSMXML.js';\nimport $ol$format$OWS from '../../ol/format/OWS.js';\nimport $ol$format$Polyline from '../../ol/format/Polyline.js';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from '../../ol/format/Polyline.js';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from '../../ol/format/Polyline.js';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from '../../ol/format/Polyline.js';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from '../../ol/format/Polyline.js';\nimport {encodeSignedIntegers as _ol_format_Polyline$encodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeSignedIntegers as _ol_format_Polyline$decodeSignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedIntegers as _ol_format_Polyline$encodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {decodeUnsignedIntegers as _ol_format_Polyline$decodeUnsignedIntegers} from '../../ol/format/Polyline.js';\nimport {encodeUnsignedInteger as _ol_format_Polyline$encodeUnsignedInteger} from '../../ol/format/Polyline.js';\nimport $ol$format$TextFeature from '../../ol/format/TextFeature.js';\nimport $ol$format$TopoJSON from '../../ol/format/TopoJSON.js';\nimport $ol$format$WFS from '../../ol/format/WFS.js';\nimport {writeFilter as _ol_format_WFS$writeFilter} from '../../ol/format/WFS.js';\nimport $ol$format$WMSGetFeatureInfo from '../../ol/format/WMSGetFeatureInfo.js';\nimport $ol$format$WMTSCapabilities from '../../ol/format/WMTSCapabilities.js';\nimport {readHref as _ol_format_xlink$readHref} from '../../ol/format/xlink.js';\nimport {readBoolean as _ol_format_xsd$readBoolean} from '../../ol/format/xsd.js';\nimport {readBooleanString as _ol_format_xsd$readBooleanString} from '../../ol/format/xsd.js';\nimport {readDateTime as _ol_format_xsd$readDateTime} from '../../ol/format/xsd.js';\nimport {readDecimal as _ol_format_xsd$readDecimal} from '../../ol/format/xsd.js';\nimport {readDecimalString as _ol_format_xsd$readDecimalString} from '../../ol/format/xsd.js';\nimport {readPositiveInteger as _ol_format_xsd$readPositiveInteger} from '../../ol/format/xsd.js';\nimport {readNonNegativeIntegerString as _ol_format_xsd$readNonNegativeIntegerString} from '../../ol/format/xsd.js';\nimport {readString as _ol_format_xsd$readString} from '../../ol/format/xsd.js';\nimport {writeBooleanTextNode as _ol_format_xsd$writeBooleanTextNode} from '../../ol/format/xsd.js';\nimport {writeCDATASection as _ol_format_xsd$writeCDATASection} from '../../ol/format/xsd.js';\nimport {writeDateTimeTextNode as _ol_format_xsd$writeDateTimeTextNode} from '../../ol/format/xsd.js';\nimport {writeDecimalTextNode as _ol_format_xsd$writeDecimalTextNode} from '../../ol/format/xsd.js';\nimport {writeNonNegativeIntegerTextNode as _ol_format_xsd$writeNonNegativeIntegerTextNode} from '../../ol/format/xsd.js';\nimport {writeStringTextNode as _ol_format_xsd$writeStringTextNode} from '../../ol/format/xsd.js';\nimport {newEvaluationContext as _ol_expr_cpu$newEvaluationContext} from '../../ol/expr/cpu.js';\nimport {buildExpression as _ol_expr_cpu$buildExpression} from '../../ol/expr/cpu.js';\nimport {NoneType as _ol_expr_expression$NoneType} from '../../ol/expr/expression.js';\nimport {BooleanType as _ol_expr_expression$BooleanType} from '../../ol/expr/expression.js';\nimport {NumberType as _ol_expr_expression$NumberType} from '../../ol/expr/expression.js';\nimport {StringType as _ol_expr_expression$StringType} from '../../ol/expr/expression.js';\nimport {ColorType as _ol_expr_expression$ColorType} from '../../ol/expr/expression.js';\nimport {NumberArrayType as _ol_expr_expression$NumberArrayType} from '../../ol/expr/expression.js';\nimport {AnyType as _ol_expr_expression$AnyType} from '../../ol/expr/expression.js';\nimport {typeName as _ol_expr_expression$typeName} from '../../ol/expr/expression.js';\nimport {includesType as _ol_expr_expression$includesType} from '../../ol/expr/expression.js';\nimport {overlapsType as _ol_expr_expression$overlapsType} from '../../ol/expr/expression.js';\nimport {isType as _ol_expr_expression$isType} from '../../ol/expr/expression.js';\nimport {LiteralExpression as _ol_expr_expression$LiteralExpression} from '../../ol/expr/expression.js';\nimport {CallExpression as _ol_expr_expression$CallExpression} from '../../ol/expr/expression.js';\nimport {newParsingContext as _ol_expr_expression$newParsingContext} from '../../ol/expr/expression.js';\nimport {parse as _ol_expr_expression$parse} from '../../ol/expr/expression.js';\nimport {Ops as _ol_expr_expression$Ops} from '../../ol/expr/expression.js';\nimport {computeGeometryType as _ol_expr_expression$computeGeometryType} from '../../ol/expr/expression.js';\nimport {numberToGlsl as _ol_expr_gpu$numberToGlsl} from '../../ol/expr/gpu.js';\nimport {arrayToGlsl as _ol_expr_gpu$arrayToGlsl} from '../../ol/expr/gpu.js';\nimport {colorToGlsl as _ol_expr_gpu$colorToGlsl} from '../../ol/expr/gpu.js';\nimport {getStringNumberEquivalent as _ol_expr_gpu$getStringNumberEquivalent} from '../../ol/expr/gpu.js';\nimport {stringToGlsl as _ol_expr_gpu$stringToGlsl} from '../../ol/expr/gpu.js';\nimport {uniformNameForVariable as _ol_expr_gpu$uniformNameForVariable} from '../../ol/expr/gpu.js';\nimport {newCompilationContext as _ol_expr_gpu$newCompilationContext} from '../../ol/expr/gpu.js';\nimport {PALETTE_TEXTURE_ARRAY as _ol_expr_gpu$PALETTE_TEXTURE_ARRAY} from '../../ol/expr/gpu.js';\nimport {buildExpression as _ol_expr_gpu$buildExpression} from '../../ol/expr/gpu.js';\nimport $ol$events$Event from '../../ol/events/Event.js';\nimport {stopPropagation as _ol_events_Event$stopPropagation} from '../../ol/events/Event.js';\nimport {preventDefault as _ol_events_Event$preventDefault} from '../../ol/events/Event.js';\nimport {SnapEvent as _ol_events_SnapEvent$SnapEvent} from '../../ol/events/SnapEvent.js';\nimport $ol$events$Target from '../../ol/events/Target.js';\nimport {all as _ol_events_condition$all} from '../../ol/events/condition.js';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from '../../ol/events/condition.js';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from '../../ol/events/condition.js';\nimport {focus as _ol_events_condition$focus} from '../../ol/events/condition.js';\nimport {focusWithTabindex as _ol_events_condition$focusWithTabindex} from '../../ol/events/condition.js';\nimport {always as _ol_events_condition$always} from '../../ol/events/condition.js';\nimport {click as _ol_events_condition$click} from '../../ol/events/condition.js';\nimport {mouseActionButton as _ol_events_condition$mouseActionButton} from '../../ol/events/condition.js';\nimport {never as _ol_events_condition$never} from '../../ol/events/condition.js';\nimport {pointerMove as _ol_events_condition$pointerMove} from '../../ol/events/condition.js';\nimport {singleClick as _ol_events_condition$singleClick} from '../../ol/events/condition.js';\nimport {doubleClick as _ol_events_condition$doubleClick} from '../../ol/events/condition.js';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from '../../ol/events/condition.js';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from '../../ol/events/condition.js';\nimport {platformModifierKey as _ol_events_condition$platformModifierKey} from '../../ol/events/condition.js';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from '../../ol/events/condition.js';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from '../../ol/events/condition.js';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from '../../ol/events/condition.js';\nimport {touchOnly as _ol_events_condition$touchOnly} from '../../ol/events/condition.js';\nimport {penOnly as _ol_events_condition$penOnly} from '../../ol/events/condition.js';\nimport {primaryAction as _ol_events_condition$primaryAction} from '../../ol/events/condition.js';\nimport $ol$control$Attribution from '../../ol/control/Attribution.js';\nimport $ol$control$Control from '../../ol/control/Control.js';\nimport $ol$control$FullScreen from '../../ol/control/FullScreen.js';\nimport $ol$control$MousePosition from '../../ol/control/MousePosition.js';\nimport $ol$control$OverviewMap from '../../ol/control/OverviewMap.js';\nimport $ol$control$Rotate from '../../ol/control/Rotate.js';\nimport $ol$control$ScaleLine from '../../ol/control/ScaleLine.js';\nimport $ol$control$Zoom from '../../ol/control/Zoom.js';\nimport $ol$control$ZoomSlider from '../../ol/control/ZoomSlider.js';\nimport $ol$control$ZoomToExtent from '../../ol/control/ZoomToExtent.js';\nimport {defaults as _ol_control_defaults$defaults} from '../../ol/control/defaults.js';\n\nvar ol = {};\nol.Collection = $ol$Collection;\nol.Collection.CollectionEvent = _ol_Collection$CollectionEvent;\nol.DataTile = $ol$DataTile;\nol.DataTile.asArrayLike = _ol_DataTile$asArrayLike;\nol.DataTile.asImageLike = _ol_DataTile$asImageLike;\nol.DataTile.toArray = _ol_DataTile$toArray;\nol.Disposable = $ol$Disposable;\nol.Feature = $ol$Feature;\nol.Feature.createStyleFunction = _ol_Feature$createStyleFunction;\nol.Geolocation = $ol$Geolocation;\nol.Geolocation.GeolocationError = _ol_Geolocation$GeolocationError;\nol.Image = $ol$Image;\nol.Image.decode = _ol_Image$decode;\nol.Image.decodeFallback = _ol_Image$decodeFallback;\nol.Image.listenImage = _ol_Image$listenImage;\nol.Image.load = _ol_Image$load;\nol.ImageCanvas = $ol$ImageCanvas;\nol.ImageTile = $ol$ImageTile;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.MapBrowserEvent = $ol$MapBrowserEvent;\nol.MapBrowserEventHandler = $ol$MapBrowserEventHandler;\nol.MapEvent = $ol$MapEvent;\nol.Object = $ol$Object;\nol.Object.ObjectEvent = _ol_Object$ObjectEvent;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.Tile = $ol$Tile;\nol.TileCache = $ol$TileCache;\nol.TileQueue = $ol$TileQueue;\nol.TileQueue.getTilePriority = _ol_TileQueue$getTilePriority;\nol.TileRange = $ol$TileRange;\nol.TileRange.createOrUpdate = _ol_TileRange$createOrUpdate;\nol.VectorRenderTile = $ol$VectorRenderTile;\nol.View = $ol$View;\nol.View.createCenterConstraint = _ol_View$createCenterConstraint;\nol.View.createResolutionConstraint = _ol_View$createResolutionConstraint;\nol.View.createRotationConstraint = _ol_View$createRotationConstraint;\nol.View.isNoopAnimation = _ol_View$isNoopAnimation;\nol.array = {};\nol.array.ascending = _ol_array$ascending;\nol.array.binarySearch = _ol_array$binarySearch;\nol.array.descending = _ol_array$descending;\nol.array.equals = _ol_array$equals;\nol.array.extend = _ol_array$extend;\nol.array.isSorted = _ol_array$isSorted;\nol.array.linearFindNearest = _ol_array$linearFindNearest;\nol.array.remove = _ol_array$remove;\nol.array.reverseSubArray = _ol_array$reverseSubArray;\nol.array.stableSort = _ol_array$stableSort;\nol.asserts = {};\nol.asserts.assert = _ol_asserts$assert;\nol.centerconstraint = {};\nol.centerconstraint.createExtent = _ol_centerconstraint$createExtent;\nol.centerconstraint.none = _ol_centerconstraint$none;\nol.color = {};\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.color.fromString = _ol_color$fromString;\nol.color.isStringColor = _ol_color$isStringColor;\nol.color.lchaToRgba = _ol_color$lchaToRgba;\nol.color.normalize = _ol_color$normalize;\nol.color.rgbaToLcha = _ol_color$rgbaToLcha;\nol.color.toString = _ol_color$toString;\nol.color.withAlpha = _ol_color$withAlpha;\nol.colorlike = {};\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.console = {};\nol.console.error = _ol_console$error;\nol.console.log = _ol_console$log;\nol.console.setLevel = _ol_console$setLevel;\nol.console.warn = _ol_console$warn;\nol.control = {};\nol.control.Attribution = $ol$control$Attribution;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.Rotate = $ol$control$Rotate;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = {};\nol.control.defaults.defaults = _ol_control_defaults$defaults;\nol.coordinate = {};\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.closestOnCircle = _ol_coordinate$closestOnCircle;\nol.coordinate.closestOnSegment = _ol_coordinate$closestOnSegment;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.degreesToStringHDMS = _ol_coordinate$degreesToStringHDMS;\nol.coordinate.distance = _ol_coordinate$distance;\nol.coordinate.equals = _ol_coordinate$equals;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.getWorldsAway = _ol_coordinate$getWorldsAway;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.scale = _ol_coordinate$scale;\nol.coordinate.squaredDistance = _ol_coordinate$squaredDistance;\nol.coordinate.squaredDistanceToSegment = _ol_coordinate$squaredDistanceToSegment;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.coordinate.wrapX = _ol_coordinate$wrapX;\nol.css = {};\nol.css.CLASS_COLLAPSED = _ol_css$CLASS_COLLAPSED;\nol.css.CLASS_CONTROL = _ol_css$CLASS_CONTROL;\nol.css.CLASS_HIDDEN = _ol_css$CLASS_HIDDEN;\nol.css.CLASS_SELECTABLE = _ol_css$CLASS_SELECTABLE;\nol.css.CLASS_UNSELECTABLE = _ol_css$CLASS_UNSELECTABLE;\nol.css.CLASS_UNSUPPORTED = _ol_css$CLASS_UNSUPPORTED;\nol.css.getFontParameters = _ol_css$getFontParameters;\nol.dom = {};\nol.dom.createCanvasContext2D = _ol_dom$createCanvasContext2D;\nol.dom.getSharedCanvasContext2D = _ol_dom$getSharedCanvasContext2D;\nol.dom.outerHeight = _ol_dom$outerHeight;\nol.dom.outerWidth = _ol_dom$outerWidth;\nol.dom.releaseCanvas = _ol_dom$releaseCanvas;\nol.dom.removeChildren = _ol_dom$removeChildren;\nol.dom.removeNode = _ol_dom$removeNode;\nol.dom.replaceChildren = _ol_dom$replaceChildren;\nol.dom.replaceNode = _ol_dom$replaceNode;\nol.easing = {};\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events = {};\nol.events.Event = $ol$events$Event;\nol.events.Event.preventDefault = _ol_events_Event$preventDefault;\nol.events.Event.stopPropagation = _ol_events_Event$stopPropagation;\nol.events.SnapEvent = {};\nol.events.SnapEvent.SnapEvent = _ol_events_SnapEvent$SnapEvent;\nol.events.Target = $ol$events$Target;\nol.events.condition = {};\nol.events.condition.all = _ol_events_condition$all;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.focusWithTabindex = _ol_events_condition$focusWithTabindex;\nol.events.condition.mouseActionButton = _ol_events_condition$mouseActionButton;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKey = _ol_events_condition$platformModifierKey;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.events.listen = _ol_events$listen;\nol.events.listenOnce = _ol_events$listenOnce;\nol.events.unlistenByKey = _ol_events$unlistenByKey;\nol.expr = {};\nol.expr.cpu = {};\nol.expr.cpu.buildExpression = _ol_expr_cpu$buildExpression;\nol.expr.cpu.newEvaluationContext = _ol_expr_cpu$newEvaluationContext;\nol.expr.expression = {};\nol.expr.expression.AnyType = _ol_expr_expression$AnyType;\nol.expr.expression.BooleanType = _ol_expr_expression$BooleanType;\nol.expr.expression.CallExpression = _ol_expr_expression$CallExpression;\nol.expr.expression.ColorType = _ol_expr_expression$ColorType;\nol.expr.expression.LiteralExpression = _ol_expr_expression$LiteralExpression;\nol.expr.expression.NoneType = _ol_expr_expression$NoneType;\nol.expr.expression.NumberArrayType = _ol_expr_expression$NumberArrayType;\nol.expr.expression.NumberType = _ol_expr_expression$NumberType;\nol.expr.expression.Ops = _ol_expr_expression$Ops;\nol.expr.expression.StringType = _ol_expr_expression$StringType;\nol.expr.expression.computeGeometryType = _ol_expr_expression$computeGeometryType;\nol.expr.expression.includesType = _ol_expr_expression$includesType;\nol.expr.expression.isType = _ol_expr_expression$isType;\nol.expr.expression.newParsingContext = _ol_expr_expression$newParsingContext;\nol.expr.expression.overlapsType = _ol_expr_expression$overlapsType;\nol.expr.expression.parse = _ol_expr_expression$parse;\nol.expr.expression.typeName = _ol_expr_expression$typeName;\nol.expr.gpu = {};\nol.expr.gpu.PALETTE_TEXTURE_ARRAY = _ol_expr_gpu$PALETTE_TEXTURE_ARRAY;\nol.expr.gpu.arrayToGlsl = _ol_expr_gpu$arrayToGlsl;\nol.expr.gpu.buildExpression = _ol_expr_gpu$buildExpression;\nol.expr.gpu.colorToGlsl = _ol_expr_gpu$colorToGlsl;\nol.expr.gpu.getStringNumberEquivalent = _ol_expr_gpu$getStringNumberEquivalent;\nol.expr.gpu.newCompilationContext = _ol_expr_gpu$newCompilationContext;\nol.expr.gpu.numberToGlsl = _ol_expr_gpu$numberToGlsl;\nol.expr.gpu.stringToGlsl = _ol_expr_gpu$stringToGlsl;\nol.expr.gpu.uniformNameForVariable = _ol_expr_gpu$uniformNameForVariable;\nol.extent = {};\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.approximatelyEquals = _ol_extent$approximatelyEquals;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.clone = _ol_extent$clone;\nol.extent.closestSquaredDistanceXY = _ol_extent$closestSquaredDistanceXY;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.coordinateRelationship = _ol_extent$coordinateRelationship;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.createOrUpdate = _ol_extent$createOrUpdate;\nol.extent.createOrUpdateEmpty = _ol_extent$createOrUpdateEmpty;\nol.extent.createOrUpdateFromCoordinate = _ol_extent$createOrUpdateFromCoordinate;\nol.extent.createOrUpdateFromCoordinates = _ol_extent$createOrUpdateFromCoordinates;\nol.extent.createOrUpdateFromFlatCoordinates = _ol_extent$createOrUpdateFromFlatCoordinates;\nol.extent.createOrUpdateFromRings = _ol_extent$createOrUpdateFromRings;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.extendCoordinate = _ol_extent$extendCoordinate;\nol.extent.extendCoordinates = _ol_extent$extendCoordinates;\nol.extent.extendFlatCoordinates = _ol_extent$extendFlatCoordinates;\nol.extent.extendRings = _ol_extent$extendRings;\nol.extent.extendXY = _ol_extent$extendXY;\nol.extent.forEachCorner = _ol_extent$forEachCorner;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getCorner = _ol_extent$getCorner;\nol.extent.getEnlargedArea = _ol_extent$getEnlargedArea;\nol.extent.getForViewAndSize = _ol_extent$getForViewAndSize;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getIntersectionArea = _ol_extent$getIntersectionArea;\nol.extent.getMargin = _ol_extent$getMargin;\nol.extent.getRotatedViewport = _ol_extent$getRotatedViewport;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.intersectsSegment = _ol_extent$intersectsSegment;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.extent.returnOrUpdate = _ol_extent$returnOrUpdate;\nol.extent.scaleFromCenter = _ol_extent$scaleFromCenter;\nol.extent.wrapAndSliceX = _ol_extent$wrapAndSliceX;\nol.extent.wrapX = _ol_extent$wrapX;\nol.featureloader = {};\nol.featureloader.loadFeaturesXhr = _ol_featureloader$loadFeaturesXhr;\nol.featureloader.setWithCredentials = _ol_featureloader$setWithCredentials;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format = {};\nol.format.Feature = $ol$format$Feature;\nol.format.Feature.createGeometry = _ol_format_Feature$createGeometry;\nol.format.Feature.createRenderFeature = _ol_format_Feature$createRenderFeature;\nol.format.Feature.transformExtentWithOptions = _ol_format_Feature$transformExtentWithOptions;\nol.format.Feature.transformGeometryWithOptions = _ol_format_Feature$transformGeometryWithOptions;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.JSONFeature = $ol$format$JSONFeature;\nol.format.KML = $ol$format$KML;\nol.format.KML.getDefaultFillStyle = _ol_format_KML$getDefaultFillStyle;\nol.format.KML.getDefaultImageStyle = _ol_format_KML$getDefaultImageStyle;\nol.format.KML.getDefaultStrokeStyle = _ol_format_KML$getDefaultStrokeStyle;\nol.format.KML.getDefaultStyle = _ol_format_KML$getDefaultStyle;\nol.format.KML.getDefaultStyleArray = _ol_format_KML$getDefaultStyleArray;\nol.format.KML.getDefaultTextStyle = _ol_format_KML$getDefaultTextStyle;\nol.format.KML.readFlatCoordinates = _ol_format_KML$readFlatCoordinates;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.OWS = $ol$format$OWS;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.decodeSignedIntegers = _ol_format_Polyline$decodeSignedIntegers;\nol.format.Polyline.decodeUnsignedIntegers = _ol_format_Polyline$decodeUnsignedIntegers;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.Polyline.encodeSignedIntegers = _ol_format_Polyline$encodeSignedIntegers;\nol.format.Polyline.encodeUnsignedInteger = _ol_format_Polyline$encodeUnsignedInteger;\nol.format.Polyline.encodeUnsignedIntegers = _ol_format_Polyline$encodeUnsignedIntegers;\nol.format.TextFeature = $ol$format$TextFeature;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.xlink = {};\nol.format.xlink.readHref = _ol_format_xlink$readHref;\nol.format.xsd = {};\nol.format.xsd.readBoolean = _ol_format_xsd$readBoolean;\nol.format.xsd.readBooleanString = _ol_format_xsd$readBooleanString;\nol.format.xsd.readDateTime = _ol_format_xsd$readDateTime;\nol.format.xsd.readDecimal = _ol_format_xsd$readDecimal;\nol.format.xsd.readDecimalString = _ol_format_xsd$readDecimalString;\nol.format.xsd.readNonNegativeIntegerString = _ol_format_xsd$readNonNegativeIntegerString;\nol.format.xsd.readPositiveInteger = _ol_format_xsd$readPositiveInteger;\nol.format.xsd.readString = _ol_format_xsd$readString;\nol.format.xsd.writeBooleanTextNode = _ol_format_xsd$writeBooleanTextNode;\nol.format.xsd.writeCDATASection = _ol_format_xsd$writeCDATASection;\nol.format.xsd.writeDateTimeTextNode = _ol_format_xsd$writeDateTimeTextNode;\nol.format.xsd.writeDecimalTextNode = _ol_format_xsd$writeDecimalTextNode;\nol.format.xsd.writeNonNegativeIntegerTextNode = _ol_format_xsd$writeNonNegativeIntegerTextNode;\nol.format.xsd.writeStringTextNode = _ol_format_xsd$writeStringTextNode;\nol.functions = {};\nol.functions.FALSE = _ol_functions$FALSE;\nol.functions.TRUE = _ol_functions$TRUE;\nol.functions.VOID = _ol_functions$VOID;\nol.functions.memoizeOne = _ol_functions$memoizeOne;\nol.functions.toPromise = _ol_functions$toPromise;\nol.geom = {};\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.Polygon.makeRegular = _ol_geom_Polygon$makeRegular;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.geom.SimpleGeometry.getLayoutForStride = _ol_geom_SimpleGeometry$getLayoutForStride;\nol.geom.SimpleGeometry.getStrideForLayout = _ol_geom_SimpleGeometry$getStrideForLayout;\nol.geom.SimpleGeometry.transformGeom2D = _ol_geom_SimpleGeometry$transformGeom2D;\nol.geom.flat = {};\nol.geom.flat.area = {};\nol.geom.flat.area.linearRing = _ol_geom_flat_area$linearRing;\nol.geom.flat.area.linearRings = _ol_geom_flat_area$linearRings;\nol.geom.flat.area.linearRingss = _ol_geom_flat_area$linearRingss;\nol.geom.flat.center = {};\nol.geom.flat.center.linearRingss = _ol_geom_flat_center$linearRingss;\nol.geom.flat.closest = {};\nol.geom.flat.closest.arrayMaxSquaredDelta = _ol_geom_flat_closest$arrayMaxSquaredDelta;\nol.geom.flat.closest.assignClosestArrayPoint = _ol_geom_flat_closest$assignClosestArrayPoint;\nol.geom.flat.closest.assignClosestMultiArrayPoint = _ol_geom_flat_closest$assignClosestMultiArrayPoint;\nol.geom.flat.closest.assignClosestPoint = _ol_geom_flat_closest$assignClosestPoint;\nol.geom.flat.closest.maxSquaredDelta = _ol_geom_flat_closest$maxSquaredDelta;\nol.geom.flat.closest.multiArrayMaxSquaredDelta = _ol_geom_flat_closest$multiArrayMaxSquaredDelta;\nol.geom.flat.contains = {};\nol.geom.flat.contains.linearRingContainsExtent = _ol_geom_flat_contains$linearRingContainsExtent;\nol.geom.flat.contains.linearRingContainsXY = _ol_geom_flat_contains$linearRingContainsXY;\nol.geom.flat.contains.linearRingsContainsXY = _ol_geom_flat_contains$linearRingsContainsXY;\nol.geom.flat.contains.linearRingssContainsXY = _ol_geom_flat_contains$linearRingssContainsXY;\nol.geom.flat.deflate = {};\nol.geom.flat.deflate.deflateCoordinate = _ol_geom_flat_deflate$deflateCoordinate;\nol.geom.flat.deflate.deflateCoordinates = _ol_geom_flat_deflate$deflateCoordinates;\nol.geom.flat.deflate.deflateCoordinatesArray = _ol_geom_flat_deflate$deflateCoordinatesArray;\nol.geom.flat.deflate.deflateMultiCoordinatesArray = _ol_geom_flat_deflate$deflateMultiCoordinatesArray;\nol.geom.flat.flip = {};\nol.geom.flat.flip.flipXY = _ol_geom_flat_flip$flipXY;\nol.geom.flat.geodesic = {};\nol.geom.flat.geodesic.greatCircleArc = _ol_geom_flat_geodesic$greatCircleArc;\nol.geom.flat.geodesic.meridian = _ol_geom_flat_geodesic$meridian;\nol.geom.flat.geodesic.parallel = _ol_geom_flat_geodesic$parallel;\nol.geom.flat.inflate = {};\nol.geom.flat.inflate.inflateCoordinates = _ol_geom_flat_inflate$inflateCoordinates;\nol.geom.flat.inflate.inflateCoordinatesArray = _ol_geom_flat_inflate$inflateCoordinatesArray;\nol.geom.flat.inflate.inflateMultiCoordinatesArray = _ol_geom_flat_inflate$inflateMultiCoordinatesArray;\nol.geom.flat.interiorpoint = {};\nol.geom.flat.interiorpoint.getInteriorPointOfArray = _ol_geom_flat_interiorpoint$getInteriorPointOfArray;\nol.geom.flat.interiorpoint.getInteriorPointsOfMultiArray = _ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray;\nol.geom.flat.interpolate = {};\nol.geom.flat.interpolate.interpolatePoint = _ol_geom_flat_interpolate$interpolatePoint;\nol.geom.flat.interpolate.lineStringCoordinateAtM = _ol_geom_flat_interpolate$lineStringCoordinateAtM;\nol.geom.flat.interpolate.lineStringsCoordinateAtM = _ol_geom_flat_interpolate$lineStringsCoordinateAtM;\nol.geom.flat.intersectsextent = {};\nol.geom.flat.intersectsextent.intersectsLineString = _ol_geom_flat_intersectsextent$intersectsLineString;\nol.geom.flat.intersectsextent.intersectsLineStringArray = _ol_geom_flat_intersectsextent$intersectsLineStringArray;\nol.geom.flat.intersectsextent.intersectsLinearRing = _ol_geom_flat_intersectsextent$intersectsLinearRing;\nol.geom.flat.intersectsextent.intersectsLinearRingArray = _ol_geom_flat_intersectsextent$intersectsLinearRingArray;\nol.geom.flat.intersectsextent.intersectsLinearRingMultiArray = _ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray;\nol.geom.flat.length = {};\nol.geom.flat.length.lineStringLength = _ol_geom_flat_length$lineStringLength;\nol.geom.flat.length.linearRingLength = _ol_geom_flat_length$linearRingLength;\nol.geom.flat.orient = {};\nol.geom.flat.orient.inflateEnds = _ol_geom_flat_orient$inflateEnds;\nol.geom.flat.orient.linearRingIsClockwise = _ol_geom_flat_orient$linearRingIsClockwise;\nol.geom.flat.orient.linearRingsAreOriented = _ol_geom_flat_orient$linearRingsAreOriented;\nol.geom.flat.orient.linearRingssAreOriented = _ol_geom_flat_orient$linearRingssAreOriented;\nol.geom.flat.orient.orientLinearRings = _ol_geom_flat_orient$orientLinearRings;\nol.geom.flat.orient.orientLinearRingsArray = _ol_geom_flat_orient$orientLinearRingsArray;\nol.geom.flat.reverse = {};\nol.geom.flat.reverse.coordinates = _ol_geom_flat_reverse$coordinates;\nol.geom.flat.segments = {};\nol.geom.flat.segments.forEach = _ol_geom_flat_segments$forEach;\nol.geom.flat.simplify = {};\nol.geom.flat.simplify.douglasPeucker = _ol_geom_flat_simplify$douglasPeucker;\nol.geom.flat.simplify.douglasPeuckerArray = _ol_geom_flat_simplify$douglasPeuckerArray;\nol.geom.flat.simplify.douglasPeuckerMultiArray = _ol_geom_flat_simplify$douglasPeuckerMultiArray;\nol.geom.flat.simplify.quantize = _ol_geom_flat_simplify$quantize;\nol.geom.flat.simplify.quantizeArray = _ol_geom_flat_simplify$quantizeArray;\nol.geom.flat.simplify.quantizeMultiArray = _ol_geom_flat_simplify$quantizeMultiArray;\nol.geom.flat.simplify.radialDistance = _ol_geom_flat_simplify$radialDistance;\nol.geom.flat.simplify.simplifyLineString = _ol_geom_flat_simplify$simplifyLineString;\nol.geom.flat.simplify.snap = _ol_geom_flat_simplify$snap;\nol.geom.flat.straightchunk = {};\nol.geom.flat.straightchunk.matchingChunk = _ol_geom_flat_straightchunk$matchingChunk;\nol.geom.flat.textpath = {};\nol.geom.flat.textpath.drawTextOnPath = _ol_geom_flat_textpath$drawTextOnPath;\nol.geom.flat.topology = {};\nol.geom.flat.topology.lineStringIsClosed = _ol_geom_flat_topology$lineStringIsClosed;\nol.geom.flat.transform = {};\nol.geom.flat.transform.rotate = _ol_geom_flat_transform$rotate;\nol.geom.flat.transform.scale = _ol_geom_flat_transform$scale;\nol.geom.flat.transform.transform2D = _ol_geom_flat_transform$transform2D;\nol.geom.flat.transform.translate = _ol_geom_flat_transform$translate;\nol.has = {};\nol.has.CREATE_IMAGE_BITMAP = _ol_has$CREATE_IMAGE_BITMAP;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.FIREFOX = _ol_has$FIREFOX;\nol.has.IMAGE_DECODE = _ol_has$IMAGE_DECODE;\nol.has.MAC = _ol_has$MAC;\nol.has.PASSIVE_EVENT_LISTENERS = _ol_has$PASSIVE_EVENT_LISTENERS;\nol.has.SAFARI = _ol_has$SAFARI;\nol.has.SAFARI_BUG_237906 = _ol_has$SAFARI_BUG_237906;\nol.has.WEBKIT = _ol_has$WEBKIT;\nol.has.WORKER_OFFSCREEN_CANVAS = _ol_has$WORKER_OFFSCREEN_CANVAS;\nol.interaction = {};\nol.interaction.DblClickDragZoom = $ol$interaction$DblClickDragZoom;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragAndDrop.DragAndDropEvent = _ol_interaction_DragAndDrop$DragAndDropEvent;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragBox.DragBoxEvent = _ol_interaction_DragBox$DragBoxEvent;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.DrawEvent = _ol_interaction_Draw$DrawEvent;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Extent.ExtentEvent = _ol_interaction_Extent$ExtentEvent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.Interaction.pan = _ol_interaction_Interaction$pan;\nol.interaction.Interaction.zoomByDelta = _ol_interaction_Interaction$zoomByDelta;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Link = $ol$interaction$Link;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.Modify.ModifyEvent = _ol_interaction_Modify$ModifyEvent;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Pointer.centroid = _ol_interaction_Pointer$centroid;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Select.SelectEvent = _ol_interaction_Select$SelectEvent;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.Translate.TranslateEvent = _ol_interaction_Translate$TranslateEvent;\nol.interaction.defaults = {};\nol.interaction.defaults.defaults = _ol_interaction_defaults$defaults;\nol.layer = {};\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Group.GroupEvent = _ol_layer_Group$GroupEvent;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Layer.inView = _ol_layer_Layer$inView;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.loadingstrategy = {};\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.math = {};\nol.math.ceil = _ol_math$ceil;\nol.math.clamp = _ol_math$clamp;\nol.math.floor = _ol_math$floor;\nol.math.lerp = _ol_math$lerp;\nol.math.modulo = _ol_math$modulo;\nol.math.round = _ol_math$round;\nol.math.solveLinearSystem = _ol_math$solveLinearSystem;\nol.math.squaredDistance = _ol_math$squaredDistance;\nol.math.squaredSegmentDistance = _ol_math$squaredSegmentDistance;\nol.math.toDegrees = _ol_math$toDegrees;\nol.math.toFixed = _ol_math$toFixed;\nol.math.toRadians = _ol_math$toRadians;\nol.net = {};\nol.net.ClientError = _ol_net$ClientError;\nol.net.ResponseError = _ol_net$ResponseError;\nol.net.getJSON = _ol_net$getJSON;\nol.net.jsonp = _ol_net$jsonp;\nol.net.overrideXHR = _ol_net$overrideXHR;\nol.net.resolveUrl = _ol_net$resolveUrl;\nol.net.restoreXHR = _ol_net$restoreXHR;\nol.obj = {};\nol.obj.clear = _ol_obj$clear;\nol.obj.isEmpty = _ol_obj$isEmpty;\nol.proj = {};\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units = {};\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.Units.fromCode = _ol_proj_Units$fromCode;\nol.proj.addCommon = _ol_proj$addCommon;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addEquivalentTransforms = _ol_proj$addEquivalentTransforms;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.addProjections = _ol_proj$addProjections;\nol.proj.clearAllProjections = _ol_proj$clearAllProjections;\nol.proj.clearUserProjection = _ol_proj$clearUserProjection;\nol.proj.cloneTransform = _ol_proj$cloneTransform;\nol.proj.createProjection = _ol_proj$createProjection;\nol.proj.createSafeCoordinateTransform = _ol_proj$createSafeCoordinateTransform;\nol.proj.createTransformFromCoordinateTransform = _ol_proj$createTransformFromCoordinateTransform;\nol.proj.disableCoordinateWarning = _ol_proj$disableCoordinateWarning;\nol.proj.epsg3857 = {};\nol.proj.epsg3857.EXTENT = _ol_proj_epsg3857$EXTENT;\nol.proj.epsg3857.HALF_SIZE = _ol_proj_epsg3857$HALF_SIZE;\nol.proj.epsg3857.MAX_SAFE_Y = _ol_proj_epsg3857$MAX_SAFE_Y;\nol.proj.epsg3857.PROJECTIONS = _ol_proj_epsg3857$PROJECTIONS;\nol.proj.epsg3857.RADIUS = _ol_proj_epsg3857$RADIUS;\nol.proj.epsg3857.WORLD_EXTENT = _ol_proj_epsg3857$WORLD_EXTENT;\nol.proj.epsg3857.fromEPSG4326 = _ol_proj_epsg3857$fromEPSG4326;\nol.proj.epsg3857.toEPSG4326 = _ol_proj_epsg3857$toEPSG4326;\nol.proj.epsg4326 = {};\nol.proj.epsg4326.EXTENT = _ol_proj_epsg4326$EXTENT;\nol.proj.epsg4326.METERS_PER_UNIT = _ol_proj_epsg4326$METERS_PER_UNIT;\nol.proj.epsg4326.PROJECTIONS = _ol_proj_epsg4326$PROJECTIONS;\nol.proj.epsg4326.RADIUS = _ol_proj_epsg4326$RADIUS;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.fromUserCoordinate = _ol_proj$fromUserCoordinate;\nol.proj.fromUserExtent = _ol_proj$fromUserExtent;\nol.proj.fromUserResolution = _ol_proj$fromUserResolution;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.getTransformFromProjections = _ol_proj$getTransformFromProjections;\nol.proj.getUserProjection = _ol_proj$getUserProjection;\nol.proj.identityTransform = _ol_proj$identityTransform;\nol.proj.proj4 = {};\nol.proj.proj4.epsgLookupMapTiler = _ol_proj_proj4$epsgLookupMapTiler;\nol.proj.proj4.fromEPSGCode = _ol_proj_proj4$fromEPSGCode;\nol.proj.proj4.getEPSGLookup = _ol_proj_proj4$getEPSGLookup;\nol.proj.proj4.isRegistered = _ol_proj_proj4$isRegistered;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.proj4.setEPSGLookup = _ol_proj_proj4$setEPSGLookup;\nol.proj.proj4.unregister = _ol_proj_proj4$unregister;\nol.proj.projections = {};\nol.proj.projections.add = _ol_proj_projections$add;\nol.proj.projections.clear = _ol_proj_projections$clear;\nol.proj.projections.get = _ol_proj_projections$get;\nol.proj.setUserProjection = _ol_proj$setUserProjection;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.toUserCoordinate = _ol_proj$toUserCoordinate;\nol.proj.toUserExtent = _ol_proj$toUserExtent;\nol.proj.toUserResolution = _ol_proj$toUserResolution;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.proj.transformWithProjections = _ol_proj$transformWithProjections;\nol.proj.transforms = {};\nol.proj.transforms.add = _ol_proj_transforms$add;\nol.proj.transforms.clear = _ol_proj_transforms$clear;\nol.proj.transforms.get = _ol_proj_transforms$get;\nol.proj.transforms.remove = _ol_proj_transforms$remove;\nol.proj.useGeographic = _ol_proj$useGeographic;\nol.render = {};\nol.render.Box = $ol$render$Box;\nol.render.Event = $ol$render$Event;\nol.render.Feature = $ol$render$Feature;\nol.render.Feature.toFeature = _ol_render_Feature$toFeature;\nol.render.Feature.toGeometry = _ol_render_Feature$toGeometry;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas = {};\nol.render.canvas.Builder = $ol$render$canvas$Builder;\nol.render.canvas.BuilderGroup = $ol$render$canvas$BuilderGroup;\nol.render.canvas.Executor = $ol$render$canvas$Executor;\nol.render.canvas.ExecutorGroup = $ol$render$canvas$ExecutorGroup;\nol.render.canvas.ExecutorGroup.ALL = _ol_render_canvas_ExecutorGroup$ALL;\nol.render.canvas.ExecutorGroup.DECLUTTER = _ol_render_canvas_ExecutorGroup$DECLUTTER;\nol.render.canvas.ExecutorGroup.NON_DECLUTTER = _ol_render_canvas_ExecutorGroup$NON_DECLUTTER;\nol.render.canvas.ExecutorGroup.getPixelIndexArray = _ol_render_canvas_ExecutorGroup$getPixelIndexArray;\nol.render.canvas.ImageBuilder = $ol$render$canvas$ImageBuilder;\nol.render.canvas.Immediate = $ol$render$canvas$Immediate;\nol.render.canvas.Instruction = {};\nol.render.canvas.Instruction.beginPathInstruction = _ol_render_canvas_Instruction$beginPathInstruction;\nol.render.canvas.Instruction.closePathInstruction = _ol_render_canvas_Instruction$closePathInstruction;\nol.render.canvas.Instruction.fillInstruction = _ol_render_canvas_Instruction$fillInstruction;\nol.render.canvas.Instruction.strokeInstruction = _ol_render_canvas_Instruction$strokeInstruction;\nol.render.canvas.LineStringBuilder = $ol$render$canvas$LineStringBuilder;\nol.render.canvas.PolygonBuilder = $ol$render$canvas$PolygonBuilder;\nol.render.canvas.TextBuilder = $ol$render$canvas$TextBuilder;\nol.render.canvas.TextBuilder.TEXT_ALIGN = _ol_render_canvas_TextBuilder$TEXT_ALIGN;\nol.render.canvas.ZIndexContext = $ol$render$canvas$ZIndexContext;\nol.render.canvas.checkedFonts = _ol_render_canvas$checkedFonts;\nol.render.canvas.defaultFillStyle = _ol_render_canvas$defaultFillStyle;\nol.render.canvas.defaultFont = _ol_render_canvas$defaultFont;\nol.render.canvas.defaultLineCap = _ol_render_canvas$defaultLineCap;\nol.render.canvas.defaultLineDash = _ol_render_canvas$defaultLineDash;\nol.render.canvas.defaultLineDashOffset = _ol_render_canvas$defaultLineDashOffset;\nol.render.canvas.defaultLineJoin = _ol_render_canvas$defaultLineJoin;\nol.render.canvas.defaultLineWidth = _ol_render_canvas$defaultLineWidth;\nol.render.canvas.defaultMiterLimit = _ol_render_canvas$defaultMiterLimit;\nol.render.canvas.defaultPadding = _ol_render_canvas$defaultPadding;\nol.render.canvas.defaultStrokeStyle = _ol_render_canvas$defaultStrokeStyle;\nol.render.canvas.defaultTextAlign = _ol_render_canvas$defaultTextAlign;\nol.render.canvas.defaultTextBaseline = _ol_render_canvas$defaultTextBaseline;\nol.render.canvas.drawImageOrLabel = _ol_render_canvas$drawImageOrLabel;\nol.render.canvas.getTextDimensions = _ol_render_canvas$getTextDimensions;\nol.render.canvas.hitdetect = {};\nol.render.canvas.hitdetect.HIT_DETECT_RESOLUTION = _ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION;\nol.render.canvas.hitdetect.createHitDetectionImageData = _ol_render_canvas_hitdetect$createHitDetectionImageData;\nol.render.canvas.hitdetect.hitDetect = _ol_render_canvas_hitdetect$hitDetect;\nol.render.canvas.measureAndCacheTextWidth = _ol_render_canvas$measureAndCacheTextWidth;\nol.render.canvas.measureTextHeight = _ol_render_canvas$measureTextHeight;\nol.render.canvas.measureTextWidth = _ol_render_canvas$measureTextWidth;\nol.render.canvas.registerFont = _ol_render_canvas$registerFont;\nol.render.canvas.rotateAtOffset = _ol_render_canvas$rotateAtOffset;\nol.render.canvas.style = {};\nol.render.canvas.style.buildRuleSet = _ol_render_canvas_style$buildRuleSet;\nol.render.canvas.style.buildStyle = _ol_render_canvas_style$buildStyle;\nol.render.canvas.style.flatStylesToStyleFunction = _ol_render_canvas_style$flatStylesToStyleFunction;\nol.render.canvas.style.rulesToStyleFunction = _ol_render_canvas_style$rulesToStyleFunction;\nol.render.canvas.textHeights = _ol_render_canvas$textHeights;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer = {};\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.Layer = $ol$renderer$Layer;\nol.renderer.Map = $ol$renderer$Map;\nol.renderer.canvas = {};\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Layer = $ol$renderer$canvas$Layer;\nol.renderer.canvas.Layer.canvasPool = _ol_renderer_canvas_Layer$canvasPool;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.vector = {};\nol.renderer.vector.defaultOrder = _ol_renderer_vector$defaultOrder;\nol.renderer.vector.getSquaredTolerance = _ol_renderer_vector$getSquaredTolerance;\nol.renderer.vector.getTolerance = _ol_renderer_vector$getTolerance;\nol.renderer.vector.renderFeature = _ol_renderer_vector$renderFeature;\nol.reproj = {};\nol.reproj.DataTile = $ol$reproj$DataTile;\nol.reproj.Image = $ol$reproj$Image;\nol.reproj.Tile = $ol$reproj$Tile;\nol.reproj.Triangulation = $ol$reproj$Triangulation;\nol.reproj.calculateSourceExtentResolution = _ol_reproj$calculateSourceExtentResolution;\nol.reproj.calculateSourceResolution = _ol_reproj$calculateSourceResolution;\nol.reproj.canvasPool = _ol_reproj$canvasPool;\nol.reproj.common = {};\nol.reproj.common.ERROR_THRESHOLD = _ol_reproj_common$ERROR_THRESHOLD;\nol.reproj.render = _ol_reproj$render;\nol.resolution = {};\nol.resolution.fromResolutionLike = _ol_resolution$fromResolutionLike;\nol.resolutionconstraint = {};\nol.resolutionconstraint.createMinMaxResolution = _ol_resolutionconstraint$createMinMaxResolution;\nol.resolutionconstraint.createSnapToPower = _ol_resolutionconstraint$createSnapToPower;\nol.resolutionconstraint.createSnapToResolutions = _ol_resolutionconstraint$createSnapToResolutions;\nol.rotationconstraint = {};\nol.rotationconstraint.createSnapToN = _ol_rotationconstraint$createSnapToN;\nol.rotationconstraint.createSnapToZero = _ol_rotationconstraint$createSnapToZero;\nol.rotationconstraint.disable = _ol_rotationconstraint$disable;\nol.rotationconstraint.none = _ol_rotationconstraint$none;\nol.size = {};\nol.size.buffer = _ol_size$buffer;\nol.size.hasArea = _ol_size$hasArea;\nol.size.scale = _ol_size$scale;\nol.size.toSize = _ol_size$toSize;\nol.source = {};\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.BingMaps.quadKey = _ol_source_BingMaps$quadKey;\nol.source.Cluster = $ol$source$Cluster;\nol.source.DataTile = $ol$source$DataTile;\nol.source.Google = $ol$source$Google;\nol.source.Image = $ol$source$Image;\nol.source.Image.ImageSourceEvent = _ol_source_Image$ImageSourceEvent;\nol.source.Image.defaultImageLoadFunction = _ol_source_Image$defaultImageLoadFunction;\nol.source.Image.getRequestExtent = _ol_source_Image$getRequestExtent;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OGCMapTile = $ol$source$OGCMapTile;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Raster.Processor = _ol_source_Raster$Processor;\nol.source.Raster.RasterSourceEvent = _ol_source_Raster$RasterSourceEvent;\nol.source.Raster.newImageData = _ol_source_Raster$newImageData;\nol.source.Source = $ol$source$Source;\nol.source.StadiaMaps = $ol$source$StadiaMaps;\nol.source.Tile = $ol$source$Tile;\nol.source.Tile.TileSourceEvent = _ol_source_Tile$TileSourceEvent;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.UTFGrid.CustomTile = _ol_source_UTFGrid$CustomTile;\nol.source.UrlTile = $ol$source$UrlTile;\nol.source.Vector = $ol$source$Vector;\nol.source.Vector.VectorSourceEvent = _ol_source_Vector$VectorSourceEvent;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.arcgisRest = {};\nol.source.arcgisRest.createLoader = _ol_source_arcgisRest$createLoader;\nol.source.arcgisRest.getRequestUrl = _ol_source_arcgisRest$getRequestUrl;\nol.source.common = {};\nol.source.common.DECIMALS = _ol_source_common$DECIMALS;\nol.source.common.DEFAULT_WMS_VERSION = _ol_source_common$DEFAULT_WMS_VERSION;\nol.source.ogcTileUtil = {};\nol.source.ogcTileUtil.getMapTileUrlTemplate = _ol_source_ogcTileUtil$getMapTileUrlTemplate;\nol.source.ogcTileUtil.getTileSetInfo = _ol_source_ogcTileUtil$getTileSetInfo;\nol.source.ogcTileUtil.getVectorTileUrlTemplate = _ol_source_ogcTileUtil$getVectorTileUrlTemplate;\nol.source.sourcesFromTileGrid = _ol_source$sourcesFromTileGrid;\nol.source.static = {};\nol.source.static.createLoader = _ol_source_static$createLoader;\nol.source.wms = {};\nol.source.wms.DEFAULT_VERSION = _ol_source_wms$DEFAULT_VERSION;\nol.source.wms.createLoader = _ol_source_wms$createLoader;\nol.source.wms.getFeatureInfoUrl = _ol_source_wms$getFeatureInfoUrl;\nol.source.wms.getImageSrc = _ol_source_wms$getImageSrc;\nol.source.wms.getLegendUrl = _ol_source_wms$getLegendUrl;\nol.source.wms.getRequestParams = _ol_source_wms$getRequestParams;\nol.source.wms.getRequestUrl = _ol_source_wms$getRequestUrl;\nol.sphere = {};\nol.sphere.DEFAULT_RADIUS = _ol_sphere$DEFAULT_RADIUS;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.sphere.offset = _ol_sphere$offset;\nol.string = {};\nol.string.compareVersions = _ol_string$compareVersions;\nol.string.padNumber = _ol_string$padNumber;\nol.structs = {};\nol.structs.LRUCache = $ol$structs$LRUCache;\nol.structs.LinkedList = $ol$structs$LinkedList;\nol.structs.PriorityQueue = $ol$structs$PriorityQueue;\nol.structs.PriorityQueue.DROP = _ol_structs_PriorityQueue$DROP;\nol.structs.RBush = $ol$structs$RBush;\nol.style = {};\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImage = $ol$style$IconImage;\nol.style.IconImage.get = _ol_style_IconImage$get;\nol.style.IconImageCache = $ol$style$IconImageCache;\nol.style.IconImageCache.getCacheKey = _ol_style_IconImageCache$getCacheKey;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Style.createDefaultStyle = _ol_style_Style$createDefaultStyle;\nol.style.Style.createEditingStyle = _ol_style_Style$createEditingStyle;\nol.style.Style.toFunction = _ol_style_Style$toFunction;\nol.style.Text = $ol$style$Text;\nol.style.flat = {};\nol.style.flat.createDefaultStyle = _ol_style_flat$createDefaultStyle;\nol.tilecoord = {};\nol.tilecoord.createOrUpdate = _ol_tilecoord$createOrUpdate;\nol.tilecoord.fromKey = _ol_tilecoord$fromKey;\nol.tilecoord.getCacheKeyForTileKey = _ol_tilecoord$getCacheKeyForTileKey;\nol.tilecoord.getKey = _ol_tilecoord$getKey;\nol.tilecoord.getKeyZXY = _ol_tilecoord$getKeyZXY;\nol.tilecoord.hash = _ol_tilecoord$hash;\nol.tilecoord.withinExtentAndZ = _ol_tilecoord$withinExtentAndZ;\nol.tilegrid = {};\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.common = {};\nol.tilegrid.common.DEFAULT_MAX_ZOOM = _ol_tilegrid_common$DEFAULT_MAX_ZOOM;\nol.tilegrid.common.DEFAULT_TILE_SIZE = _ol_tilegrid_common$DEFAULT_TILE_SIZE;\nol.tilegrid.createForExtent = _ol_tilegrid$createForExtent;\nol.tilegrid.createForProjection = _ol_tilegrid$createForProjection;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.tilegrid.extentFromProjection = _ol_tilegrid$extentFromProjection;\nol.tilegrid.getForProjection = _ol_tilegrid$getForProjection;\nol.tilegrid.wrapX = _ol_tilegrid$wrapX;\nol.tileurlfunction = {};\nol.tileurlfunction.createFromTemplate = _ol_tileurlfunction$createFromTemplate;\nol.tileurlfunction.createFromTemplates = _ol_tileurlfunction$createFromTemplates;\nol.tileurlfunction.createFromTileUrlFunctions = _ol_tileurlfunction$createFromTileUrlFunctions;\nol.tileurlfunction.expandUrl = _ol_tileurlfunction$expandUrl;\nol.tileurlfunction.nullTileUrlFunction = _ol_tileurlfunction$nullTileUrlFunction;\nol.transform = {};\nol.transform.apply = _ol_transform$apply;\nol.transform.compose = _ol_transform$compose;\nol.transform.composeCssTransform = _ol_transform$composeCssTransform;\nol.transform.create = _ol_transform$create;\nol.transform.determinant = _ol_transform$determinant;\nol.transform.invert = _ol_transform$invert;\nol.transform.makeInverse = _ol_transform$makeInverse;\nol.transform.makeScale = _ol_transform$makeScale;\nol.transform.multiply = _ol_transform$multiply;\nol.transform.reset = _ol_transform$reset;\nol.transform.rotate = _ol_transform$rotate;\nol.transform.scale = _ol_transform$scale;\nol.transform.set = _ol_transform$set;\nol.transform.setFromArray = _ol_transform$setFromArray;\nol.transform.toString = _ol_transform$toString;\nol.transform.translate = _ol_transform$translate;\nol.uri = {};\nol.uri.appendParams = _ol_uri$appendParams;\nol.util = {};\nol.util.VERSION = _ol_util$VERSION;\nol.util.abstract = _ol_util$abstract;\nol.util.getUid = _ol_util$getUid;\nol.vec = {};\nol.vec.mat4 = {};\nol.vec.mat4.create = _ol_vec_mat4$create;\nol.vec.mat4.fromTransform = _ol_vec_mat4$fromTransform;\nol.xml = {};\nol.xml.OBJECT_PROPERTY_NODE_FACTORY = _ol_xml$OBJECT_PROPERTY_NODE_FACTORY;\nol.xml.XML_SCHEMA_INSTANCE_URI = _ol_xml$XML_SCHEMA_INSTANCE_URI;\nol.xml.createElementNS = _ol_xml$createElementNS;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.getAllTextContent_ = _ol_xml$getAllTextContent_;\nol.xml.getAttributeNS = _ol_xml$getAttributeNS;\nol.xml.getDocument = _ol_xml$getDocument;\nol.xml.getXMLSerializer = _ol_xml$getXMLSerializer;\nol.xml.isDocument = _ol_xml$isDocument;\nol.xml.makeArrayExtender = _ol_xml$makeArrayExtender;\nol.xml.makeArrayPusher = _ol_xml$makeArrayPusher;\nol.xml.makeArraySerializer = _ol_xml$makeArraySerializer;\nol.xml.makeChildAppender = _ol_xml$makeChildAppender;\nol.xml.makeObjectPropertyPusher = _ol_xml$makeObjectPropertyPusher;\nol.xml.makeObjectPropertySetter = _ol_xml$makeObjectPropertySetter;\nol.xml.makeReplacer = _ol_xml$makeReplacer;\nol.xml.makeSequence = _ol_xml$makeSequence;\nol.xml.makeSimpleNodeFactory = _ol_xml$makeSimpleNodeFactory;\nol.xml.makeStructureNS = _ol_xml$makeStructureNS;\nol.xml.parse = _ol_xml$parse;\nol.xml.parseNode = _ol_xml$parseNode;\nol.xml.pushParseAndPop = _ol_xml$pushParseAndPop;\nol.xml.pushSerializeAndPop = _ol_xml$pushSerializeAndPop;\nol.xml.registerDocument = _ol_xml$registerDocument;\nol.xml.registerXMLSerializer = _ol_xml$registerXMLSerializer;\nol.xml.serialize = _ol_xml$serialize;\n\nexport default ol;","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (\n    flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n    flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] &&\n    (end - offset) / stride > 3\n  ) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as Google} from './source/Google.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OGCMapTile} from './source/OGCMapTile.js';\nexport {default as OGCVectorTile} from './source/OGCVectorTile.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as StadiaMaps} from './source/StadiaMaps.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\nexport {createLoader as createWMSLoader} from './source/wms.js';\nexport {createLoader as createArcGISRestLoader} from './source/arcgisRest.js';\nexport {createLoader as createStaticLoader} from './source/static.js';\nexport {createLoader as createMapGuideLoader} from './source/mapguide.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n"],"names":["stopPropagation","evt","$ol$events$Event","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","$ol$Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","value","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","$ol$events$Target","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","EventType","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","un","revision_","changed","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","$ol$Observable","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","$ol$Object","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","CollectionEventType","Property","CollectionEvent","element","Collection","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","TileState","easeIn","t","Math","pow","easeOut","inAndOut","linear","$ol$Tile","tileCoord","state","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","image","willReadFrequently","drawImage","getImageData","defaultSize","$ol$DataTile","Tile","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","then","catch","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","$ol$Feature","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","matrixPrecision","toString","map","round","join","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","approximatelyEquals","tolerance","abs","extendCoordinates","extendXY","extendRings","rings","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","unitByCode","METERS_PER_UNIT","radians","PI","degrees","ft","m","$ol$proj$Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","destination","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","ceil","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","split","s2","n1","n2","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","deg","sec","hdms","charAt","format","template","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringXY","worldsAway","getWorldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","fromUserResolution","destMetersPerUnit","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","transform2D","anchor","anchorX","anchorY","tmpTransform","$ol$geom$Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getLayoutForStride","layout","getStrideForLayout","transformGeom2D","simpleGeometry","getFlatCoordinates","getStride","$ol$geom$SimpleGeometry","Geometry","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","simplifiedEndss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","$ol$geom$LinearRing","Point","$ol$geom$Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","startOrientation","prevEndIndex","orientation","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","$ol$geom$Polygon","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","GeolocationErrorType","GeolocationError","BaseEvent","message","$ol$Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","circularPolygon","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ImageState","IDLE","LOADING","LOADED","ERROR","EMPTY","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","handleLoad","unlisten","handleError","decodeFallback","complete","$ol$Image","pixelRatio","stateOrLoader","pixelRatio_","image_","getImage","getPixelRatio","getResolution","requestResolution","HTMLImageElement","finally","setImage","setResolution","$ol$ImageCanvas","ImageWrapper","canvas_","handleLoad_","$ol$ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","$ol$Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","LayerProperty","$ol$layer$Base","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","RenderEventType","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","createSnapToN","theta","createSnapToZero","animationCallback","returnValue","setTimeout","createCenterConstraint","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","createResolutionConstraint","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainResolution","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","constraint","createRotationConstraint","enableRotation","constrainRotation","rotationNone","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","$ol$View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","zoom","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","series","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","$ol$layer$Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","quickselect","left","quickselectStep","defaultCompare","s","sd","swap","RBush$1","maxEntries","_maxEntries","_minEntries","all","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","contains","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","$ol$style$Image","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","xyz$1","luv","arg","o","_u","_v","u","v","xn","yn","zn","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","cstr","space","parts","alpha","names","base","exec","dims","trim","parseFloat","endsWith","match","parse","asString","MAX_CACHE_SIZE","cacheSize","withAlpha","rgbaToLcha","lchaToRgba","fromString","parseRgba","normalize","asArray","isStringColor","_","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getCacheKey","getPattern","pattern","createPattern","setSize","maxCacheSize","$ol$style$IconImageCache","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","color_","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","globalCompositeOperation","onChange","cacheKey","iconImageCache","$ol$style$IconImage","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","asCanvasPattern","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$ol$style$RegularShape","CircleStyle","setRadius","$ol$style$Circle","Fill","patternImage_","setColor","patternImage","$ol$style$Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$ol$style$Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","toFunction","styleFunction","defaultStyles","createDefaultStyle","createEditingStyle","concat","$ol$style$Style","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","$ol$style$Icon","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","$ol$style$Text","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","geometryType","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","initialValue","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","computeGeometryType","substring","getGeometries","newEvaluationContext","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","rgba1","rgba2","lcha1","lcha2","deltaHue","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","Circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","$ol$layer$BaseVector","Layer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","expireIconCache","$ol$renderer$Map","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$ol$render$Event","inversePixelTransform","$ol$renderer$Composite","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","RenderEvent","BaseVectorLayer","renderedLayerStates","previousElement","layerIndex","sourceState","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$ol$layer$Group","$ol$MapEvent","$ol$MapBrowserEvent","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","$ol$MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","$ol$structs$PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$ol$TileQueue","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","$ol$control$Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$ol$control$Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$ol$control$Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","$ol$control$Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","InteractionProperty","pan","zoomByDelta","$ol$interaction$Interaction","setActive","getActive","mapBrowserEvent","active","$ol$interaction$DoubleClickZoom","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","$ol$interaction$Pointer","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","mouseActionButton","never","singleClick","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","$ol$interaction$DragPan","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","scaleCoordinate","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$ol$interaction$DragRotate","lastAngle_","$ol$render$Box","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","$ol$interaction$DragBox","box_","RenderBox","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$ol$interaction$DragZoom","DragBox","out_","out","Key","$ol$interaction$KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","$ol$interaction$KeyboardZoom","$ol$interaction$MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$ol$interaction$PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$ol$interaction$PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","removeLayerMapProperty","setLayerMapProperty","$ol$Map","optionsInternal","keyboardEventTarget","layerGroup","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","$ol$Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","$ol$structs$LRUCache","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","tileRange","getFullTileRange","$ol$TileCache","LRUCache","pruneExceptNewestZ","TileRange","containsTileRange","$ol$TileRange","$ol$VectorRenderTile","urlTileCoord","getSourceTiles","context_","executorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","wrappedTileCoord","hasContext","getReplayState","dirty","renderedRenderOrder","renderedResolution","renderedRevision","renderedTileResolution","renderedTileRevision","renderedTileZ","originalXHR","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","ClientError","client","getJSON","setRequestHeader","resolveUrl","URL","href","$ol$render$VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","$ol$render$canvas$Immediate","VectorContext","viewRotation","userTransform","transformRotation_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","beginPath","setTransform","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","acc","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","getBuilder","textReplay","LineString","lineStringReplay","polygonReplay","MultiPoint","hasImage","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","getVectorContext","CanvasRenderingContext2D","canvasPixelRatio","multiplyTransform","CanvasImmediateRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","u2","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","fromResolutionLike","ERROR_THRESHOLD","$ol$reproj$Triangulation","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","$ol$reproj$Tile","sourceTileGrid","targetTileGrid","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileEventType","adaptAttributions","attributionLike","$ol$source$Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","tmpTileCoord","$ol$tilegrid$TileGrid","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","$ol$tilegrid$WMTS","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","substr","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","$ol$source$Tile","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","$ol$source$UrlTile","defaultTileLoadFunction","imageTile","$ol$source$TileImage","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","tileUrl","getTileInternal","newTile","ReprojTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","quadKey","digits","mask","$ol$source$BingMaps","TileImage","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","params","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","$ol$source$XYZ","$ol$structs$RBush","rbush_","RBush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","setCenterAndRadius","getRadiusSquared_","$ol$geom$Circle","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","$ol$geom$GeometryCollection","interpolatePoint","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringsCoordinateAtM","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","$ol$geom$LineString","lineStrings","appendLineString","multiLineString","getLineString","getLineStrings","midpoints","$ol$geom$MultiLineString","appendPoint","multiPoint","getPoint","$ol$geom$MultiPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","linearRingssArea","linearRingssCenter","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","$ol$geom$MultiPolygon","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","midpoint","enableSimplifyTransformed","toGeometry","$ol$render$Feature","VectorEventType","VectorSourceEvent","$ol$source$Vector","format_","overlaps_","overlaps","url_","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","$ol$source$Cluster","VectorSource","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","$ol$reproj$DataTile","DataTile","reprojData_","reprojError_","reprojSize_","dataSources","tileData","arrayData","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataType","targetWidth","targetHeight","dataR","dataU","reproj","dataSource","createImageData","putImageData","$ol$source$DataTile","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getReprojTile_","reprojTilePixelRatio","textureSize","ReprojDataTile","sourceLoader","$ol$source$Google","highDpi","sessionTokenRequest","mapType","language","region","imageFormat","layerTypes","sessionTokenRequest_","sessionRefreshId_","createSession_","fetchSessionToken","config","createSessionUrl","method","headers","ok","sessionTokenResponse","session","expiry","$ol$reproj$Image","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","DECIMALS","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","getRequestExtent","imageResolution","$ol$source$Image","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","ReprojImage","requestExtent","handleImageChange","appendParams","uri","keyParams","encodeURIComponent","qs","getRequestUrl","baseUrl","srid","createLoader","F","FORMAT","TRANSPARENT","$ol$source$ImageArcGISRest","ImageSource","imageLoadFunction_","imageLoadFunction","params_","imageSize_","renderedRevision_","ratio_","loaderProjection_","getParams","getImageLoadFunction","setImageLoadFunction","updateParams","$ol$source$ImageCanvas","canvasFunction_","canvasFunction","canvasElement","ImageCanvas","imageExtent","resolutionX","resolutionY","$ol$source$ImageStatic","imageExtent_","getImageExtent","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","SERVICE","VERSION","STYLES","getFeatureInfoUrl","projectionObj","baseParams","QUERY_LAYERS","INFO_FORMAT","getLegendUrl","LAYERS","mpu","$ol$source$ImageWMS","serverType_","sourceProjectionObj","knownMapMediaTypes","knownVectorMediaTypes","getMapTileUrlTemplate","links","mediaType","tileUrlTemplate","fallbackUrlTemplate","link","rel","startsWith","getVectorTileUrlTemplate","supportedMediaTypes","hrefLookup","supportedMediaType","parseTileMatrixSet","sourceInfo","tileMatrixSet","tileMatrixSetLimits","crs","orderedAxes","backwards","matrices","tileMatrices","matrixLookup","matrix","limitLookup","limit","tileMatrix","pointOfOrigin","cellSize","matrixWidth","matrixHeight","tileMapWidth","minTileCol","maxTileCol","tileMapHeight","cornerOfOrigin","minTileRow","maxTileRow","intersectExtents","grid","urlTemplate","urlFunction","upsideDown","localContext","tileCol","tileRow","getTileSetInfo","tileSet","tileMatrixSetLink","tileMatrixSetDefinition","parseTileSetMetadata","$ol$source$OGCMapTile","handleTileSetInfo_","handleError_","tileSetInfo","logError","ATTRIBUTION","$ol$source$OSM","XYZ","$ol$layer$BaseImage","$ol$renderer$Layer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$ol$render$canvas$ZIndexContext","instructions_","Proxy","pushMethodArgs_","draw","instructionsAtIndex","instructionAtIndex","pixelContext","$ol$renderer$canvas$Layer","LayerRenderer","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","ZIndexContext","getRenderTransform","$ol$renderer$canvas$ImageLayer","CanvasLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imageResolutionX","imageResolutionY","viewCenter","canvasTransform","toTransformString","clipped","dw","dh","$ol$layer$Image","BaseImageLayer","CanvasImageLayerRenderer","TileProperty","$ol$layer$BaseTile","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ol$renderer$canvas$TileLayer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileOrigin","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","$ol$layer$Tile","BaseTileLayer","CanvasTileLayerRenderer","hasImageData","ImageData","newImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","images","arrays","pixels","createWorker","onMessage","lines","lib","worker","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","postMessage","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","RasterEventType","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","layerOrSource","TileLayer","ImageLayer","$ol$source$Raster","LayerConfig","stamen_terrain","stamen_terrain_background","stamen_terrain_labels","stamen_terrain_lines","stamen_toner_background","stamen_toner","stamen_toner_labels","stamen_toner_lines","stamen_toner_lite","stamen_watercolor","alidade_smooth","alidade_smooth_dark","outdoors","osm_bright","ProviderConfig","retina","$ol$source$StadiaMaps","provider","providerConfig","layerConfig","query","apiKey","OSM_ATTRIBUTION","$ol$source$TileArcGISRest","getKeyForParams_","getRequestUrl_","tileExtent","$ol$source$TileDebug","strokeRect","$ol$source$TileJSON","tileJSON_","requestJSONP","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","$ol$source$TileWMS","transparent","v13_","updateV13_","sourceProjCoord","version","CustomTile","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","$ol$source$UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","$ol$source$WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","getAttributeNS","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","nextElementSibling","pushParseAndPop","pushSerializeAndPop","xmlSerializer_","document_","getXMLSerializer","XMLSerializer","implementation","createDocument","fromTransform","mat4","$ol$structs$LinkedList","first_","last_","head_","circular_","length_","insertItem","next","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","$ol$render$canvas$Builder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillPatternScale","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$ol$render$canvas$ImageBuilder","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","$ol$render$canvas$LineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$ol$render$canvas$PolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$ol$render$canvas$TextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","ImageBuilder","LineStringBuilder","TextBuilder","$ol$render$canvas$BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","$ol$render$canvas$Executor","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","pixelIndex","$ol$render$canvas$ExecutorGroup","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","idx","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","zIndexContexts","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","$ol$renderer$canvas$VectorLayer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","getSquaredRenderTolerance","lastIndexOf","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","replayGroupInstructions","ExecutorGroup","$ol$renderer$canvas$VectorImageLayer","vectorRenderer_","CanvasVectorLayerRenderer","layerImageRatio_","getImageRatio","coordinateToVectorPixelTransform_","renderedPixelToCoordinateTransform_","vectorPixel","vectorRenderer","imageLayerState","imageFrameState","emptyImage","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","epsgLookup","$ol$layer$Vector","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","meridian","lon","frac","parallel","lon2","DEFAULT_STROKE_STYLE","INTERVALS","$ol$layer$Graticule","VectorLayer","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","lonLabelStyle_","latLabelStyleBase_","latLabelStyle_","drawLabels_","intervals_","loaderFunction","strategyFunction","featurePool_","lineStyle_","loadedExtent_","realWorldExtent","renderExtent","equivalentProjection","updateProjectionInfo_","createGraticule_","featuresColl","poolIndex","addMeridian_","minLat","maxLat","getMeridian_","geom","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","unrotatedWidth","unrotatedHeight","startWorld","labelsAtStart","vectorContext","textPoint","getMeridianPoint_","getParallelPoint_","getInterval_","validCenterP","centerLonLat","centerLon","centerLat","cnt","validExtentP","validExtent","clampedLat","clampedBottom","clampedTop","getMeridians","clampedLeft","clampedRight","getParallels","toLonLatTransform","lonLatCoordinates","worldExtentP","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","DYNAMIC_DRAW","CONTEXT_IDS","BufferUsage","WebGLArrayBuffer","usage","usage_","ofSize","getArrayClassForType","fromArray","fromArrayBuffer","getUsage","Uint32Array","ContextEventType","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","depthBuffer_","createRenderbuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","bindRenderbuffer","RENDERBUFFER","getDepthBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","clearDepth","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","DEPTH_TEST","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","texture","uniform3f","uniform4f","DefaultUniform","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getOrCreateContext","cacheItem","antialias","users","WebGLHelper","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","getUniqueCanvasCacheKey","bufferCache_","extensionCache_","currentProgram_","needsToBeRecreated_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","addUniforms","canvasCacheKeyMatches","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","disableAlphaBlend","enableDepth","getCanvas","depthRange","ZERO","depthFunc","LEQUAL","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getDepthbuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","applyFrameState","setUniformFloatValue","setUniformFloatVec2","applyHitDetectionUniform","loc","WebGLTexture","prevValue","imageReady","setUniformMatrixValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attr","getByteSizeFromType","computeAttributesStride","needsToBeRecreated","Uint16Array","WebGLLayerRenderer","inversePixelTransform_","postProcesses_","helper","removeHelper","dispatchPreComposeEvent","dispatchPostComposeEvent","incrementGroup","groupNumber","afterHelperCreated","prepareFrameInternal","tmpArray4","WebGLRenderTarget","helper_","texture_","framebuffer_","depthbuffer_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","WebGLWorkerMessageType","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","filterPoints","again","ear","zOrder","prevZ","nextZ","q","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","ax","bx","cx","ay","by","cy","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","hx","hy","qx","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","py","intersectsPolygon","inside","middleInside","q1","q2","o1","sign","o2","o3","o4","onSegment","num","an","bp","sum","earcutModule","exports","default","deviation","polygonArea","trianglesArea","flatten","holes","holeIndex","colorEncodeId","radix","divide","WebGLPointsLayerRenderer","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","vertexShader_","fragmentShader_","program_","hitDetectionEnabled_","hitDetectionEnabled","customAttributes","attribute","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderTarget_","lastSentId","worker_","createWebGLWorker","received","projectionTransform","vertexBuffer","indexBuffer","makeInverseTransform","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","getWorldParameters","viewNotMoving","sourceChanged","BaseVector","rebuildBuffers_","singleInstructionLength","totalSize","featureCache","tmpCoords","tmpColor","featureUid","userCoords","hitColor","customAttributesSize","mult","colorDecodeId","forHitDetection","translateTransform","renderCount","PaletteTexture","NEAREST","TEXTURE_MAG_FILTER","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","PATTERN_ORIGIN","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","numberToGlsl","arrayToGlsl","colorToGlsl","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","createCompiler","compile","compilers","propName","inFragmentShader","compiledArgs","firstValue","secondValue","exponent","stop1","stop2","funcName","functions","computeOperatorFunctionName","tests","band","xOffset","yOffset","ifBlocks","colorIndex","bandIndex","numColors","palette","paletteTextures","paletteName","paletteTexture","compiler","COMMON_HEADER","DEFAULT_STYLE","ShaderBuilder","attributes_","varyings_","hasSymbol_","symbolSizeExpression_","symbolRotationExpression_","symbolOffsetExpression_","symbolColorExpression_","texCoordExpression_","discardExpression_","symbolRotateWithView_","hasStroke_","strokeWidthExpression_","strokeColorExpression_","strokeOffsetExpression_","strokeCapExpression_","strokeJoinExpression_","strokeMiterLimitExpression_","strokeDistanceFieldExpression_","hasFill_","fillColorExpression_","vertexShaderFunctions_","fragmentShaderFunctions_","addUniform","addAttribute","addVarying","setSymbolSizeExpression","getSymbolSizeExpression","setSymbolRotationExpression","setSymbolOffsetExpression","getSymbolOffsetExpression","setSymbolColorExpression","getSymbolColorExpression","setTextureCoordinateExpression","setFragmentDiscardExpression","getFragmentDiscardExpression","setSymbolRotateWithView","setStrokeWidthExpression","setStrokeColorExpression","getStrokeColorExpression","setStrokeOffsetExpression","setStrokeCapExpression","setStrokeJoinExpression","setStrokeMiterLimitExpression","setStrokeDistanceFieldExpression","setFillColorExpression","getFillColorExpression","addVertexShaderFunction","addFragmentShaderFunction","getSymbolVertexShader","varying","getSymbolFragmentShader","getStrokeVertexShader","getStrokeFragmentShader","getFillVertexShader","getFillFragmentShader","DEFAULT_GRADIENT","$ol$layer$Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","createLinearGradient","addColorStop","createGradient","builder","u_size","u_blurSlope","u_gradientTexture","u_opacity","$ol$layer$VectorImage","imageRatio","imageRatio_","CanvasVectorImageLayerRenderer","$ol$interaction$DblClickDragZoom","opt_options","scaleDeltaByPixel_","handlingDownUpSequence_","handlingDoubleDownSequence_","doubleTapTimeoutId_","trackedPointers_","waitForDblTap_","isPointerDraggingEvent","DragAndDropEventType","DragAndDropEvent","file","$ol$interaction$DragAndDrop","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","source_","handleResult_","formats","TextDecoder","tryReadFeatures_","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","$ol$interaction$DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","DrawEventType","DrawEvent","getSquaredDistance","getCoordinate","getCumulativeSquaredDistance","endIndex","lowIndex","highIndex","lowWholeIndex","highWholeIndex","interpolateCoordinate","appendGeometryTraceTargets","targets","appendTraceTarget","polys","sharedUpdateInfo","ring","getPointSegmentRelationship","sharedRel","getDefaultStyleFunction","$ol$interaction$Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","pointerType_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryLayout_","geometryLayout","mode","squaredLength","squaredCoordinateDistance","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","traceCondition_","setTrace","trace","traceState_","traceSource_","traceSource","updateState_","getOverlay","move","addToDrawing_","startDrawing_","deactivateTrace_","toggleTraceState_","getTraceTargets","startPx","targetIndex","addOrRemoveTracedCoordinates_","previouslyForward","addTracedCoordinates_","removeTracedCoordinates_","fromIndex","toIndex","removeLastPoints_","appendCoordinates","updateTrace_","traceState","updatedTraceTarget","closestTargetDistance","newTargetIndex","newEndIndex","minSegmentDistance","coordinateIndex","newTarget","considerBothDirections","newCoordinate","forwardDistance","reverseDistance","getTraceTargetUpdate","oldTarget","tracing","startingToDraw","finishDrawing","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","createOrUpdateCustomSketchLine_","sketchLineGeom","removeLastPoint","sketchFeature","abortDrawing_","newDrawing","ending","sketchFeatures","overlaySource","ExtentEventType","ExtentEvent","getDefaultExtentStyleFunction","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","$ol$interaction$Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","sortByDistance","getExtentInternal","segments","getSegments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","readNumber","writeNumber","to5","differentNumber","$ol$interaction$Link","animationOptions","animationOptions_","replace_","prefix_","initial_","trackedCallbacks_","trackedValues_","getParamName_","get_","set_","delete_","oldMap","updateUrl_","handleChangeLayerGroup_","history","replaceState","updateView","viewProperties","layersParam","track","updateHistory_","visibilities","pushState","tempSegment","ModifyEventType","ModifyEvent","compareIndexes","projectedDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","$ol$interaction$Modify","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","featuresBeingModified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","hitDetection_","handleSourceAdd_","handleSourceRemove_","hitDetection","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","snapToPointer_","snapToPointer","writer","handlePointerAtPixel_","willModifyFeatures_","ss","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","hitPointGeometry","bufferExtent","vertexSegments","geometryUid","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","deleted","SelectEventType","SelectEvent","selected","deselected","originalFeatureStyles","Select","boundAddFeature_","boundRemoveFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","removeFeatureLayerAssociation_","$ol$interaction$Select","SnapEventType","SnapEvent","getFeatureFromEvent","$ol$interaction$Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","feature_uid","segmenter","segmentsData","getFeatures_","snapTo","updateFeature_","featuresToUpdate","unregister","currentMap","projectedCoordinate","segmentsLength","closestVertex","squaredPixelTolerance","getResult","tempVertexCoord","segmentStart","segmentEnd","TranslateEventType","TranslateEvent","startCoordinate","$ol$interaction$Translate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newViewCoordinate","lastViewCoordinate","flipXY","destOffset","$ol$format$Feature","defaultFeatureProjection","featureClass","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","transformExtentWithOptions","GeometryConstructor","createRenderFeature","orientFlatCoordinates","createGeometry","XMLFeature","FeatureFormat","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","dateTime","readDecimal","readDecimalString","readPositiveInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","AUTHOR_PARSERS","email","getAttribute","domain","parseLink","METADATA_PARSERS","desc","author","copyright","COPYRIGHT_PARSERS","keywords","bounds","minlat","minlon","maxlat","maxlon","extensions","parseExtensions","year","license","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","RTE_PARSERS","cmt","rtept","RTEPT_PARSERS","rteValues","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GPX_NODE_FACTORY","layoutOptions","hasZ","hasM","applyLayoutOptions","setAttributeNS","$ol$format$GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","readMetadata","readMetadataFromDocument","readMetadataFromNode","metadata","featureReader","gpx","getObject","$ol$format$JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readGeometryInternal","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","$ol$format$GeoJSON","JSONFeature","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","geometryObject","objects","$ol$format$TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","$ol$format$IGC","TextFeature","altitudeMode_","altitudeMode","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readStyleURL","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","readURI","CAMERA_PARSERS","Altitude","Longitude","Latitude","Tilt","AltitudeMode","Heading","Roll","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_TEXT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","defaultIconUrlFunction","findStyle","styleValue","defaultStyle","sharedStyles","readColor","hexColor","readFlatCoordinates","re","baseURI","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","flatLinearRings","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","iconUrlFunction_","resizeScale","LabelStyle","LineStyle","PolyStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","styleArray","writeStyles_","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","iconProperties","$ol$format$KML","defaultStyle_","extractStyles_","extractStyles","writeStyles","sharedStyles_","showPointNames_","showPointNames","iconUrlFunction","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","drawName","multiGeometryPoints","featureStyle","nameStyle","foundStyle","textOffset","createNameStyleFunction","createFeatureStyleFunction","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","readCamera","cameras","readCameraFromDocument","readCameraFromNode","kml","xmlnsUri","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","LN2","pbf","Pbf","require$$0","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","readPackedEnd","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","subarray","readUtf8TextDecoder","str","b3","b0","bytesPerSequence","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","$ol$format$MVT","featureClass_","layerName_","layerName","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","PBF","pbfLayers","pbfLayer","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","$ol$format$OSMXML","XML","readFromDocument","readFromNode","NAMESPACE_URI","readHref","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","$ol$format$OWS","owsObject","encodeDeltas","numbers","lastNumbers","encodeFloats","decodeDeltas","decodeFloats","encodeSignedIntegers","decodeSignedIntegers","encodeUnsignedIntegers","decodeUnsignedIntegers","encodeUnsignedInteger","current","$ol$format$Polyline","factor_","GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","geometryReader","transformArc","$ol$format$TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GMLNS","ONLY_WHITESPACE_RE","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","defaultPrefix","ns","featureTypes","readFeatureElement","readGeometryOrExtent","GEOMETRY_PARSERS","readExtentElement","readGeometryElement","readFeatureElementInternal","asFeature","_content_","fid","readMultiPoint","MULTIPOINT_PARSERS","readMultiLineString","MULTILINESTRING_PARSERS","readMultiPolygon","MULTIPOLYGON_PARSERS","pointMemberParser","POINTMEMBER_PARSERS","lineStringMemberParser","LINESTRINGMEMBER_PARSERS","polygonMemberParser","POLYGONMEMBER_PARSERS","internalOptions","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML2","containerSrs","coordsGroups","readBox","BOX_PARSERS_","innerBoundaryIsParser","outerBoundaryIsParser","GEOMETRY_NODE_FACTORY_","multiSurface","surface","multiCurve","writeFeatureElement","writeGeometryElement","writeCurveOrLineString","createCoordinatesNode_","writeCoordinates_","writeCurveSegments_","writeLineStringOrCurveMember","writeMultiCurveOrLineString","curve","LINESTRINGORCURVEMEMBER_SERIALIZERS","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","GEOMETRY_SERIALIZERS","getCoords_","writeSurfaceOrPolygon","RING_SERIALIZERS","RING_NODE_FACTORY_","patches","writeSurfacePatches_","exteriorWritten","writeRing","writeLinearRing","writePoint","writeMultiPoint","POINTMEMBER_SERIALIZERS","writePointMember","writeMultiSurfaceOrPolygon","SURFACEORPOLYGONMEMBER_SERIALIZERS","writeSurfaceOrPolygonMember","writeEnvelope","ENVELOPE_SERIALIZERS","Box","Curve","Surface","Envelope","curveMember","surfaceMember","lowerCorner","upperCorner","GML3","surface_","curve_","multiCurve_","multiSurface_","readMultiCurve","MULTICURVE_PARSERS","readFlatCurveRing","readMultiSurface","MULTISURFACE_PARSERS","curveMemberParser","CURVEMEMBER_PARSERS","surfaceMemberParser","SURFACEMEMBER_PARSERS","readPatch","PATCHES_PARSERS","readSegment","SEGMENTS_PARSERS","readPolygonPatch","readLineStringSegment","interiorParser","exteriorParser","readSurface","SURFACE_PARSERS","readCurve","CURVE_PARSERS","readEnvelope","ENVELOPE_PARSERS","readFlatPos","readFlatPosList","contextDimension","writePos_","srsDimension","writePosList_","posList","writeFeatureMembers_","interior","exterior","curveMembers","surfaceMembers","PolygonPatch","LineStringSegment","Ring","GML3$1","GML32","GML32$1","Filter","tagName_","getTagName","LogicalNary","And$1","Bbox","boundedBy","member","TRANSACTION_SUMMARY_PARSERS","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","readTransactionSummary","InsertResults","readInsertResults","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","Update","writeUpdate","Delete","writeDelete","writeProperty","Native","writeNative","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","GML_FORMATS","serializeTransactionRequest","OGC_FID_PARSERS","FeatureId","fidParser","INSERT_RESULTS_PARSERS","gmlVersion","writeOgcFidFilter","getTypeName","featurePrefix","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","writeQuery","During","writeDuringFilter","And","writeLogicalFilter","Or","writeNotFilter","BBOX","writeBboxFilter","Contains","writeSpatialFilter","Intersects","Within","DWithin","writeDWithinFilter","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","writeIsNullFilter","PropertyIsBetween","writeIsBetweenFilter","PropertyIsLike","writeIsLikeFilter","Disjoint","ResourceId","propertyNames","typeNameAttr","getFilterNS","writeFilterCondition","writePropertyName","unit","writeExpression","propertyName","timePeriod","writeTimeInstant","matchCase","writeLiteral","lowerBoundary","upperBoundary","wildCard","singleChar","escapeChar","timeInstant","timePosition","writeGetFeature","$ol$format$WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","featuresNS","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","handle","outputFormat","maxFeatures","resultType","viewParams","combineBboxAndFilter","completeFilter","bboxFilter","bboxFilterFn","Function","andFilterFn","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","createTransactionRequest","nativeElements","$ol$format$WMSGetFeatureInfo","readFeatures_","layerElement","toRemove","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","readBoundingBox","BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","$ol$format$WMTSCapabilities","owsParser_","OWS","WMTSCapabilityObject","events","FullScreenEventType","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","$ol$control$FullScreen","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","PROJECTION","COORDINATE_FORMAT","$ol$control$MousePosition","coordinateFormat","setCoordinateFormat","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","MAX_RATIO","MIN_RATIO","$ol$control$OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","viewExtent_","ovmapDiv_","view_","ovmap","Map","ovmap_","boxSizing","boxOverlay_","Overlay","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","updateBox_","ovresolution","ovmapPostrenderKey_","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","$ol$control$ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","Direction","$ol$control$ZoomSlider","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","$ol$control$ZoomToExtent","handleZoomToExtent","ol","$ol$Collection","_ol_Collection$CollectionEvent","_ol_DataTile$asArrayLike","_ol_DataTile$asImageLike","_ol_DataTile$toArray","_ol_Feature$createStyleFunction","Geolocation","_ol_Geolocation$GeolocationError","_ol_Image$decode","_ol_Image$decodeFallback","_ol_Image$listenImage","_ol_Image$load","_ol_Object$ObjectEvent","_ol_Observable$unByKey","_ol_TileQueue$getTilePriority","_ol_TileRange$createOrUpdate","VectorRenderTile","_ol_View$createCenterConstraint","_ol_View$createResolutionConstraint","_ol_View$createRotationConstraint","_ol_View$isNoopAnimation","_ol_array$ascending","_ol_array$binarySearch","_ol_array$descending","_ol_array$equals","_ol_array$extend","_ol_array$isSorted","_ol_array$linearFindNearest","_ol_array$reverseSubArray","stableSort","compareFnc","asserts","_ol_asserts$assert","centerconstraint","_ol_centerconstraint$createExtent","_ol_centerconstraint$none","_ol_color$asArray","_ol_color$asString","_ol_color$fromString","_ol_color$isStringColor","_ol_color$lchaToRgba","_ol_color$normalize","_ol_color$rgbaToLcha","_ol_color$toString","_ol_color$withAlpha","colorlike","_ol_colorlike$asColorLike","_ol_console$error","setLevel","_ol_console$warn","FullScreen","MousePosition","OverviewMap","ScaleLine","ZoomSlider","ZoomToExtent","_ol_control_defaults$defaults","_ol_coordinate$add","_ol_coordinate$closestOnCircle","_ol_coordinate$closestOnSegment","createStringXY","_ol_coordinate$degreesToStringHDMS","_ol_coordinate$distance","_ol_coordinate$equals","_ol_coordinate$format","_ol_coordinate$getWorldsAway","_ol_coordinate$rotate","_ol_coordinate$scale","_ol_coordinate$squaredDistance","_ol_coordinate$squaredDistanceToSegment","toStringHDMS","_ol_coordinate$toStringXY","_ol_coordinate$wrapX","css","_ol_css$CLASS_COLLAPSED","_ol_css$CLASS_CONTROL","_ol_css$CLASS_HIDDEN","_ol_css$CLASS_SELECTABLE","_ol_css$CLASS_UNSELECTABLE","_ol_css$CLASS_UNSUPPORTED","_ol_css$getFontParameters","dom","_ol_dom$createCanvasContext2D","_ol_dom$getSharedCanvasContext2D","_ol_dom$outerHeight","_ol_dom$outerWidth","_ol_dom$releaseCanvas","_ol_dom$removeChildren","_ol_dom$removeNode","_ol_dom$replaceChildren","_ol_dom$replaceNode","_ol_easing$easeIn","_ol_easing$easeOut","_ol_easing$inAndOut","_ol_easing$linear","upAndDown","_ol_events_Event$stopPropagation","_ol_events_SnapEvent$SnapEvent","_ol_events_condition$all","_ol_events_condition$altKeyOnly","_ol_events_condition$altShiftKeysOnly","_ol_events_condition$always","click","doubleClick","_ol_events_condition$focus","_ol_events_condition$focusWithTabindex","_ol_events_condition$mouseActionButton","_ol_events_condition$mouseOnly","_ol_events_condition$never","_ol_events_condition$noModifierKeys","penOnly","pointerEvt","_ol_events_condition$platformModifierKey","platformModifierKeyOnly","pointerMove","_ol_events_condition$primaryAction","_ol_events_condition$shiftKeyOnly","_ol_events_condition$singleClick","_ol_events_condition$targetNotEditable","touchOnly","_ol_events$listen","_ol_events$listenOnce","_ol_events$unlistenByKey","expr","cpu","_ol_expr_cpu$buildExpression","_ol_expr_cpu$newEvaluationContext","_ol_expr_expression$AnyType","_ol_expr_expression$BooleanType","_ol_expr_expression$CallExpression","_ol_expr_expression$ColorType","_ol_expr_expression$LiteralExpression","_ol_expr_expression$NoneType","_ol_expr_expression$NumberArrayType","_ol_expr_expression$NumberType","_ol_expr_expression$Ops","_ol_expr_expression$StringType","_ol_expr_expression$computeGeometryType","_ol_expr_expression$includesType","_ol_expr_expression$isType","_ol_expr_expression$newParsingContext","_ol_expr_expression$overlapsType","_ol_expr_expression$parse","_ol_expr_expression$typeName","gpu","_ol_expr_gpu$PALETTE_TEXTURE_ARRAY","_ol_expr_gpu$arrayToGlsl","compilationContext","_ol_expr_gpu$colorToGlsl","_ol_expr_gpu$getStringNumberEquivalent","newCompilationContext","_ol_expr_gpu$numberToGlsl","_ol_expr_gpu$stringToGlsl","_ol_expr_gpu$uniformNameForVariable","_ol_extent$applyTransform","_ol_extent$approximatelyEquals","_ol_extent$boundingExtent","_ol_extent$buffer","_ol_extent$clone","_ol_extent$closestSquaredDistanceXY","_ol_extent$containsCoordinate","_ol_extent$containsExtent","_ol_extent$containsXY","_ol_extent$coordinateRelationship","_ol_extent$createEmpty","_ol_extent$createOrUpdate","_ol_extent$createOrUpdateEmpty","_ol_extent$createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","_ol_extent$createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","_ol_extent$equals","_ol_extent$extend","_ol_extent$extendCoordinate","_ol_extent$extendCoordinates","_ol_extent$extendFlatCoordinates","_ol_extent$extendRings","_ol_extent$extendXY","_ol_extent$forEachCorner","_ol_extent$getArea","_ol_extent$getBottomLeft","_ol_extent$getBottomRight","_ol_extent$getCenter","_ol_extent$getCorner","getEnlargedArea","_ol_extent$getForViewAndSize","_ol_extent$getHeight","_ol_extent$getIntersection","getIntersectionArea","getMargin","_ol_extent$getRotatedViewport","_ol_extent$getTopLeft","_ol_extent$getTopRight","_ol_extent$getWidth","_ol_extent$intersects","_ol_extent$intersectsSegment","_ol_extent$isEmpty","_ol_extent$returnOrUpdate","_ol_extent$scaleFromCenter","_ol_extent$wrapAndSliceX","_ol_extent$wrapX","featureloader","_ol_featureloader$loadFeaturesXhr","setWithCredentials","xhrWithCredentials","_ol_featureloader$xhr","_ol_format_Feature$createGeometry","_ol_format_Feature$createRenderFeature","_ol_format_Feature$transformExtentWithOptions","_ol_format_Feature$transformGeometryWithOptions","GPX","GeoJSON","IGC","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultStyle","getDefaultStyleArray","getDefaultTextStyle","_ol_format_KML$readFlatCoordinates","MVT","OSMXML","Polyline","_ol_format_Polyline$decodeDeltas","_ol_format_Polyline$decodeFloats","_ol_format_Polyline$decodeSignedIntegers","_ol_format_Polyline$decodeUnsignedIntegers","_ol_format_Polyline$encodeDeltas","_ol_format_Polyline$encodeFloats","_ol_format_Polyline$encodeSignedIntegers","_ol_format_Polyline$encodeUnsignedInteger","_ol_format_Polyline$encodeUnsignedIntegers","TopoJSON","WFS","writeFilter","WMSGetFeatureInfo","WMTSCapabilities","xlink","_ol_format_xlink$readHref","xsd","_ol_format_xsd$readBoolean","_ol_format_xsd$readBooleanString","_ol_format_xsd$readDateTime","_ol_format_xsd$readDecimal","_ol_format_xsd$readDecimalString","_ol_format_xsd$readNonNegativeIntegerString","_ol_format_xsd$readPositiveInteger","_ol_format_xsd$readString","_ol_format_xsd$writeBooleanTextNode","_ol_format_xsd$writeCDATASection","_ol_format_xsd$writeDateTimeTextNode","_ol_format_xsd$writeDecimalTextNode","_ol_format_xsd$writeNonNegativeIntegerTextNode","_ol_format_xsd$writeStringTextNode","_ol_functions$FALSE","_ol_functions$TRUE","_ol_functions$VOID","_ol_functions$memoizeOne","_ol_functions$toPromise","_ol_geom_Polygon$circular","_ol_geom_Polygon$fromCircle","_ol_geom_Polygon$fromExtent","_ol_geom_Polygon$makeRegular","_ol_geom_SimpleGeometry$getLayoutForStride","_ol_geom_SimpleGeometry$getStrideForLayout","_ol_geom_SimpleGeometry$transformGeom2D","_ol_geom_flat_area$linearRing","_ol_geom_flat_area$linearRings","_ol_geom_flat_area$linearRingss","_ol_geom_flat_center$linearRingss","closest","_ol_geom_flat_closest$arrayMaxSquaredDelta","_ol_geom_flat_closest$assignClosestArrayPoint","_ol_geom_flat_closest$assignClosestMultiArrayPoint","_ol_geom_flat_closest$assignClosestPoint","_ol_geom_flat_closest$maxSquaredDelta","_ol_geom_flat_closest$multiArrayMaxSquaredDelta","_ol_geom_flat_contains$linearRingContainsExtent","_ol_geom_flat_contains$linearRingContainsXY","_ol_geom_flat_contains$linearRingsContainsXY","_ol_geom_flat_contains$linearRingssContainsXY","deflate","_ol_geom_flat_deflate$deflateCoordinate","_ol_geom_flat_deflate$deflateCoordinates","_ol_geom_flat_deflate$deflateCoordinatesArray","_ol_geom_flat_deflate$deflateMultiCoordinatesArray","flip","_ol_geom_flat_flip$flipXY","geodesic","greatCircleArc","geoProjection","cosLat1","sinLat1","cosLat2","sinLat2","cosDeltaLon","sinDeltaLon","D","cosD","sinD","_ol_geom_flat_geodesic$meridian","_ol_geom_flat_geodesic$parallel","inflate","_ol_geom_flat_inflate$inflateCoordinates","_ol_geom_flat_inflate$inflateCoordinatesArray","_ol_geom_flat_inflate$inflateMultiCoordinatesArray","interiorpoint","_ol_geom_flat_interiorpoint$getInteriorPointOfArray","_ol_geom_flat_interiorpoint$getInteriorPointsOfMultiArray","_ol_geom_flat_interpolate$interpolatePoint","_ol_geom_flat_interpolate$lineStringCoordinateAtM","_ol_geom_flat_interpolate$lineStringsCoordinateAtM","intersectsextent","_ol_geom_flat_intersectsextent$intersectsLineString","_ol_geom_flat_intersectsextent$intersectsLineStringArray","_ol_geom_flat_intersectsextent$intersectsLinearRing","_ol_geom_flat_intersectsextent$intersectsLinearRingArray","_ol_geom_flat_intersectsextent$intersectsLinearRingMultiArray","_ol_geom_flat_length$lineStringLength","linearRingLength","perimeter","orient","_ol_geom_flat_orient$inflateEnds","_ol_geom_flat_orient$linearRingIsClockwise","_ol_geom_flat_orient$linearRingsAreOriented","_ol_geom_flat_orient$linearRingssAreOriented","_ol_geom_flat_orient$orientLinearRings","_ol_geom_flat_orient$orientLinearRingsArray","_ol_geom_flat_reverse$coordinates","_ol_geom_flat_segments$forEach","_ol_geom_flat_simplify$douglasPeucker","_ol_geom_flat_simplify$douglasPeuckerArray","douglasPeuckerMultiArray","_ol_geom_flat_simplify$quantize","_ol_geom_flat_simplify$quantizeArray","_ol_geom_flat_simplify$quantizeMultiArray","_ol_geom_flat_simplify$radialDistance","simplifyLineString","highQuality","_ol_geom_flat_simplify$snap","straightchunk","_ol_geom_flat_straightchunk$matchingChunk","textpath","_ol_geom_flat_textpath$drawTextOnPath","topology","lineStringIsClosed","lastCoord","_ol_geom_flat_transform$rotate","_ol_geom_flat_transform$scale","_ol_geom_flat_transform$transform2D","_ol_geom_flat_transform$translate","has","_ol_has$CREATE_IMAGE_BITMAP","_ol_has$DEVICE_PIXEL_RATIO","_ol_has$FIREFOX","_ol_has$IMAGE_DECODE","_ol_has$MAC","_ol_has$PASSIVE_EVENT_LISTENERS","_ol_has$SAFARI","_ol_has$SAFARI_BUG_237906","_ol_has$WEBKIT","_ol_has$WORKER_OFFSCREEN_CANVAS","DblClickDragZoom","DragAndDrop","_ol_interaction_DragAndDrop$DragAndDropEvent","_ol_interaction_DragBox$DragBoxEvent","DragRotateAndZoom","Draw","_ol_interaction_Draw$DrawEvent","createBox","boxCoordinates","createRegularPolygon","internalAngle","Extent","_ol_interaction_Extent$ExtentEvent","_ol_interaction_Interaction$pan","_ol_interaction_Interaction$zoomByDelta","Modify","_ol_interaction_Modify$ModifyEvent","Pointer","_ol_interaction_Pointer$centroid","_ol_interaction_Select$SelectEvent","Snap","Translate","_ol_interaction_Translate$TranslateEvent","_ol_interaction_defaults$defaults","Base","BaseImage","BaseTile","Graticule","Group","_ol_layer_Group$GroupEvent","Heatmap","_ol_layer_Layer$inView","Vector","VectorImage","loadingstrategy","_ol_loadingstrategy$all","math","_ol_math$ceil","_ol_math$clamp","_ol_math$floor","_ol_math$lerp","_ol_math$modulo","_ol_math$round","_ol_math$solveLinearSystem","_ol_math$squaredDistance","_ol_math$squaredSegmentDistance","_ol_math$toDegrees","_ol_math$toFixed","_ol_math$toRadians","net","_ol_net$ClientError","_ol_net$ResponseError","_ol_net$getJSON","_ol_net$jsonp","overrideXHR","_ol_net$resolveUrl","restoreXHR","_ol_obj$clear","_ol_obj$isEmpty","Units","_ol_proj_Units$METERS_PER_UNIT","fromCode","_ol_proj$addCommon","_ol_proj$addCoordinateTransforms","_ol_proj$addEquivalentProjections","_ol_proj$addEquivalentTransforms","_ol_proj$addProjection","_ol_proj$addProjections","clearAllProjections","clearProj","clearTransformFuncs","clearUserProjection","_ol_proj$cloneTransform","_ol_proj$createProjection","_ol_proj$createSafeCoordinateTransform","_ol_proj$createTransformFromCoordinateTransform","_ol_proj$disableCoordinateWarning","epsg3857","_ol_proj_epsg3857$EXTENT","_ol_proj_epsg3857$HALF_SIZE","_ol_proj_epsg3857$MAX_SAFE_Y","_ol_proj_epsg3857$PROJECTIONS","_ol_proj_epsg3857$RADIUS","_ol_proj_epsg3857$WORLD_EXTENT","_ol_proj_epsg3857$fromEPSG4326","_ol_proj_epsg3857$toEPSG4326","epsg4326","_ol_proj_epsg4326$EXTENT","_ol_proj_epsg4326$METERS_PER_UNIT","_ol_proj_epsg4326$PROJECTIONS","_ol_proj_epsg4326$RADIUS","_ol_proj$equivalent","fromLonLat","_ol_proj$fromUserCoordinate","_ol_proj$fromUserExtent","_ol_proj$fromUserResolution","_ol_proj$get","_ol_proj$getPointResolution","_ol_proj$getTransform","_ol_proj$getTransformFromProjections","_ol_proj$getUserProjection","_ol_proj$identityTransform","epsgLookupMapTiler","results","defaultTransform","fromEPSGCode","epsgCode","getEPSGLookup","isRegistered","_ol_proj_proj4$register","setEPSGLookup","_ol_proj_projections$add","_ol_proj_projections$clear","_ol_proj_projections$get","_ol_proj$setUserProjection","toLonLat","lonLat","_ol_proj$toUserCoordinate","_ol_proj$toUserExtent","_ol_proj$toUserResolution","_ol_proj$transform","_ol_proj$transformExtent","transformWithProjections","_ol_proj_transforms$add","_ol_proj_transforms$clear","_ol_proj_transforms$get","useGeographic","toFeature","_ol_render_Feature$toGeometry","BuilderGroup","_ol_render_canvas_ExecutorGroup$ALL","_ol_render_canvas_ExecutorGroup$DECLUTTER","_ol_render_canvas_ExecutorGroup$NON_DECLUTTER","_ol_render_canvas_ExecutorGroup$getPixelIndexArray","Immediate","_ol_render_canvas_Instruction$beginPathInstruction","_ol_render_canvas_Instruction$closePathInstruction","_ol_render_canvas_Instruction$fillInstruction","_ol_render_canvas_Instruction$strokeInstruction","_ol_render_canvas_TextBuilder$TEXT_ALIGN","_ol_render_canvas$checkedFonts","_ol_render_canvas$defaultFillStyle","_ol_render_canvas$defaultFont","_ol_render_canvas$defaultLineCap","_ol_render_canvas$defaultLineDash","defaultLineDashOffset","_ol_render_canvas$defaultLineJoin","defaultLineWidth","_ol_render_canvas$defaultMiterLimit","_ol_render_canvas$defaultPadding","_ol_render_canvas$defaultStrokeStyle","_ol_render_canvas$defaultTextAlign","_ol_render_canvas$defaultTextBaseline","_ol_render_canvas$drawImageOrLabel","_ol_render_canvas$getTextDimensions","hitdetect","_ol_render_canvas_hitdetect$HIT_DETECT_RESOLUTION","_ol_render_canvas_hitdetect$createHitDetectionImageData","_ol_render_canvas_hitdetect$hitDetect","_ol_render_canvas$measureAndCacheTextWidth","_ol_render_canvas$measureTextHeight","_ol_render_canvas$measureTextWidth","_ol_render_canvas$registerFont","rotateAtOffset","_ol_render_canvas_style$buildRuleSet","_ol_render_canvas_style$buildStyle","_ol_render_canvas_style$flatStylesToStyleFunction","_ol_render_canvas_style$rulesToStyleFunction","_ol_render_canvas$textHeights","getRenderPixel","_ol_render$getVectorContext","toContext","scaleTransform","Composite","_ol_renderer_canvas_Layer$canvasPool","VectorImageLayer","vector","_ol_renderer_vector$defaultOrder","_ol_renderer_vector$getSquaredTolerance","_ol_renderer_vector$getTolerance","_ol_renderer_vector$renderFeature","_ol_reproj$calculateSourceExtentResolution","_ol_reproj$calculateSourceResolution","_ol_reproj$canvasPool","common","_ol_reproj_common$ERROR_THRESHOLD","_ol_reproj$render","_ol_resolution$fromResolutionLike","resolutionconstraint","_ol_resolutionconstraint$createMinMaxResolution","_ol_resolutionconstraint$createSnapToPower","_ol_resolutionconstraint$createSnapToResolutions","rotationconstraint","_ol_rotationconstraint$createSnapToN","_ol_rotationconstraint$createSnapToZero","_ol_rotationconstraint$disable","_ol_rotationconstraint$none","_ol_size$hasArea","_ol_size$scale","_ol_size$toSize","BingMaps","_ol_source_BingMaps$quadKey","Cluster","Google","_ol_source_Image$ImageSourceEvent","_ol_source_Image$defaultImageLoadFunction","_ol_source_Image$getRequestExtent","ImageArcGISRest","ImageStatic","ImageWMS","OGCMapTile","OSM","_ol_source_OSM$ATTRIBUTION","Raster","_ol_source_Raster$Processor","_ol_source_Raster$RasterSourceEvent","_ol_source_Raster$newImageData","StadiaMaps","_ol_source_Tile$TileSourceEvent","TileArcGISRest","TileDebug","TileJSON","TileWMS","UTFGrid","_ol_source_UTFGrid$CustomTile","_ol_source_Vector$VectorSourceEvent","WMTS","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","el","matrixSetObj","projConfig","switchXY","selectedMatrixLimit","tileMatrixValue","tileSpanX","tileSpanY","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","arcgisRest","_ol_source_arcgisRest$createLoader","_ol_source_arcgisRest$getRequestUrl","_ol_source_common$DECIMALS","DEFAULT_WMS_VERSION","ogcTileUtil","_ol_source_ogcTileUtil$getMapTileUrlTemplate","_ol_source_ogcTileUtil$getTileSetInfo","_ol_source_ogcTileUtil$getVectorTileUrlTemplate","sourcesFromTileGrid","sourceCache","tileGridExtent","wantedSources","static","_ol_source_static$createLoader","wms","_ol_source_wms$DEFAULT_VERSION","_ol_source_wms$createLoader","_ol_source_wms$getFeatureInfoUrl","_ol_source_wms$getImageSrc","_ol_source_wms$getLegendUrl","_ol_source_wms$getRequestParams","_ol_source_wms$getRequestUrl","sphere","_ol_sphere$DEFAULT_RADIUS","_ol_sphere$getDistance","_ol_sphere$offset","_ol_string$compareVersions","_ol_string$padNumber","structs","LinkedList","_ol_structs_PriorityQueue$DROP","_ol_style_IconImage$get","_ol_style_IconImageCache$getCacheKey","_ol_style_IconImageCache$shared","_ol_style_Style$createDefaultStyle","_ol_style_Style$createEditingStyle","_ol_style_Style$toFunction","_ol_style_flat$createDefaultStyle","tilecoord","_ol_tilecoord$createOrUpdate","_ol_tilecoord$fromKey","getCacheKeyForTileKey","_ol_tilecoord$getKey","_ol_tilecoord$getKeyZXY","_ol_tilecoord$hash","_ol_tilecoord$withinExtentAndZ","_ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet","_ol_tilegrid_common$DEFAULT_MAX_ZOOM","_ol_tilegrid_common$DEFAULT_TILE_SIZE","_ol_tilegrid$createForExtent","_ol_tilegrid$createForProjection","_ol_tilegrid$createXYZ","_ol_tilegrid$extentFromProjection","_ol_tilegrid$getForProjection","_ol_tilegrid$wrapX","tileurlfunction","_ol_tileurlfunction$createFromTemplate","_ol_tileurlfunction$createFromTemplates","_ol_tileurlfunction$createFromTileUrlFunctions","_ol_tileurlfunction$expandUrl","_ol_tileurlfunction$nullTileUrlFunction","_ol_transform$apply","_ol_transform$compose","composeCssTransform","_ol_transform$create","_ol_transform$determinant","invert","_ol_transform$makeInverse","_ol_transform$makeScale","_ol_transform$multiply","_ol_transform$reset","_ol_transform$rotate","_ol_transform$scale","_ol_transform$set","_ol_transform$setFromArray","_ol_transform$toString","_ol_transform$translate","_ol_uri$appendParams","util","_ol_util$abstract","_ol_util$getUid","vec","_ol_vec_mat4$create","_ol_vec_mat4$fromTransform","_ol_xml$OBJECT_PROPERTY_NODE_FACTORY","_ol_xml$XML_SCHEMA_INSTANCE_URI","_ol_xml$createElementNS","_ol_xml$getAllTextContent","_ol_xml$getAllTextContent_","_ol_xml$getAttributeNS","_ol_xml$getDocument","_ol_xml$getXMLSerializer","_ol_xml$isDocument","_ol_xml$makeArrayExtender","_ol_xml$makeArrayPusher","_ol_xml$makeArraySerializer","_ol_xml$makeChildAppender","_ol_xml$makeObjectPropertyPusher","_ol_xml$makeObjectPropertySetter","_ol_xml$makeReplacer","_ol_xml$makeSequence","_ol_xml$makeSimpleNodeFactory","_ol_xml$makeStructureNS","_ol_xml$parse","_ol_xml$parseNode","_ol_xml$pushParseAndPop","_ol_xml$pushSerializeAndPop","registerDocument","registerXMLSerializer","xmlSerializer","_ol_xml$serialize"],"mappings":"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","x_google_ignoreList":[71,72,75,76,77,78,79,80,81,82,245,278,279]}